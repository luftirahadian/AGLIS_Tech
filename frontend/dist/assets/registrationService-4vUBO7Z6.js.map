{"version":3,"file":"registrationService-4vUBO7Z6.js","sources":["../../src/services/registrationService.js"],"sourcesContent":["import api from './api'\n\nconst registrationService = {\n  // PUBLIC ROUTES (No auth required)\n  \n  /**\n   * Request OTP for WhatsApp verification\n   */\n  requestOTP: async (phone, full_name) => {\n    try {\n      const response = await api.post('/registrations/public/request-otp', {\n        phone,\n        full_name\n      })\n      return response\n    } catch (error) {\n      throw error\n    }\n  },\n\n  /**\n   * Verify OTP code\n   */\n  verifyOTP: async (phone, otp) => {\n    try {\n      const response = await api.post('/registrations/public/verify-otp', {\n        phone,\n        otp\n      })\n      return response\n    } catch (error) {\n      throw error\n    }\n  },\n\n  /**\n   * Submit public registration form\n   */\n  submitRegistration: async (data) => {\n    try {\n      const response = await api.post('/registrations/public', data)\n      return response\n    } catch (error) {\n      throw error\n    }\n  },\n\n  /**\n   * Track registration status by registration number or email\n   */\n  trackStatus: async (identifier) => {\n    try {\n      const response = await api.get(`/registrations/public/status/${identifier}`)\n      return response\n    } catch (error) {\n      throw error\n    }\n  },\n\n  // PROTECTED ROUTES (Require authentication)\n\n  /**\n   * Get all registrations with filters\n   */\n  getAll: async (params = {}) => {\n    try {\n      const queryString = new URLSearchParams(params).toString()\n      const response = await api.get(`/registrations?${queryString}`)\n      return response\n    } catch (error) {\n      throw error\n    }\n  },\n\n  /**\n   * Get registration statistics\n   */\n  getStats: async () => {\n    try {\n      const response = await api.get('/registrations/stats')\n      return response\n    } catch (error) {\n      throw error\n    }\n  },\n\n  /**\n   * Get single registration by ID\n   */\n  getById: async (id) => {\n    try {\n      const response = await api.get(`/registrations/${id}`)\n      return response\n    } catch (error) {\n      throw error\n    }\n  },\n\n  /**\n   * Update registration status\n   */\n  updateStatus: async (id, data) => {\n    try {\n      const response = await api.put(`/registrations/${id}/status`, data)\n      return response\n    } catch (error) {\n      throw error\n    }\n  },\n\n  /**\n   * Create customer and installation ticket from approved registration\n   */\n  createCustomer: async (id) => {\n    try {\n      const response = await api.post(`/registrations/${id}/create-customer`)\n      return response\n    } catch (error) {\n      throw error\n    }\n  }\n}\n\nexport default registrationService\n\n"],"names":["registrationService","phone","full_name","__async","api","error","otp","data","identifier","_0","params","queryString","id"],"mappings":"6PAEK,MAACA,EAAsB,CAM1B,WAAY,CAAOC,EAAOC,IAAcC,EAAA,wBACtC,GAAI,CAKF,OAJiB,MAAMC,EAAI,KAAK,oCAAqC,CACnE,MAAAH,EACA,UAAAC,CACR,CAAO,CAEH,OAASG,EAAO,CACd,MAAMA,CACR,CACF,GAKA,UAAW,CAAOJ,EAAOK,IAAQH,EAAA,wBAC/B,GAAI,CAKF,OAJiB,MAAMC,EAAI,KAAK,mCAAoC,CAClE,MAAAH,EACA,IAAAK,CACR,CAAO,CAEH,OAASD,EAAO,CACd,MAAMA,CACR,CACF,GAKA,mBAA2BE,GAASJ,EAAA,wBAClC,GAAI,CAEF,OADiB,MAAMC,EAAI,KAAK,wBAAyBG,CAAI,CAE/D,OAASF,EAAO,CACd,MAAMA,CACR,CACF,GAKA,YAAoBG,GAAeL,EAAA,wBACjC,GAAI,CAEF,OADiB,MAAMC,EAAI,IAAI,gCAAgCI,CAAU,EAAE,CAE7E,OAASH,EAAO,CACd,MAAMA,CACR,CACF,GAOA,OAAQ,IAAuBI,IAAAN,EAAA,WAAAM,GAAA,UAAhBC,EAAS,GAAO,CAC7B,GAAI,CACF,MAAMC,EAAc,IAAI,gBAAgBD,CAAM,EAAE,SAAQ,EAExD,OADiB,MAAMN,EAAI,IAAI,kBAAkBO,CAAW,EAAE,CAEhE,OAASN,EAAO,CACd,MAAMA,CACR,CACF,GAKA,SAAU,IAAYF,EAAA,wBACpB,GAAI,CAEF,OADiB,MAAMC,EAAI,IAAI,sBAAsB,CAEvD,OAASC,EAAO,CACd,MAAMA,CACR,CACF,GAKA,QAAgBO,GAAOT,EAAA,wBACrB,GAAI,CAEF,OADiB,MAAMC,EAAI,IAAI,kBAAkBQ,CAAE,EAAE,CAEvD,OAASP,EAAO,CACd,MAAMA,CACR,CACF,GAKA,aAAc,CAAOO,EAAIL,IAASJ,EAAA,wBAChC,GAAI,CAEF,OADiB,MAAMC,EAAI,IAAI,kBAAkBQ,CAAE,UAAWL,CAAI,CAEpE,OAASF,EAAO,CACd,MAAMA,CACR,CACF,GAKA,eAAuBO,GAAOT,EAAA,wBAC5B,GAAI,CAEF,OADiB,MAAMC,EAAI,KAAK,kBAAkBQ,CAAE,kBAAkB,CAExE,OAASP,EAAO,CACd,MAAMA,CACR,CACF,EACF"}