{"version":3,"file":"UsersPage-BQfkVadn.js","sources":["../../src/services/userService.js","../../src/components/users/UserModal.jsx","../../src/components/users/ResetPasswordModal.jsx","../../src/components/users/DeleteConfirmationModal.jsx","../../src/components/users/UserDetailModal.jsx","../../src/components/users/ImportUsersModal.jsx","../../src/components/users/ActivityLogPanel.jsx","../../src/pages/users/UsersPage.jsx"],"sourcesContent":["import api from './api'\n\nconst userService = {\n  getAll: async (params = {}) => {\n    try {\n      const queryParams = new URLSearchParams()\n      \n      if (params.role) queryParams.append('role', params.role)\n      if (params.status) queryParams.append('status', params.status)\n      if (params.search) queryParams.append('search', params.search)\n      if (params.page) queryParams.append('page', params.page)\n      if (params.limit) queryParams.append('limit', params.limit)\n      if (params.sort_by) queryParams.append('sort_by', params.sort_by)\n      if (params.sort_order) queryParams.append('sort_order', params.sort_order)\n      \n      const queryString = queryParams.toString()\n      const response = await api.get(`/users${queryString ? '?' + queryString : ''}`)\n      return response\n    } catch (error) {\n      console.error('❌ UserService error:', error)\n      return { data: [], pagination: {} }\n    }\n  },\n\n  getById: async (id) => {\n    const data = await api.get(`/users/${id}`)\n    return data\n  },\n\n  create: async (data) => {\n    const result = await api.post('/users', data)\n    return result\n  },\n\n  update: async (id, data) => {\n    const result = await api.put(`/users/${id}`, data)\n    return result\n  },\n\n  delete: async (id) => {\n    const result = await api.delete(`/users/${id}`)\n    return result\n  },\n\n  updatePassword: async (id, data) => {\n    const result = await api.put(`/users/${id}/password`, data)\n    return result\n  },\n\n  resetPassword: async (id, new_password) => {\n    const result = await api.post(`/users/${id}/reset-password`, { new_password })\n    return result\n  },\n\n  getActivityLogs: async (params = {}) => {\n    try {\n      const queryParams = new URLSearchParams()\n      \n      if (params.user_id) queryParams.append('user_id', params.user_id)\n      if (params.target_user_id) queryParams.append('target_user_id', params.target_user_id)\n      if (params.action) queryParams.append('action', params.action)\n      if (params.limit) queryParams.append('limit', params.limit)\n      if (params.page) queryParams.append('page', params.page)\n      \n      const queryString = queryParams.toString()\n      const response = await api.get(`/users/activity-logs/list${queryString ? '?' + queryString : ''}`)\n      return response\n    } catch (error) {\n      console.error('❌ Get activity logs error:', error)\n      return { data: [] }\n    }\n  },\n\n  // Account lockout management\n  unlockAccount: async (id) => {\n    const result = await api.post(`/users/${id}/unlock`)\n    return result\n  },\n\n  getLockStatus: async (id) => {\n    const result = await api.get(`/users/${id}/lock-status`)\n    return result\n  }\n}\n\nexport default userService\n\n","import React, { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useMutation, useQuery } from 'react-query'\nimport { X, User, Mail, Phone, Shield, Lock, UserPlus, Edit3, CheckCircle, Info } from 'lucide-react'\nimport userService from '../../services/userService'\nimport permissionService from '../../services/permissionService'\nimport toast from 'react-hot-toast'\n\nconst UserModal = ({ user, onClose, onSuccess }) => {\n  const isEdit = !!user\n  const [showPermissionPreview, setShowPermissionPreview] = useState(false)\n  \n  const { register, handleSubmit, formState: { errors, isSubmitting }, reset, watch } = useForm({\n    defaultValues: user || {\n      username: '',\n      email: '',\n      full_name: '',\n      phone: '',\n      role: 'customer_service',\n      password: '',\n      confirm_password: '',\n      is_active: true\n    }\n  })\n\n  // Watch selected role for permission preview\n  const selectedRole = watch('role')\n\n  // Fetch permissions for selected role\n  const { data: permissionsData } = useQuery(\n    ['rolePermissions', selectedRole],\n    () => permissionService.getRolePermissions(selectedRole),\n    {\n      enabled: !!selectedRole && selectedRole !== 'admin' && !isEdit,\n      staleTime: 5 * 60 * 1000 // 5 minutes\n    }\n  )\n\n  useEffect(() => {\n    if (user) {\n      reset(user)\n    }\n  }, [user, reset])\n\n  const mutation = useMutation(\n    (data) => isEdit ? userService.update(user.id, data) : userService.create(data),\n    {\n      onSuccess: () => {\n        toast.success(isEdit ? 'User berhasil diupdate' : 'User berhasil ditambahkan')\n        onSuccess()\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Terjadi kesalahan')\n      }\n    }\n  )\n\n  const onSubmit = (data) => {\n    // Validate password match for new user\n    if (!isEdit && data.password !== data.confirm_password) {\n      toast.error('Password tidak cocok')\n      return\n    }\n\n    const submitData = {\n      ...data,\n      is_active: data.is_active === 'true' || data.is_active === true\n    }\n    \n    // Remove confirm_password before submit\n    delete submitData.confirm_password\n    \n    // Remove password if empty (for edit mode)\n    if (isEdit && !submitData.password) {\n      delete submitData.password\n    }\n\n    mutation.mutate(submitData)\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-6 border-b border-gray-200 bg-gradient-to-r from-blue-50 to-indigo-50\">\n          <div className=\"flex items-center\">\n            <div className={`w-12 h-12 rounded-full ${isEdit ? 'bg-gradient-to-br from-green-500 to-emerald-600' : 'bg-gradient-to-br from-blue-500 to-indigo-600'} flex items-center justify-center text-white shadow-lg`}>\n              {isEdit ? <Edit3 className=\"h-6 w-6\" /> : <UserPlus className=\"h-6 w-6\" />}\n            </div>\n            <div className=\"ml-4\">\n              <h2 className=\"text-2xl font-bold text-gray-900\">\n                {isEdit ? 'Edit User' : 'Tambah User Baru'}\n              </h2>\n              <p className=\"text-sm text-gray-600\">\n                {isEdit ? 'Perbarui informasi user' : 'Lengkapi form untuk membuat user baru'}\n              </p>\n            </div>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors p-2 hover:bg-white rounded-lg\"\n          >\n            <X className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit(onSubmit)} className=\"p-6\">\n          <div className=\"space-y-6\">\n            {/* Basic Information */}\n            <div className=\"bg-gray-50 rounded-lg p-5 border border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                <User className=\"h-5 w-5 mr-2 text-blue-600\" />\n                Informasi Dasar\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Username <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"input-field\"\n                    placeholder=\"username\"\n                    disabled={isEdit}\n                    {...register('username', { \n                      required: 'Username wajib diisi',\n                      minLength: { value: 3, message: 'Username minimal 3 karakter' },\n                      pattern: {\n                        value: /^[a-zA-Z0-9_]+$/,\n                        message: 'Username hanya boleh huruf, angka, dan underscore'\n                      }\n                    })}\n                  />\n                  {errors.username && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.username.message}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Nama Lengkap <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"input-field\"\n                    placeholder=\"Nama lengkap\"\n                    {...register('full_name', { \n                      required: 'Nama lengkap wajib diisi'\n                    })}\n                  />\n                  {errors.full_name && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.full_name.message}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Contact Information */}\n            <div className=\"bg-gray-50 rounded-lg p-5 border border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                <Mail className=\"h-5 w-5 mr-2 text-blue-600\" />\n                Informasi Kontak\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Email <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"email\"\n                    className=\"input-field\"\n                    placeholder=\"email@example.com\"\n                    {...register('email', { \n                      required: 'Email wajib diisi',\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: 'Format email tidak valid'\n                      }\n                    })}\n                  />\n                  {errors.email && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.email.message}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Phone\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"input-field\"\n                    placeholder=\"08123456789\"\n                    {...register('phone')}\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Role */}\n            <div className=\"bg-gray-50 rounded-lg p-5 border border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                <Shield className=\"h-5 w-5 mr-2 text-blue-600\" />\n                Role & Akses\n              </h3>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Role <span className=\"text-red-500\">*</span>\n              </label>\n              <select\n                className=\"input-field\"\n                {...register('role', { required: 'Role wajib dipilih' })}\n              >\n                <option value=\"\">Pilih Role</option>\n                <option value=\"admin\">Admin</option>\n                <option value=\"supervisor\">Supervisor</option>\n                <option value=\"manager\">Manager</option>\n                <option value=\"noc\">NOC</option>\n                <option value=\"technician\">Technician</option>\n                <option value=\"customer_service\">Customer Service</option>\n              </select>\n              {errors.role && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.role.message}</p>\n              )}\n\n              {/* Permission Preview */}\n              {!isEdit && selectedRole && (\n                <div className=\"mt-4\">\n                  {selectedRole === 'admin' ? (\n                    <div className=\"bg-purple-50 border border-purple-200 rounded-lg p-4\">\n                      <div className=\"flex items-start\">\n                        <Shield className=\"h-5 w-5 text-purple-600 mt-0.5 mr-2 flex-shrink-0\" />\n                        <div className=\"flex-1\">\n                          <p className=\"text-sm font-semibold text-purple-900 mb-1\">Admin Access</p>\n                          <p className=\"text-sm text-purple-800\">\n                            Admin memiliki <strong>akses penuh</strong> ke semua fitur sistem (100% permissions).\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  ) : permissionsData?.data?.permissions ? (\n                    <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex items-start flex-1\">\n                          <Info className=\"h-5 w-5 text-blue-600 mt-0.5 mr-2 flex-shrink-0\" />\n                          <div className=\"flex-1\">\n                            <p className=\"text-sm font-semibold text-blue-900 mb-1\">\n                              {selectedRole === 'supervisor' ? 'Supervisor' :\n                               selectedRole === 'technician' ? 'Technician' :\n                               'Customer Service'} Permissions\n                            </p>\n                            <p className=\"text-sm text-blue-800 mb-2\">\n                              User akan mendapat <strong>{permissionsData.data.permissions.length} permissions</strong>\n                            </p>\n                            {!showPermissionPreview && (\n                              <button\n                                type=\"button\"\n                                onClick={() => setShowPermissionPreview(true)}\n                                className=\"text-xs text-blue-600 hover:text-blue-800 font-medium underline\"\n                              >\n                                Lihat detail permissions →\n                              </button>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                      \n                      {showPermissionPreview && (\n                        <div className=\"mt-3 pt-3 border-t border-blue-200\">\n                          <div className=\"grid grid-cols-1 gap-2 max-h-48 overflow-y-auto\">\n                            {permissionsData.data.permissions.map((perm, index) => (\n                              <div key={index} className=\"flex items-center text-sm text-blue-800\">\n                                <CheckCircle className=\"h-3 w-3 text-green-600 mr-2 flex-shrink-0\" />\n                                <span>{perm.description || perm.name}</span>\n                              </div>\n                            ))}\n                          </div>\n                          <button\n                            type=\"button\"\n                            onClick={() => setShowPermissionPreview(false)}\n                            className=\"text-xs text-blue-600 hover:text-blue-800 font-medium underline mt-2\"\n                          >\n                            ← Sembunyikan detail\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  ) : selectedRole && (\n                    <div className=\"bg-gray-100 border border-gray-300 rounded-lg p-4\">\n                      <div className=\"flex items-center\">\n                        <Info className=\"h-5 w-5 text-gray-500 mr-2\" />\n                        <p className=\"text-sm text-gray-600\">Loading permissions...</p>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {/* Permission Management Link */}\n              {!isEdit && (\n                <div className=\"mt-3\">\n                  <p className=\"text-xs text-gray-500\">\n                    💡 Untuk mengatur permissions lebih detail, kunjungi{' '}\n                    <a \n                      href=\"/permissions\" \n                      target=\"_blank\"\n                      className=\"text-blue-600 hover:text-blue-800 font-medium underline\"\n                    >\n                      Permission Management\n                    </a>\n                  </p>\n                </div>\n              )}\n            </div>\n\n            {/* Password (only for new user or if changing) */}\n            {!isEdit && (\n              <div className=\"bg-gray-50 rounded-lg p-5 border border-gray-200\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                  <Lock className=\"h-5 w-5 mr-2 text-blue-600\" />\n                  Password\n                </h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Password <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                      type=\"password\"\n                      className=\"input-field\"\n                      placeholder=\"Password\"\n                      {...register('password', { \n                        required: !isEdit ? 'Password wajib diisi' : false,\n                        minLength: { value: 6, message: 'Password minimal 6 karakter' }\n                      })}\n                    />\n                    {errors.password && (\n                      <p className=\"mt-1 text-sm text-red-600\">{errors.password.message}</p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Confirm Password <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                      type=\"password\"\n                      className=\"input-field\"\n                      placeholder=\"Confirm password\"\n                      {...register('confirm_password', { \n                        required: !isEdit ? 'Konfirmasi password wajib diisi' : false\n                      })}\n                    />\n                    {errors.confirm_password && (\n                      <p className=\"mt-1 text-sm text-red-600\">{errors.confirm_password.message}</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {isEdit && (\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-start\">\n                  <Lock className=\"h-5 w-5 text-blue-600 mt-0.5 mr-2\" />\n                  <div>\n                    <p className=\"text-sm font-semibold text-blue-900 mb-1\">Catatan Password</p>\n                    <p className=\"text-sm text-blue-800\">\n                      Untuk mengubah password, gunakan fitur \"Reset Password\" di tabel user atau menu \"Change Password\" di halaman profil.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Status */}\n            <div className=\"bg-gray-50 rounded-lg p-5 border border-gray-200\">\n              <label className=\"block text-sm font-medium text-gray-900 mb-3\">\n                Status Akun <span className=\"text-red-500\">*</span>\n              </label>\n              <div className=\"flex items-center space-x-6\">\n                <label className=\"flex items-center cursor-pointer p-3 bg-white border-2 border-gray-300 rounded-lg hover:border-green-400 transition-all\">\n                  <input\n                    type=\"radio\"\n                    value=\"true\"\n                    {...register('is_active')}\n                    className=\"mr-3 w-4 h-4 text-green-600\"\n                  />\n                  <span className=\"text-sm font-medium text-gray-700\">Active</span>\n                </label>\n                <label className=\"flex items-center cursor-pointer p-3 bg-white border-2 border-gray-300 rounded-lg hover:border-red-400 transition-all\">\n                  <input\n                    type=\"radio\"\n                    value=\"false\"\n                    {...register('is_active')}\n                    className=\"mr-3 w-4 h-4 text-red-600\"\n                  />\n                  <span className=\"text-sm font-medium text-gray-700\">Inactive</span>\n                </label>\n              </div>\n            </div>\n          </div>\n\n          {/* Actions */}\n          <div className=\"flex justify-end space-x-3 mt-8 pt-6 border-t-2 border-gray-200 bg-gray-50 -mx-6 -mb-6 px-6 py-4 rounded-b-lg\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"btn-secondary\"\n              disabled={isSubmitting}\n            >\n              Batal\n            </button>\n            <button\n              type=\"submit\"\n              className={`btn-primary ${isEdit ? 'bg-green-600 hover:bg-green-700' : ''}`}\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? (\n                <span className=\"flex items-center\">\n                  <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Menyimpan...\n                </span>\n              ) : (\n                <span className=\"flex items-center\">\n                  {isEdit ? <Edit3 className=\"h-4 w-4 mr-2\" /> : <UserPlus className=\"h-4 w-4 mr-2\" />}\n                  {isEdit ? 'Update User' : 'Tambah User'}\n                </span>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default UserModal\n\n","import React, { useState } from 'react'\nimport { X, Key, Copy, Check } from 'lucide-react'\nimport { useMutation } from 'react-query'\nimport userService from '../../services/userService'\nimport toast from 'react-hot-toast'\n\nconst ResetPasswordModal = ({ user, onClose, onSuccess }) => {\n  const [newPassword, setNewPassword] = useState('')\n  const [generatedPassword, setGeneratedPassword] = useState('')\n  const [showPassword, setShowPassword] = useState(false)\n  const [copied, setCopied] = useState(false)\n\n  const mutation = useMutation(\n    () => userService.resetPassword(user.id, newPassword),\n    {\n      onSuccess: (response) => {\n        setGeneratedPassword(response.data.temporary_password)\n        toast.success('Password berhasil direset!')\n        onSuccess()\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Gagal reset password')\n      }\n    }\n  )\n\n  const generateRandomPassword = () => {\n    const length = 12\n    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*'\n    let password = ''\n    for (let i = 0; i < length; i++) {\n      password += charset.charAt(Math.floor(Math.random() * charset.length))\n    }\n    setNewPassword(password)\n    setShowPassword(true)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (!newPassword || newPassword.length < 6) {\n      toast.error('Password minimal 6 karakter')\n      return\n    }\n    mutation.mutate()\n  }\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(generatedPassword)\n    setCopied(true)\n    toast.success('Password copied to clipboard!')\n    setTimeout(() => setCopied(false), 2000)\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-6 border-b border-gray-200\">\n          <div className=\"flex items-center\">\n            <Key className=\"h-6 w-6 text-blue-600 mr-2\" />\n            <h2 className=\"text-xl font-semibold text-gray-900\">Reset Password</h2>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <X className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {!generatedPassword ? (\n          /* Reset Password Form */\n          <form onSubmit={handleSubmit} className=\"p-6\">\n            <div className=\"mb-6\">\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4\">\n                <p className=\"text-sm text-blue-800\">\n                  <strong>User:</strong> {user.full_name} ({user.username})\n                </p>\n                <p className=\"text-sm text-blue-800\">\n                  <strong>Email:</strong> {user.email}\n                </p>\n              </div>\n\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                New Password <span className=\"text-red-500\">*</span>\n              </label>\n              <div className=\"space-y-2\">\n                <input\n                  type={showPassword ? 'text' : 'password'}\n                  className=\"form-input\"\n                  placeholder=\"Enter new password\"\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  minLength={6}\n                  required\n                />\n                <button\n                  type=\"button\"\n                  onClick={generateRandomPassword}\n                  className=\"w-full px-4 py-2 text-sm font-medium text-blue-600 bg-blue-50 border border-blue-200 rounded-lg hover:bg-blue-100 transition-colors\"\n                >\n                  Generate Random Password\n                </button>\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={showPassword}\n                    onChange={(e) => setShowPassword(e.target.checked)}\n                    className=\"mr-2\"\n                  />\n                  <span className=\"text-sm text-gray-600\">Show password</span>\n                </label>\n              </div>\n            </div>\n\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6\">\n              <p className=\"text-sm text-yellow-800\">\n                ⚠️ <strong>Warning:</strong> User akan menggunakan password ini untuk login.\n                Pastikan Anda menyimpan dan mengirimkan password ini ke user dengan aman.\n              </p>\n            </div>\n\n            {/* Actions */}\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"btn-secondary\"\n                disabled={mutation.isLoading}\n              >\n                Batal\n              </button>\n              <button\n                type=\"submit\"\n                className=\"btn-primary\"\n                disabled={mutation.isLoading}\n              >\n                {mutation.isLoading ? 'Resetting...' : 'Reset Password'}\n              </button>\n            </div>\n          </form>\n        ) : (\n          /* Success Message with Password */\n          <div className=\"p-6\">\n            <div className=\"text-center mb-6\">\n              <div className=\"inline-flex items-center justify-center w-16 h-16 bg-green-100 rounded-full mb-4\">\n                <Check className=\"h-8 w-8 text-green-600\" />\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                Password Berhasil Direset!\n              </h3>\n              <p className=\"text-sm text-gray-600\">\n                Berikut adalah password sementara untuk user <strong>{user.username}</strong>\n              </p>\n            </div>\n\n            <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4 mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                New Password:\n              </label>\n              <div className=\"flex items-center space-x-2\">\n                <input\n                  type=\"text\"\n                  className=\"form-input font-mono\"\n                  value={generatedPassword}\n                  readOnly\n                />\n                <button\n                  onClick={copyToClipboard}\n                  className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors\"\n                  title=\"Copy to clipboard\"\n                >\n                  {copied ? <Check className=\"h-5 w-5 text-green-600\" /> : <Copy className=\"h-5 w-5\" />}\n                </button>\n              </div>\n            </div>\n\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6\">\n              <p className=\"text-sm text-yellow-800\">\n                📝 <strong>Important:</strong> Pastikan Anda menyalin dan menyimpan password ini.\n                Kirimkan ke user melalui channel yang aman (email, WhatsApp, dll).\n              </p>\n            </div>\n\n            <button\n              onClick={onClose}\n              className=\"w-full btn-primary\"\n            >\n              Selesai\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default ResetPasswordModal\n\n","import React, { useState } from 'react'\nimport { X, AlertTriangle, Trash2, CheckCircle } from 'lucide-react'\nimport { useMutation } from 'react-query'\nimport userService from '../../services/userService'\nimport toast from 'react-hot-toast'\n\nconst DeleteConfirmationModal = ({ user, onClose, onSuccess }) => {\n  const [confirmText, setConfirmText] = useState('')\n  const [isPermanent, setIsPermanent] = useState(false)\n  const isConfirmed = confirmText === user.username\n\n  const mutation = useMutation(\n    () => userService.delete(user.id),\n    {\n      onSuccess: () => {\n        toast.success(`User \"${user.full_name}\" berhasil dihapus`)\n        onSuccess()\n        onClose()\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Gagal menghapus user')\n      }\n    }\n  )\n\n  const handleDelete = () => {\n    if (!isConfirmed) {\n      toast.error('Konfirmasi username tidak sesuai')\n      return\n    }\n    mutation.mutate()\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-6 border-b border-gray-200\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-12 h-12 rounded-full bg-red-100 flex items-center justify-center\">\n                <AlertTriangle className=\"h-6 w-6 text-red-600\" />\n              </div>\n            </div>\n            <div className=\"ml-4\">\n              <h2 className=\"text-xl font-semibold text-gray-900\">Confirm Deletion</h2>\n              <p className=\"text-sm text-gray-500\">This action cannot be undone</p>\n            </div>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n            disabled={mutation.isLoading}\n          >\n            <X className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n          {/* User Info */}\n          <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4 mb-6\">\n            <div className=\"flex items-center mb-3\">\n              <div className=\"w-12 h-12 rounded-full bg-blue-100 flex items-center justify-center\">\n                <span className=\"text-lg font-medium text-blue-600\">\n                  {user.full_name?.charAt(0).toUpperCase()}\n                </span>\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"font-semibold text-gray-900\">{user.full_name}</p>\n                <p className=\"text-sm text-gray-600\">@{user.username}</p>\n              </div>\n            </div>\n            <div className=\"text-sm space-y-1\">\n              <p className=\"text-gray-600\">\n                <span className=\"font-medium\">Email:</span> {user.email}\n              </p>\n              <p className=\"text-gray-600\">\n                <span className=\"font-medium\">Role:</span> {user.role}\n              </p>\n              {user.phone && (\n                <p className=\"text-gray-600\">\n                  <span className=\"font-medium\">Phone:</span> {user.phone}\n                </p>\n              )}\n            </div>\n          </div>\n\n          {/* Warning */}\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n            <div className=\"flex\">\n              <AlertTriangle className=\"h-5 w-5 text-red-600 flex-shrink-0 mt-0.5\" />\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Warning</h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    <li>User akan di-soft delete (data masih bisa di-restore)</li>\n                    <li>User tidak bisa login setelah dihapus</li>\n                    <li>Data terkait seperti tickets & logs akan tetap ada</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Confirmation Input */}\n          <div className=\"mb-6\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Type <span className=\"font-mono font-bold text-red-600\">{user.username}</span> to confirm:\n            </label>\n            <input\n              type=\"text\"\n              className={`form-input ${isConfirmed ? 'border-green-500 focus:ring-green-500' : 'border-red-300 focus:ring-red-500'}`}\n              placeholder={user.username}\n              value={confirmText}\n              onChange={(e) => setConfirmText(e.target.value)}\n              autoFocus\n              disabled={mutation.isLoading}\n            />\n            {isConfirmed && (\n              <div className=\"mt-2 flex items-center text-sm text-green-600\">\n                <CheckCircle className=\"h-4 w-4 mr-1\" />\n                Username confirmed\n              </div>\n            )}\n          </div>\n\n          {/* Delete Type Option */}\n          <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n            <label className=\"flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={isPermanent}\n                onChange={(e) => setIsPermanent(e.target.checked)}\n                className=\"mr-2\"\n                disabled={mutation.isLoading}\n              />\n              <div>\n                <span className=\"text-sm font-medium text-gray-900\">\n                  Permanent Delete (Hard Delete)\n                </span>\n                <p className=\"text-xs text-gray-600\">\n                  Data akan dihapus permanent dan tidak bisa di-restore. \n                  Hanya untuk kasus khusus!\n                </p>\n              </div>\n            </label>\n          </div>\n        </div>\n\n        {/* Actions */}\n        <div className=\"flex justify-end space-x-3 p-6 bg-gray-50 rounded-b-lg border-t border-gray-200\">\n          <button\n            type=\"button\"\n            onClick={onClose}\n            className=\"btn-secondary\"\n            disabled={mutation.isLoading}\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleDelete}\n            className={`btn-danger ${!isConfirmed ? 'opacity-50 cursor-not-allowed' : ''}`}\n            disabled={!isConfirmed || mutation.isLoading}\n          >\n            {mutation.isLoading ? (\n              <span className=\"flex items-center\">\n                <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Deleting...\n              </span>\n            ) : (\n              <span className=\"flex items-center\">\n                <Trash2 className=\"h-4 w-4 mr-2\" />\n                {isPermanent ? 'Permanent Delete' : 'Delete User'}\n              </span>\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DeleteConfirmationModal\n\n","import React from 'react'\nimport { X, User, Mail, Phone, Shield, Calendar, Clock, CheckCircle, XCircle, MailCheck } from 'lucide-react'\n\nconst UserDetailModal = ({ user, onClose }) => {\n  if (!user) return null\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Never'\n    return new Date(dateString).toLocaleString('id-ID', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }\n\n  const getRoleBadge = (role) => {\n    const colors = {\n      admin: 'bg-purple-100 text-purple-800 border-purple-200',\n      supervisor: 'bg-blue-100 text-blue-800 border-blue-200',\n      technician: 'bg-green-100 text-green-800 border-green-200',\n      customer_service: 'bg-yellow-100 text-yellow-800 border-yellow-200'\n    }\n    const labels = {\n      admin: 'Admin',\n      supervisor: 'Supervisor',\n      technician: 'Technician',\n      customer_service: 'Customer Service'\n    }\n    return (\n      <span className={`px-3 py-1 inline-flex text-sm font-semibold rounded-full border ${colors[role] || 'bg-gray-100 text-gray-800 border-gray-200'}`}>\n        {labels[role] || role}\n      </span>\n    )\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex justify-between items-start p-6 border-b border-gray-200 bg-gradient-to-r from-blue-50 to-indigo-50\">\n          <div className=\"flex items-center\">\n            <div className=\"w-16 h-16 rounded-full bg-gradient-to-br from-blue-500 to-indigo-600 flex items-center justify-center text-white text-2xl font-bold shadow-lg\">\n              {user.full_name?.charAt(0).toUpperCase()}\n            </div>\n            <div className=\"ml-4\">\n              <h2 className=\"text-2xl font-bold text-gray-900\">{user.full_name}</h2>\n              <p className=\"text-sm text-gray-600\">@{user.username}</p>\n            </div>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors p-2 hover:bg-white rounded-lg\"\n          >\n            <X className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6 space-y-6\">\n          {/* Status & Role */}\n          <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n            <div className=\"flex items-center space-x-4\">\n              {getRoleBadge(user.role)}\n              {user.is_active ? (\n                <span className=\"px-3 py-1 inline-flex items-center text-sm font-semibold rounded-full bg-green-100 text-green-800 border border-green-200\">\n                  <CheckCircle className=\"h-4 w-4 mr-1\" />\n                  Active\n                </span>\n              ) : (\n                <span className=\"px-3 py-1 inline-flex items-center text-sm font-semibold rounded-full bg-gray-100 text-gray-800 border border-gray-200\">\n                  <XCircle className=\"h-4 w-4 mr-1\" />\n                  Inactive\n                </span>\n              )}\n            </div>\n          </div>\n\n          {/* Contact Information */}\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <User className=\"h-5 w-5 mr-2 text-blue-600\" />\n              Contact Information\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"p-4 bg-white border border-gray-200 rounded-lg hover:border-blue-300 transition-colors\">\n                <div className=\"flex items-start\">\n                  <Mail className=\"h-5 w-5 text-gray-400 mt-0.5 mr-3\" />\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center justify-between\">\n                      <p className=\"text-xs text-gray-500 font-medium\">Email</p>\n                      {user.email_verified ? (\n                        <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800 border border-green-200\">\n                          <MailCheck className=\"h-3 w-3 mr-1\" />\n                          Verified\n                        </span>\n                      ) : (\n                        <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-yellow-100 text-yellow-800 border border-yellow-200\">\n                          <Mail className=\"h-3 w-3 mr-1\" />\n                          Not Verified\n                        </span>\n                      )}\n                    </div>\n                    <p className=\"text-sm text-gray-900 font-medium break-all mt-1\">{user.email}</p>\n                    {user.email_verified_at && (\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        Verified: {formatDate(user.email_verified_at)}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"p-4 bg-white border border-gray-200 rounded-lg hover:border-blue-300 transition-colors\">\n                <div className=\"flex items-start\">\n                  <Phone className=\"h-5 w-5 text-gray-400 mt-0.5 mr-3\" />\n                  <div>\n                    <p className=\"text-xs text-gray-500 font-medium\">Phone</p>\n                    <p className=\"text-sm text-gray-900 font-medium\">{user.phone || 'Not provided'}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Account Information */}\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <Shield className=\"h-5 w-5 mr-2 text-blue-600\" />\n              Account Information\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"p-4 bg-white border border-gray-200 rounded-lg hover:border-blue-300 transition-colors\">\n                <div className=\"flex items-start\">\n                  <Calendar className=\"h-5 w-5 text-gray-400 mt-0.5 mr-3\" />\n                  <div>\n                    <p className=\"text-xs text-gray-500 font-medium\">Created At</p>\n                    <p className=\"text-sm text-gray-900 font-medium\">{formatDate(user.created_at)}</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"p-4 bg-white border border-gray-200 rounded-lg hover:border-blue-300 transition-colors\">\n                <div className=\"flex items-start\">\n                  <Clock className=\"h-5 w-5 text-gray-400 mt-0.5 mr-3\" />\n                  <div>\n                    <p className=\"text-xs text-gray-500 font-medium\">Last Login</p>\n                    <p className=\"text-sm text-gray-900 font-medium\">{formatDate(user.last_login)}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Additional Info (if technician) */}\n          {user.role === 'technician' && user.employee_id && (\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Technician Details</h3>\n              <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <p className=\"text-xs text-blue-600 font-medium\">Employee ID</p>\n                    <p className=\"text-sm text-gray-900 font-medium\">{user.employee_id}</p>\n                  </div>\n                  {user.availability_status && (\n                    <div>\n                      <p className=\"text-xs text-blue-600 font-medium\">Availability</p>\n                      <p className=\"text-sm text-gray-900 font-medium capitalize\">{user.availability_status}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* User ID for reference */}\n          <div className=\"pt-4 border-t border-gray-200\">\n            <p className=\"text-xs text-gray-500\">\n              User ID: <span className=\"font-mono font-medium text-gray-700\">{user.id}</span>\n            </p>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex justify-end p-6 bg-gray-50 border-t border-gray-200\">\n          <button\n            onClick={onClose}\n            className=\"btn-secondary\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserDetailModal\n\n","import React, { useState } from 'react'\nimport { X, Upload, Download, FileSpreadsheet, AlertCircle, CheckCircle, XCircle } from 'lucide-react'\nimport * as XLSX from 'xlsx'\nimport { useMutation } from 'react-query'\nimport userService from '../../services/userService'\nimport toast from 'react-hot-toast'\n\nconst ImportUsersModal = ({ onClose, onSuccess }) => {\n  const [file, setFile] = useState(null)\n  const [importData, setImportData] = useState([])\n  const [validationResults, setValidationResults] = useState([])\n  const [importing, setImporting] = useState(false)\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0]\n    if (!selectedFile) return\n\n    const fileExtension = selectedFile.name.split('.').pop().toLowerCase()\n    if (!['csv', 'xlsx', 'xls'].includes(fileExtension)) {\n      toast.error('Format file harus CSV atau Excel')\n      return\n    }\n\n    setFile(selectedFile)\n    const reader = new FileReader()\n\n    reader.onload = (event) => {\n      try {\n        const data = new Uint8Array(event.target.result)\n        const workbook = XLSX.read(data, { type: 'array' })\n        const sheetName = workbook.SheetNames[0]\n        const worksheet = workbook.Sheets[sheetName]\n        const jsonData = XLSX.utils.sheet_to_json(worksheet)\n\n        if (jsonData.length === 0) {\n          toast.error('File kosong atau format tidak valid')\n          return\n        }\n\n        // Validate and transform data\n        const validated = jsonData.map((row, index) => {\n          const errors = []\n          \n          if (!row.Username || row.Username.length < 3) {\n            errors.push('Username invalid (min 3 chars)')\n          }\n          if (!row.Email || !row.Email.includes('@')) {\n            errors.push('Email invalid')\n          }\n          if (!row['Full Name']) {\n            errors.push('Full Name required')\n          }\n          if (!row.Role || !['admin', 'supervisor', 'technician', 'customer_service'].includes(row.Role.toLowerCase())) {\n            errors.push('Role invalid')\n          }\n          if (!row.Password || row.Password.length < 6) {\n            errors.push('Password invalid (min 6 chars)')\n          }\n\n          return {\n            rowNumber: index + 2, // +2 for header row and 0-based index\n            data: {\n              username: row.Username?.trim(),\n              email: row.Email?.trim(),\n              full_name: row['Full Name']?.trim(),\n              phone: row.Phone?.trim() || '',\n              role: row.Role?.toLowerCase().trim(),\n              password: row.Password?.trim(),\n              is_active: row.Status?.toLowerCase() === 'inactive' ? false : true\n            },\n            errors,\n            isValid: errors.length === 0\n          }\n        })\n\n        setImportData(validated)\n        setValidationResults(validated)\n        \n        const validCount = validated.filter(v => v.isValid).length\n        const invalidCount = validated.filter(v => !v.isValid).length\n        \n        if (invalidCount > 0) {\n          toast.warning(`${validCount} valid, ${invalidCount} invalid rows`)\n        } else {\n          toast.success(`${validCount} users ready to import`)\n        }\n      } catch (error) {\n        toast.error('Gagal membaca file: ' + error.message)\n      }\n    }\n\n    reader.readAsArrayBuffer(selectedFile)\n  }\n\n  const downloadTemplate = () => {\n    const template = [\n      {\n        'Username': 'johndoe',\n        'Full Name': 'John Doe',\n        'Email': 'john.doe@example.com',\n        'Phone': '081234567890',\n        'Role': 'technician',\n        'Password': 'password123',\n        'Status': 'active'\n      },\n      {\n        'Username': 'janedoe',\n        'Full Name': 'Jane Doe',\n        'Email': 'jane.doe@example.com',\n        'Phone': '081234567891',\n        'Role': 'customer_service',\n        'Password': 'password456',\n        'Status': 'active'\n      }\n    ]\n\n    const worksheet = XLSX.utils.json_to_sheet(template)\n    const workbook = XLSX.utils.book_new()\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Users Template')\n    \n    worksheet['!cols'] = [\n      { wch: 15 }, { wch: 20 }, { wch: 25 }, { wch: 15 },\n      { wch: 20 }, { wch: 15 }, { wch: 10 }\n    ]\n\n    XLSX.writeFile(workbook, 'import-users-template.xlsx')\n    toast.success('Template downloaded!')\n  }\n\n  const handleImport = async () => {\n    const validUsers = importData.filter(item => item.isValid)\n    \n    if (validUsers.length === 0) {\n      toast.error('Tidak ada user valid untuk diimport')\n      return\n    }\n\n    if (!window.confirm(`Import ${validUsers.length} users?`)) {\n      return\n    }\n\n    setImporting(true)\n    let successCount = 0\n    let failCount = 0\n    const errors = []\n\n    for (const item of validUsers) {\n      try {\n        await userService.create(item.data)\n        successCount++\n      } catch (error) {\n        failCount++\n        errors.push(`Row ${item.rowNumber}: ${error.response?.data?.message || 'Failed'}`)\n      }\n    }\n\n    setImporting(false)\n\n    if (successCount > 0) {\n      toast.success(`${successCount} users berhasil diimport!`)\n      onSuccess()\n      if (failCount === 0) {\n        onClose()\n      }\n    }\n\n    if (failCount > 0) {\n      toast.error(`${failCount} users gagal diimport`)\n      console.error('Import errors:', errors)\n    }\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-6 border-b border-gray-200\">\n          <div className=\"flex items-center\">\n            <Upload className=\"h-6 w-6 text-blue-600 mr-2\" />\n            <h2 className=\"text-xl font-semibold text-gray-900\">Import Users</h2>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n            disabled={importing}\n          >\n            <X className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6 space-y-6\">\n          {/* Instructions */}\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n            <h3 className=\"text-sm font-semibold text-blue-900 mb-2\">📋 Instructions:</h3>\n            <ol className=\"list-decimal list-inside text-sm text-blue-800 space-y-1\">\n              <li>Download template Excel/CSV</li>\n              <li>Fill in user data (Username, Full Name, Email, Phone, Role, Password, Status)</li>\n              <li>Upload file (Excel or CSV format)</li>\n              <li>Review validation results</li>\n              <li>Click \"Import\" to create users</li>\n            </ol>\n          </div>\n\n          {/* Download Template */}\n          <div className=\"flex items-center justify-between p-4 bg-gray-50 border border-gray-200 rounded-lg\">\n            <div>\n              <h3 className=\"font-medium text-gray-900\">Download Template</h3>\n              <p className=\"text-sm text-gray-600\">Get the Excel template with example data</p>\n            </div>\n            <button\n              onClick={downloadTemplate}\n              className=\"btn-outline flex items-center\"\n            >\n              <Download className=\"h-4 w-4 mr-2\" />\n              Download Template\n            </button>\n          </div>\n\n          {/* File Upload */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Upload File (CSV or Excel)\n            </label>\n            <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-lg hover:border-blue-400 transition-colors\">\n              <div className=\"space-y-1 text-center\">\n                <FileSpreadsheet className=\"mx-auto h-12 w-12 text-gray-400\" />\n                <div className=\"flex text-sm text-gray-600\">\n                  <label className=\"relative cursor-pointer bg-white rounded-md font-medium text-blue-600 hover:text-blue-500 focus-within:outline-none\">\n                    <span>Upload a file</span>\n                    <input\n                      type=\"file\"\n                      className=\"sr-only\"\n                      accept=\".csv,.xlsx,.xls\"\n                      onChange={handleFileChange}\n                      disabled={importing}\n                    />\n                  </label>\n                  <p className=\"pl-1\">or drag and drop</p>\n                </div>\n                <p className=\"text-xs text-gray-500\">CSV or XLSX up to 10MB</p>\n                {file && (\n                  <p className=\"text-sm text-green-600 font-medium mt-2\">\n                    ✓ {file.name}\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Validation Results */}\n          {validationResults.length > 0 && (\n            <div>\n              <h3 className=\"font-medium text-gray-900 mb-3\">Validation Results:</h3>\n              <div className=\"max-h-64 overflow-y-auto border border-gray-200 rounded-lg\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50 sticky top-0\">\n                    <tr>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Row</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Username</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Email</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Role</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500\">Status</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {validationResults.map((item, idx) => (\n                      <tr key={idx} className={item.isValid ? 'bg-green-50' : 'bg-red-50'}>\n                        <td className=\"px-4 py-2 text-sm\">{item.rowNumber}</td>\n                        <td className=\"px-4 py-2 text-sm\">{item.data.username}</td>\n                        <td className=\"px-4 py-2 text-sm\">{item.data.email}</td>\n                        <td className=\"px-4 py-2 text-sm\">{item.data.role}</td>\n                        <td className=\"px-4 py-2 text-sm\">\n                          {item.isValid ? (\n                            <span className=\"inline-flex items-center text-xs text-green-700\">\n                              <CheckCircle className=\"h-3 w-3 mr-1\" />\n                              Valid\n                            </span>\n                          ) : (\n                            <span className=\"inline-flex items-center text-xs text-red-700\" title={item.errors.join(', ')}>\n                              <XCircle className=\"h-3 w-3 mr-1\" />\n                              {item.errors[0]}\n                            </span>\n                          )}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n              \n              {/* Summary */}\n              <div className=\"mt-4 grid grid-cols-2 gap-4\">\n                <div className=\"p-3 bg-green-50 border border-green-200 rounded-lg\">\n                  <div className=\"flex items-center\">\n                    <CheckCircle className=\"h-5 w-5 text-green-600 mr-2\" />\n                    <div>\n                      <p className=\"text-xs text-green-600 font-medium\">Valid Rows</p>\n                      <p className=\"text-2xl font-bold text-green-700\">\n                        {validationResults.filter(v => v.isValid).length}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"p-3 bg-red-50 border border-red-200 rounded-lg\">\n                  <div className=\"flex items-center\">\n                    <XCircle className=\"h-5 w-5 text-red-600 mr-2\" />\n                    <div>\n                      <p className=\"text-xs text-red-600 font-medium\">Invalid Rows</p>\n                      <p className=\"text-2xl font-bold text-red-700\">\n                        {validationResults.filter(v => !v.isValid).length}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Template Format */}\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n            <div className=\"flex items-start\">\n              <AlertCircle className=\"h-5 w-5 text-yellow-600 mt-0.5 mr-2\" />\n              <div className=\"text-sm text-yellow-800\">\n                <p className=\"font-semibold mb-2\">Required Columns:</p>\n                <ul className=\"list-disc list-inside space-y-1\">\n                  <li><strong>Username</strong> - Minimal 3 karakter, unique</li>\n                  <li><strong>Full Name</strong> - Nama lengkap user</li>\n                  <li><strong>Email</strong> - Format email valid, unique</li>\n                  <li><strong>Phone</strong> - Nomor telepon (optional)</li>\n                  <li><strong>Role</strong> - admin, supervisor, technician, atau customer_service</li>\n                  <li><strong>Password</strong> - Minimal 6 karakter</li>\n                  <li><strong>Status</strong> - active atau inactive (default: active)</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Actions */}\n        <div className=\"flex justify-between p-6 bg-gray-50 border-t border-gray-200\">\n          <button\n            onClick={downloadTemplate}\n            className=\"btn-outline flex items-center\"\n          >\n            <Download className=\"h-4 w-4 mr-2\" />\n            Download Template\n          </button>\n          <div className=\"flex space-x-3\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"btn-secondary\"\n              disabled={importing}\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleImport}\n              className=\"btn-primary\"\n              disabled={importing || validationResults.filter(v => v.isValid).length === 0}\n            >\n              {importing ? (\n                <span className=\"flex items-center\">\n                  <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Importing...\n                </span>\n              ) : (\n                <span className=\"flex items-center\">\n                  <Upload className=\"h-4 w-4 mr-2\" />\n                  Import {validationResults.filter(v => v.isValid).length} Users\n                </span>\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ImportUsersModal\n\n","import React from 'react'\nimport { useQuery } from 'react-query'\nimport { Activity, User, Key, Trash2, RotateCcw, Edit, Clock } from 'lucide-react'\nimport userService from '../../services/userService'\nimport LoadingSpinner from '../LoadingSpinner'\n\nconst ActivityLogPanel = ({ targetUserId = null, limit = 20 }) => {\n  const { data: logsResponse, isLoading } = useQuery(\n    ['activity-logs', targetUserId],\n    () => userService.getActivityLogs({ target_user_id: targetUserId, limit }),\n    {\n      refetchInterval: 30000, // Auto-refresh every 30 seconds\n      refetchOnWindowFocus: false\n    }\n  )\n\n  const logs = Array.isArray(logsResponse?.data) ? logsResponse.data : []\n\n  const getActionIcon = (action) => {\n    switch(action) {\n      case 'created':\n        return <User className=\"h-4 w-4 text-green-600\" />\n      case 'updated':\n        return <Edit className=\"h-4 w-4 text-blue-600\" />\n      case 'deleted':\n      case 'deleted_permanent':\n        return <Trash2 className=\"h-4 w-4 text-red-600\" />\n      case 'restored':\n        return <RotateCcw className=\"h-4 w-4 text-green-600\" />\n      case 'password_reset':\n        return <Key className=\"h-4 w-4 text-orange-600\" />\n      default:\n        return <Activity className=\"h-4 w-4 text-gray-600\" />\n    }\n  }\n\n  const getActionColor = (action) => {\n    switch(action) {\n      case 'created':\n      case 'restored':\n        return 'bg-green-50 border-green-200 text-green-800'\n      case 'updated':\n        return 'bg-blue-50 border-blue-200 text-blue-800'\n      case 'deleted':\n      case 'deleted_permanent':\n        return 'bg-red-50 border-red-200 text-red-800'\n      case 'password_reset':\n        return 'bg-orange-50 border-orange-200 text-orange-800'\n      default:\n        return 'bg-gray-50 border-gray-200 text-gray-800'\n    }\n  }\n\n  const getActionLabel = (action) => {\n    const labels = {\n      created: 'Created User',\n      updated: 'Updated User',\n      deleted: 'Deleted User',\n      deleted_permanent: 'Permanently Deleted',\n      restored: 'Restored User',\n      password_reset: 'Reset Password'\n    }\n    return labels[action] || action\n  }\n\n  const formatTimestamp = (dateString) => {\n    const date = new Date(dateString)\n    const now = new Date()\n    const diff = now - date\n    const seconds = Math.floor(diff / 1000)\n    const minutes = Math.floor(seconds / 60)\n    const hours = Math.floor(minutes / 60)\n    const days = Math.floor(hours / 24)\n\n    if (seconds < 60) return 'Just now'\n    if (minutes < 60) return `${minutes}m ago`\n    if (hours < 24) return `${hours}h ago`\n    if (days < 7) return `${days}d ago`\n    \n    return date.toLocaleDateString('id-ID', { \n      day: 'numeric', \n      month: 'short',\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center p-8\">\n        <LoadingSpinner size=\"sm\" />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg border border-gray-200\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n            <Activity className=\"h-5 w-5 mr-2 text-blue-600\" />\n            Recent Activity\n          </h3>\n          <span className=\"text-sm text-gray-500\">{logs.length} activities</span>\n        </div>\n      </div>\n      \n      <div className=\"divide-y divide-gray-200 max-h-96 overflow-y-auto\">\n        {logs.length === 0 ? (\n          <div className=\"p-8 text-center\">\n            <Activity className=\"h-12 w-12 text-gray-300 mx-auto mb-3\" />\n            <p className=\"text-sm text-gray-500\">No activity logs yet</p>\n          </div>\n        ) : (\n          logs.map((log) => (\n            <div key={log.id} className=\"p-4 hover:bg-gray-50 transition-colors\">\n              <div className=\"flex items-start\">\n                <div className=\"flex-shrink-0 mt-1\">\n                  {getActionIcon(log.action)}\n                </div>\n                <div className=\"ml-3 flex-1 min-w-0\">\n                  <div className=\"flex items-center justify-between mb-1\">\n                    <p className=\"text-sm font-medium text-gray-900\">\n                      {getActionLabel(log.action)}\n                    </p>\n                    <span className={`px-2 py-0.5 text-xs font-medium rounded border ${getActionColor(log.action)}`}>\n                      {log.action}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-600\">\n                    <span className=\"font-medium\">{log.performer_name || 'System'}</span>\n                    {' → '}\n                    <span className=\"font-medium\">@{log.target_username}</span>\n                  </p>\n                  {log.details && Object.keys(log.details).length > 0 && (\n                    <div className=\"mt-2 text-xs text-gray-500 bg-gray-50 rounded p-2\">\n                      {Object.entries(log.details).map(([key, value]) => (\n                        <span key={key} className=\"mr-3\">\n                          <strong>{key}:</strong> {JSON.stringify(value)}\n                        </span>\n                      ))}\n                    </div>\n                  )}\n                  <div className=\"flex items-center mt-2 text-xs text-gray-500\">\n                    <Clock className=\"h-3 w-3 mr-1\" />\n                    {formatTimestamp(log.created_at)}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default ActivityLogPanel\n\n","import React, { useState } from 'react'\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\nimport { UserCheck, Plus, Search, Trash2, Edit, ArrowUpDown, ArrowUp, ArrowDown, ChevronLeft, ChevronRight, ShieldAlert, Key, Copy, Check, Download, FileSpreadsheet, Mail, MailCheck, Upload, Unlock } from 'lucide-react'\nimport * as XLSX from 'xlsx'\nimport { useAuth } from '../../contexts/AuthContext'\nimport userService from '../../services/userService'\nimport LoadingSpinner from '../../components/LoadingSpinner'\nimport UserModal from '../../components/users/UserModal'\nimport ResetPasswordModal from '../../components/users/ResetPasswordModal'\nimport DeleteConfirmationModal from '../../components/users/DeleteConfirmationModal'\nimport UserDetailModal from '../../components/users/UserDetailModal'\nimport ImportUsersModal from '../../components/users/ImportUsersModal'\nimport ActivityLogPanel from '../../components/users/ActivityLogPanel'\nimport KPICard from '../../components/dashboard/KPICard'\nimport toast from 'react-hot-toast'\n\nconst UsersPage = () => {\n  const { user: currentUser, isAdmin, isSupervisor } = useAuth()\n  const [searchTerm, setSearchTerm] = useState('')\n  const [filterRole, setFilterRole] = useState('all')\n  const [filterStatus, setFilterStatus] = useState('all')\n  const [filterLastLogin, setFilterLastLogin] = useState('all')\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [selectedUser, setSelectedUser] = useState(null)\n  const [isResetPasswordModalOpen, setIsResetPasswordModalOpen] = useState(false)\n  const [userToResetPassword, setUserToResetPassword] = useState(null)\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false)\n  const [userToDelete, setUserToDelete] = useState(null)\n  const [selectedUsers, setSelectedUsers] = useState([])\n  const [selectAll, setSelectAll] = useState(false)\n  const [copiedField, setCopiedField] = useState(null)\n  const [isDetailModalOpen, setIsDetailModalOpen] = useState(false)\n  const [userToView, setUserToView] = useState(null)\n  const [isImportModalOpen, setIsImportModalOpen] = useState(false)\n  const [sortBy, setSortBy] = useState('created_at')\n  const [sortOrder, setSortOrder] = useState('desc')\n  const [page, setPage] = useState(1)\n  const [limit, setLimit] = useState(10)\n  const queryClient = useQueryClient()\n\n  // Fetch Users with pagination\n  const { data: usersResponse, isLoading } = useQuery(\n    ['users-list', filterRole, filterStatus, filterLastLogin, searchTerm, sortBy, sortOrder, page, limit],\n    () => userService.getAll({\n      role: filterRole !== 'all' ? filterRole : undefined,\n      status: filterStatus !== 'all' ? filterStatus : undefined,\n      search: searchTerm || undefined,\n      page,\n      limit,\n      sort_by: sortBy,\n      sort_order: sortOrder\n    }),\n    {\n      refetchOnWindowFocus: false,\n      keepPreviousData: true\n    }\n  )\n\n  const users = Array.isArray(usersResponse?.data) ? usersResponse.data : []\n  const pagination = usersResponse?.pagination || {}\n\n  // Client-side filter for last login (since backend doesn't support this yet)\n  const filteredUsers = users.filter(user => {\n    if (filterLastLogin === 'all') return true\n    \n    const lastLogin = user.last_login ? new Date(user.last_login) : null\n    const now = new Date()\n    const daysDiff = lastLogin ? Math.floor((now - lastLogin) / (1000 * 60 * 60 * 24)) : null\n    \n    switch(filterLastLogin) {\n      case 'today':\n        return daysDiff === 0\n      case 'week':\n        return daysDiff !== null && daysDiff <= 7\n      case 'month':\n        return daysDiff !== null && daysDiff <= 30\n      case 'never':\n        return lastLogin === null\n      default:\n        return true\n    }\n  })\n\n  // Fetch all users for stats\n  const { data: allUsersResponse } = useQuery(\n    'all-users-stats',\n    () => userService.getAll({ page: 1, limit: 1000 }),\n    {\n      refetchOnWindowFocus: false\n    }\n  )\n\n  const allUsers = Array.isArray(allUsersResponse?.data) ? allUsersResponse.data : []\n  const totalUsers = allUsers.length\n  const activeUsers = allUsers.filter(u => u.is_active).length\n  const adminUsers = allUsers.filter(u => u.role === 'admin').length\n  const technicianUsers = allUsers.filter(u => u.role === 'technician').length\n\n  const handleCreate = () => {\n    setSelectedUser(null)\n    setIsModalOpen(true)\n  }\n\n  const handleEdit = (user) => {\n    setSelectedUser(user)\n    setIsModalOpen(true)\n  }\n\n  const handleResetPassword = (user) => {\n    setUserToResetPassword(user)\n    setIsResetPasswordModalOpen(true)\n  }\n\n  const handleResetPasswordClose = () => {\n    setIsResetPasswordModalOpen(false)\n    setUserToResetPassword(null)\n  }\n\n  const handleResetPasswordSuccess = () => {\n    queryClient.invalidateQueries(['users-list'])\n    // Don't close modal yet, let user see the generated password\n  }\n\n  const handleDelete = (user) => {\n    setUserToDelete(user)\n    setIsDeleteModalOpen(true)\n  }\n\n  const handleDeleteClose = () => {\n    setIsDeleteModalOpen(false)\n    setUserToDelete(null)\n  }\n\n  const handleDeleteSuccess = () => {\n    queryClient.invalidateQueries(['users-list'])\n    queryClient.invalidateQueries('all-users-stats')\n  }\n\n  const handleUnlock = async (user) => {\n    if (!window.confirm(`Unlock account for ${user.full_name}? This will reset all failed login attempts.`)) {\n      return\n    }\n    \n    try {\n      await userService.unlockAccount(user.id)\n      toast.success(`Account unlocked for ${user.full_name}`)\n      queryClient.invalidateQueries(['users-list'])\n      queryClient.invalidateQueries('all-users-stats')\n    } catch (error) {\n      toast.error(error.response?.data?.message || 'Failed to unlock account')\n    }\n  }\n\n  // Bulk Actions\n  const handleSelectAll = (e) => {\n    if (e.target.checked) {\n      const allUserIds = filteredUsers.filter(u => u.id !== currentUser?.id).map(u => u.id)\n      setSelectedUsers(allUserIds)\n      setSelectAll(true)\n    } else {\n      setSelectedUsers([])\n      setSelectAll(false)\n    }\n  }\n\n  const handleSelectUser = (userId) => {\n    setSelectedUsers(prev => {\n      if (prev.includes(userId)) {\n        const newSelected = prev.filter(id => id !== userId)\n        setSelectAll(false)\n        return newSelected\n      } else {\n        return [...prev, userId]\n      }\n    })\n  }\n\n  const handleBulkDelete = async () => {\n    if (selectedUsers.length === 0) {\n      toast.error('Pilih minimal 1 user untuk dihapus')\n      return\n    }\n\n    if (!window.confirm(`Hapus ${selectedUsers.length} users yang dipilih?`)) {\n      return\n    }\n\n    try {\n      await Promise.all(selectedUsers.map(id => userService.delete(id)))\n      toast.success(`${selectedUsers.length} users berhasil dihapus`)\n      setSelectedUsers([])\n      setSelectAll(false)\n      queryClient.invalidateQueries(['users-list'])\n      queryClient.invalidateQueries('all-users-stats')\n    } catch (error) {\n      toast.error('Gagal menghapus beberapa users')\n    }\n  }\n\n  const handleBulkDeactivate = async () => {\n    if (selectedUsers.length === 0) {\n      toast.error('Pilih minimal 1 user untuk dinonaktifkan')\n      return\n    }\n\n    if (!window.confirm(`Nonaktifkan ${selectedUsers.length} users yang dipilih?`)) {\n      return\n    }\n\n    try {\n      await Promise.all(\n        selectedUsers.map(id => userService.update(id, { is_active: false }))\n      )\n      toast.success(`${selectedUsers.length} users berhasil dinonaktifkan`)\n      setSelectedUsers([])\n      setSelectAll(false)\n      queryClient.invalidateQueries(['users-list'])\n      queryClient.invalidateQueries('all-users-stats')\n    } catch (error) {\n      toast.error('Gagal menonaktifkan beberapa users')\n    }\n  }\n\n  const handleBulkActivate = async () => {\n    if (selectedUsers.length === 0) {\n      toast.error('Pilih minimal 1 user untuk diaktifkan')\n      return\n    }\n\n    try {\n      await Promise.all(\n        selectedUsers.map(id => userService.update(id, { is_active: true }))\n      )\n      toast.success(`${selectedUsers.length} users berhasil diaktifkan`)\n      setSelectedUsers([])\n      setSelectAll(false)\n      queryClient.invalidateQueries(['users-list'])\n      queryClient.invalidateQueries('all-users-stats')\n    } catch (error) {\n      toast.error('Gagal mengaktifkan beberapa users')\n    }\n  }\n\n  // Copy to clipboard\n  const handleCopyToClipboard = (text, field) => {\n    navigator.clipboard.writeText(text)\n    setCopiedField(field)\n    toast.success('Copied to clipboard!')\n    setTimeout(() => setCopiedField(null), 2000)\n  }\n\n  // View user detail\n  const handleViewDetail = (user) => {\n    setUserToView(user)\n    setIsDetailModalOpen(true)\n  }\n\n  const handleDetailModalClose = () => {\n    setIsDetailModalOpen(false)\n    setUserToView(null)\n  }\n\n  // Import users\n  const handleImport = () => {\n    setIsImportModalOpen(true)\n  }\n\n  const handleImportClose = () => {\n    setIsImportModalOpen(false)\n  }\n\n  const handleImportSuccess = () => {\n    queryClient.invalidateQueries(['users-list'])\n    queryClient.invalidateQueries('all-users-stats')\n  }\n\n  // Export to Excel\n  const handleExportExcel = () => {\n    const exportData = filteredUsers.map(user => ({\n      'Username': user.username,\n      'Full Name': user.full_name,\n      'Email': user.email,\n      'Phone': user.phone || '-',\n      'Role': user.role,\n      'Status': user.is_active ? 'Active' : 'Inactive',\n      'Last Login': user.last_login ? new Date(user.last_login).toLocaleString('id-ID') : 'Never',\n      'Created At': new Date(user.created_at).toLocaleString('id-ID')\n    }))\n\n    const worksheet = XLSX.utils.json_to_sheet(exportData)\n    const workbook = XLSX.utils.book_new()\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Users')\n    \n    // Auto-width columns\n    const maxWidth = exportData.reduce((w, r) => Math.max(w, r['Full Name']?.length || 0), 10)\n    worksheet['!cols'] = [\n      { wch: 15 }, // Username\n      { wch: maxWidth }, // Full Name\n      { wch: 25 }, // Email\n      { wch: 15 }, // Phone\n      { wch: 15 }, // Role\n      { wch: 10 }, // Status\n      { wch: 20 }, // Last Login\n      { wch: 20 }  // Created At\n    ]\n\n    const fileName = `users-export-${new Date().toISOString().split('T')[0]}.xlsx`\n    XLSX.writeFile(workbook, fileName)\n    toast.success(`Exported ${exportData.length} users to ${fileName}`)\n  }\n\n  // Export to CSV\n  const handleExportCSV = () => {\n    const exportData = filteredUsers.map(user => ({\n      'Username': user.username,\n      'Full Name': user.full_name,\n      'Email': user.email,\n      'Phone': user.phone || '-',\n      'Role': user.role,\n      'Status': user.is_active ? 'Active' : 'Inactive',\n      'Last Login': user.last_login ? new Date(user.last_login).toLocaleString('id-ID') : 'Never',\n      'Created At': new Date(user.created_at).toLocaleString('id-ID')\n    }))\n\n    const worksheet = XLSX.utils.json_to_sheet(exportData)\n    const csv = XLSX.utils.sheet_to_csv(worksheet)\n    \n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' })\n    const link = document.createElement('a')\n    const url = URL.createObjectURL(blob)\n    const fileName = `users-export-${new Date().toISOString().split('T')[0]}.csv`\n    \n    link.setAttribute('href', url)\n    link.setAttribute('download', fileName)\n    link.style.visibility = 'hidden'\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n    \n    toast.success(`Exported ${exportData.length} users to ${fileName}`)\n  }\n\n  const handleModalClose = () => {\n    setIsModalOpen(false)\n    setSelectedUser(null)\n  }\n\n  const handleSuccess = () => {\n    queryClient.invalidateQueries(['users-list'])\n    queryClient.invalidateQueries('all-users-stats')\n    handleModalClose()\n  }\n\n  const handleSort = (column) => {\n    if (sortBy === column) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')\n    } else {\n      setSortBy(column)\n      setSortOrder('asc')\n    }\n    setPage(1)\n  }\n\n  const getSortIcon = (column) => {\n    if (sortBy !== column) {\n      return <ArrowUpDown className=\"h-4 w-4 text-gray-400\" />\n    }\n    return sortOrder === 'asc' ? \n      <ArrowUp className=\"h-4 w-4\" /> : \n      <ArrowDown className=\"h-4 w-4\" />\n  }\n\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value)\n    setPage(1)\n  }\n\n  const handleFilterChange = (filterType, value) => {\n    if (filterType === 'role') {\n      setFilterRole(value)\n    } else if (filterType === 'status') {\n      setFilterStatus(value)\n    } else if (filterType === 'lastLogin') {\n      setFilterLastLogin(value)\n    }\n    setPage(1)\n  }\n\n  const handleLimitChange = (newLimit) => {\n    setLimit(parseInt(newLimit))\n    setPage(1)\n  }\n\n  const getRoleBadge = (role) => {\n    const badges = {\n      admin: 'bg-purple-100 text-purple-800',\n      supervisor: 'bg-blue-100 text-blue-800',\n      technician: 'bg-green-100 text-green-800',\n      customer_service: 'bg-yellow-100 text-yellow-800'\n    }\n    const labels = {\n      admin: 'Admin',\n      supervisor: 'Supervisor',\n      technician: 'Technician',\n      customer_service: 'Customer Service'\n    }\n    return (\n      <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${badges[role] || 'bg-gray-100 text-gray-800'}`}>\n        {labels[role] || role}\n      </span>\n    )\n  }\n\n  // RBAC: Only Admin & Supervisor can access this page\n  if (!isAdmin && !isSupervisor) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-96\">\n        <ShieldAlert className=\"h-24 w-24 text-red-500 mb-4\" />\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Access Denied</h2>\n        <p className=\"text-gray-600 mb-4\">You don't have permission to access User Management.</p>\n        <p className=\"text-sm text-gray-500\">Required role: Admin or Supervisor</p>\n      </div>\n    )\n  }\n\n  if (isLoading && page === 1) {\n    return (\n      <div className=\"flex justify-center items-center min-h-96\">\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">User Management</h1>\n          <p className=\"text-gray-600\">Kelola pengguna sistem dan akses</p>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          {/* Import Button */}\n          {isAdmin && (\n            <button \n              onClick={handleImport}\n              className=\"btn-outline flex items-center\"\n            >\n              <Upload className=\"h-4 w-4 mr-2\" />\n              Import\n            </button>\n          )}\n\n          {/* Export Dropdown */}\n          <div className=\"relative group\">\n            <button className=\"btn-outline flex items-center\">\n              <Download className=\"h-4 w-4 mr-2\" />\n              Export\n            </button>\n            <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all z-10\">\n              <button\n                onClick={handleExportExcel}\n                className=\"w-full px-4 py-2 text-left text-sm hover:bg-gray-50 flex items-center transition-colors rounded-t-lg\"\n              >\n                <FileSpreadsheet className=\"h-4 w-4 mr-2 text-green-600\" />\n                Export to Excel\n              </button>\n              <button\n                onClick={handleExportCSV}\n                className=\"w-full px-4 py-2 text-left text-sm hover:bg-gray-50 flex items-center transition-colors rounded-b-lg\"\n              >\n                <FileSpreadsheet className=\"h-4 w-4 mr-2 text-blue-600\" />\n                Export to CSV\n              </button>\n            </div>\n          </div>\n\n          {/* Bulk Actions Toolbar */}\n          {selectedUsers.length > 0 && isAdmin && (\n            <div className=\"flex items-center space-x-2 mr-4 px-4 py-2 bg-blue-50 border border-blue-200 rounded-lg\">\n              <span className=\"text-sm font-medium text-blue-900\">\n                {selectedUsers.length} selected\n              </span>\n              <button\n                onClick={handleBulkActivate}\n                className=\"text-xs px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 transition-colors\"\n                title=\"Activate selected users\"\n              >\n                Activate\n              </button>\n              <button\n                onClick={handleBulkDeactivate}\n                className=\"text-xs px-3 py-1 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition-colors\"\n                title=\"Deactivate selected users\"\n              >\n                Deactivate\n              </button>\n              <button\n                onClick={handleBulkDelete}\n                className=\"text-xs px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n                title=\"Delete selected users\"\n              >\n                Delete\n              </button>\n              <button\n                onClick={() => {\n                  setSelectedUsers([])\n                  setSelectAll(false)\n                }}\n                className=\"text-xs px-2 py-1 text-gray-600 hover:text-gray-800\"\n                title=\"Clear selection\"\n              >\n                ✕\n              </button>\n            </div>\n          )}\n          <button \n            onClick={handleCreate}\n            className=\"btn-primary\"\n          >\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Tambah User\n          </button>\n        </div>\n      </div>\n\n      {/* Statistics Cards */}\n      <div className=\"grid grid-cols-2 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <KPICard\n          icon={UserCheck}\n          title=\"Total Users\"\n          value={totalUsers}\n          color=\"blue\"\n        />\n        <KPICard\n          icon={UserCheck}\n          title=\"Active Users\"\n          value={activeUsers}\n          color=\"green\"\n        />\n        <KPICard\n          icon={UserCheck}\n          title=\"Admins\"\n          value={adminUsers}\n          color=\"purple\"\n        />\n        <KPICard\n          icon={UserCheck}\n          title=\"Technicians\"\n          value={technicianUsers}\n          color=\"orange\"\n        />\n      </div>\n\n      {/* Search and Filters */}\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Search\n            </label>\n            <div className=\"relative\">\n              <Search className=\"h-4 w-4 absolute left-3 top-3 text-gray-400\" />\n              <input\n                type=\"text\"\n                className=\"form-input pl-10\"\n                placeholder=\"Cari user...\"\n                value={searchTerm}\n                onChange={handleSearch}\n              />\n            </div>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Role\n            </label>\n            <select\n              className=\"form-input\"\n              value={filterRole}\n              onChange={(e) => handleFilterChange('role', e.target.value)}\n            >\n              <option value=\"all\">Semua Role</option>\n              <option value=\"admin\">Admin</option>\n              <option value=\"supervisor\">Supervisor</option>\n              <option value=\"manager\">Manager</option>\n              <option value=\"noc\">NOC</option>\n              <option value=\"technician\">Technician</option>\n              <option value=\"customer_service\">Customer Service</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Status\n            </label>\n            <select\n              className=\"form-input\"\n              value={filterStatus}\n              onChange={(e) => handleFilterChange('status', e.target.value)}\n            >\n              <option value=\"all\">Semua Status</option>\n              <option value=\"active\">Active</option>\n              <option value=\"inactive\">Inactive</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Last Login\n            </label>\n            <select\n              className=\"form-input\"\n              value={filterLastLogin}\n              onChange={(e) => handleFilterChange('lastLogin', e.target.value)}\n            >\n              <option value=\"all\">Semua Waktu</option>\n              <option value=\"today\">Hari Ini</option>\n              <option value=\"week\">7 Hari Terakhir</option>\n              <option value=\"month\">30 Hari Terakhir</option>\n              <option value=\"never\">Belum Pernah</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Users List */}\n      {users.length === 0 ? (\n        <div className=\"bg-white shadow rounded-lg p-12 text-center\">\n          <UserCheck className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Tidak ada user</h3>\n          <p className=\"text-gray-500 mb-4\">Mulai dengan menambahkan user pertama</p>\n          <button onClick={handleCreate} className=\"btn-primary\">\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Tambah User\n          </button>\n        </div>\n      ) : filteredUsers.length === 0 ? (\n        <div className=\"bg-white shadow rounded-lg p-12 text-center\">\n          <Search className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Tidak ada hasil</h3>\n          <p className=\"text-gray-500 mb-4\">Coba ubah filter atau search keyword</p>\n        </div>\n      ) : (\n        <>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h2 className=\"text-lg font-semibold text-gray-900\">\n                All Users\n                <span className=\"text-sm font-normal text-gray-500 ml-2\">\n                  ({pagination.total || 0} total)\n                </span>\n              </h2>\n            </div>\n            <div className=\"card-body p-0\">\n              <div className=\"overflow-x-auto\">\n                <table className=\"table w-full\" style={{ tableLayout: 'fixed', minWidth: '950px' }}>\n                  <thead className=\"table-header\">\n                    <tr>\n                      {/* Bulk Select Checkbox */}\n                      {isAdmin && (\n                        <th className=\"table-header-cell\" style={{ width: '50px' }}>\n                          <input\n                            type=\"checkbox\"\n                            checked={selectAll}\n                            onChange={handleSelectAll}\n                            className=\"cursor-pointer\"\n                          />\n                        </th>\n                      )}\n                      <th \n                        className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\" \n                        onClick={() => handleSort('full_name')}\n                        style={{ width: '200px' }}\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          <span>User</span>\n                          {getSortIcon('full_name')}\n                        </div>\n                      </th>\n                      <th \n                        className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\" \n                        onClick={() => handleSort('email')}\n                        style={{ width: '180px' }}\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          <span>Email</span>\n                          {getSortIcon('email')}\n                        </div>\n                      </th>\n                      <th className=\"table-header-cell\" style={{ width: '120px' }}>Phone</th>\n                      <th \n                        className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\" \n                        onClick={() => handleSort('role')}\n                        style={{ width: '130px' }}\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          <span>Role</span>\n                          {getSortIcon('role')}\n                        </div>\n                      </th>\n                      <th \n                        className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\" \n                        onClick={() => handleSort('last_login')}\n                        style={{ width: '100px' }}\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          <span>Last Login</span>\n                          {getSortIcon('last_login')}\n                        </div>\n                      </th>\n                      <th \n                        className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\" \n                        onClick={() => handleSort('is_active')}\n                        style={{ width: '90px' }}\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          <span>Status</span>\n                          {getSortIcon('is_active')}\n                        </div>\n                      </th>\n                      <th className=\"table-header-cell text-center\" style={{ width: '100px' }}>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"table-body\">\n                    {filteredUsers.map((user) => (\n                      <tr \n                        key={user.id} \n                        onClick={() => handleViewDetail(user)}\n                        className={`group cursor-pointer hover:shadow-md hover:border-l-4 hover:border-l-blue-500 transition-all duration-200 ${\n                          selectedUsers.includes(user.id) ? 'bg-blue-50' : 'hover:bg-blue-50'\n                        }`}\n                        title=\"Klik untuk lihat detail user\"\n                      >\n                        {/* Bulk Select Checkbox */}\n                        {isAdmin && (\n                          <td \n                            className=\"table-cell\"\n                            onClick={(e) => e.stopPropagation()}\n                          >\n                            {user.id !== currentUser?.id ? (\n                              <input\n                                type=\"checkbox\"\n                                checked={selectedUsers.includes(user.id)}\n                                onChange={() => handleSelectUser(user.id)}\n                                className=\"cursor-pointer\"\n                              />\n                            ) : (\n                              <span className=\"text-gray-300\">-</span>\n                            )}\n                          </td>\n                        )}\n                        <td className=\"table-cell\">\n                          <div className=\"flex items-center\">\n                            <div className=\"flex-shrink-0 h-10 w-10\">\n                              <div className=\"h-10 w-10 rounded-full bg-blue-100 flex items-center justify-center\">\n                                <span className=\"text-sm font-medium text-blue-600\">\n                                  {user.full_name?.charAt(0).toUpperCase()}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"ml-3\">\n                              <button\n                                onClick={() => handleViewDetail(user)}\n                                className=\"text-sm font-medium text-blue-600 hover:text-blue-800 truncate cursor-pointer text-left\"\n                                style={{ maxWidth: '130px' }}\n                                title=\"Click to view details\"\n                              >\n                                {user.full_name}\n                              </button>\n                              <div className=\"text-xs text-gray-500 truncate\" style={{ maxWidth: '130px' }}>\n                                @{user.username}\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"table-cell\">\n                          <div className=\"flex items-center group\">\n                            <div className=\"flex items-center flex-1 min-w-0\">\n                              <div className=\"text-sm text-gray-900 truncate\" title={user.email}>\n                                {user.email}\n                              </div>\n                              {user.email_verified ? (\n                                <MailCheck className=\"h-4 w-4 text-green-600 ml-1 flex-shrink-0\" title=\"Email verified\" />\n                              ) : (\n                                <Mail className=\"h-4 w-4 text-gray-400 ml-1 flex-shrink-0\" title=\"Email not verified\" />\n                              )}\n                            </div>\n                            <button\n                              onClick={() => handleCopyToClipboard(user.email, `email-${user.id}`)}\n                              className=\"ml-2 opacity-0 group-hover:opacity-100 p-1 hover:bg-gray-100 rounded transition-all flex-shrink-0\"\n                              title=\"Copy email\"\n                            >\n                              {copiedField === `email-${user.id}` ? (\n                                <Check className=\"h-3 w-3 text-green-600\" />\n                              ) : (\n                                <Copy className=\"h-3 w-3 text-gray-400\" />\n                              )}\n                            </button>\n                          </div>\n                        </td>\n                        <td className=\"table-cell whitespace-nowrap\">\n                          {user.phone ? (\n                            <div className=\"flex items-center group\">\n                              <div className=\"text-sm text-gray-900 flex-1\">{user.phone}</div>\n                              <button\n                                onClick={() => handleCopyToClipboard(user.phone, `phone-${user.id}`)}\n                                className=\"ml-2 opacity-0 group-hover:opacity-100 p-1 hover:bg-gray-100 rounded transition-all\"\n                                title=\"Copy phone\"\n                              >\n                                {copiedField === `phone-${user.id}` ? (\n                                  <Check className=\"h-3 w-3 text-green-600\" />\n                                ) : (\n                                  <Copy className=\"h-3 w-3 text-gray-400\" />\n                                )}\n                              </button>\n                            </div>\n                          ) : (\n                            <div className=\"text-sm text-gray-400\">-</div>\n                          )}\n                        </td>\n                        <td className=\"table-cell whitespace-nowrap\">\n                          {getRoleBadge(user.role)}\n                        </td>\n                        <td className=\"table-cell whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-500\">\n                            {user.last_login ? new Date(user.last_login).toLocaleDateString('id-ID', { day: '2-digit', month: 'short' }) : 'Never'}\n                          </div>\n                        </td>\n                        <td className=\"table-cell whitespace-nowrap\">\n                          <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                            user.is_active ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\n                          }`}>\n                            {user.is_active ? 'Active' : 'Inactive'}\n                          </span>\n                        </td>\n                        <td \n                          className=\"table-cell text-center\"\n                          onClick={(e) => e.stopPropagation()}\n                        >\n                          <div className=\"flex justify-center space-x-1 opacity-0 group-hover:opacity-100 transition-opacity\">\n                            {/* Edit: Admin & Supervisor can edit */}\n                            {(isAdmin || isSupervisor) && (\n                              <button\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleEdit(user);\n                                }}\n                                className=\"inline-flex items-center justify-center w-8 h-8 text-blue-600 hover:text-blue-800 hover:bg-blue-50 rounded-md transition-colors\"\n                                title=\"Edit User\"\n                              >\n                                <Edit className=\"h-4 w-4\" />\n                              </button>\n                            )}\n                            {/* Reset Password: Only Admin */}\n                            {isAdmin && user.id !== currentUser?.id && (\n                              <button\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleResetPassword(user);\n                                }}\n                                className=\"inline-flex items-center justify-center w-8 h-8 text-orange-600 hover:text-orange-800 hover:bg-orange-50 rounded-md transition-colors\"\n                                title=\"Reset Password\"\n                              >\n                                <Key className=\"h-4 w-4\" />\n                              </button>\n                            )}\n                            {/* Unlock Account: Only Admin, if account has failed attempts */}\n                            {isAdmin && user.id !== currentUser?.id && (user.failed_login_attempts > 0 || user.locked_until) && (\n                              <button\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleUnlock(user);\n                                }}\n                                className=\"inline-flex items-center justify-center w-8 h-8 text-green-600 hover:text-green-800 hover:bg-green-50 rounded-md transition-colors\"\n                                title={`Unlock Account (${user.failed_login_attempts || 0} failed attempts)`}\n                              >\n                                <Unlock className=\"h-4 w-4\" />\n                              </button>\n                            )}\n                            {/* Delete: Only Admin can delete */}\n                            {isAdmin && user.id !== currentUser?.id && (\n                              <button\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleDelete(user);\n                                }}\n                                className=\"inline-flex items-center justify-center w-8 h-8 text-red-600 hover:text-red-800 hover:bg-red-50 rounded-md transition-colors\"\n                                title=\"Delete User\"\n                              >\n                                <Trash2 className=\"h-4 w-4\" />\n                              </button>\n                            )}\n                            {/* Prevent self-actions */}\n                            {user.id === currentUser?.id && (\n                              <span className=\"text-xs text-gray-400 px-2\" title=\"Cannot modify yourself\">\n                                -\n                              </span>\n                            )}\n                          </div>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n\n          {/* Pagination */}\n          <div className=\"bg-white shadow rounded-lg\">\n            <div className=\"px-4 py-3 border-t border-gray-200 sm:px-6\">\n              <div className=\"flex-1 flex justify-between sm:hidden\">\n                <button\n                  onClick={() => setPage(Math.max(1, page - 1))}\n                  disabled={page === 1}\n                  className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  Previous\n                </button>\n                <button\n                  onClick={() => setPage(Math.min(pagination.pages || 1, page + 1))}\n                  disabled={page === (pagination.pages || 1)}\n                  className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  Next\n                </button>\n              </div>\n              <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n                <div className=\"flex items-center gap-4\">\n                  <div className=\"flex items-center gap-2\">\n                    <label className=\"text-sm text-gray-700\">Show</label>\n                    <select\n                      value={limit}\n                      onChange={(e) => handleLimitChange(e.target.value)}\n                      className=\"form-input py-1 px-2 text-sm border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                    >\n                      <option value=\"10\">10</option>\n                      <option value=\"25\">25</option>\n                      <option value=\"50\">50</option>\n                      <option value=\"100\">100</option>\n                    </select>\n                    <span className=\"text-sm text-gray-700\">rows</span>\n                  </div>\n                  <div className=\"border-l border-gray-300 h-6\"></div>\n                  <p className=\"text-sm text-gray-700\">\n                    Showing <span className=\"font-medium\">{((page - 1) * limit) + 1}</span> to{' '}\n                    <span className=\"font-medium\">\n                      {Math.min(page * limit, pagination.total || 0)}\n                    </span>{' '}\n                    of <span className=\"font-medium\">{pagination.total || 0}</span> results\n                  </p>\n                </div>\n                <div>\n                  <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\n                    <button\n                      onClick={() => setPage(Math.max(1, page - 1))}\n                      disabled={page === 1}\n                      className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      <ChevronLeft className=\"h-5 w-5\" />\n                    </button>\n                    {Array.from({ length: Math.min(pagination.pages || 1, 10) }, (_, i) => {\n                      if (pagination.pages <= 10) return i + 1;\n                      if (page <= 5) return i + 1;\n                      if (page >= pagination.pages - 4) return pagination.pages - 9 + i;\n                      return page - 5 + i;\n                    }).map((pageNum) => (\n                      <button\n                        key={pageNum}\n                        onClick={() => setPage(pageNum)}\n                        className={`relative inline-flex items-center px-4 py-2 border text-sm font-medium ${\n                          page === pageNum\n                            ? 'z-10 bg-blue-50 border-blue-500 text-blue-600'\n                            : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50'\n                        }`}\n                      >\n                        {pageNum}\n                      </button>\n                    ))}\n                    <button\n                      onClick={() => setPage(Math.min(pagination.pages || 1, page + 1))}\n                      disabled={page === (pagination.pages || 1)}\n                      className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      <ChevronRight className=\"h-5 w-5\" />\n                    </button>\n                  </nav>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n\n      {/* User Modal */}\n      {isModalOpen && (\n        <UserModal\n          user={selectedUser}\n          onClose={handleModalClose}\n          onSuccess={handleSuccess}\n        />\n      )}\n\n      {/* Reset Password Modal */}\n      {isResetPasswordModalOpen && userToResetPassword && (\n        <ResetPasswordModal\n          user={userToResetPassword}\n          onClose={handleResetPasswordClose}\n          onSuccess={handleResetPasswordSuccess}\n        />\n      )}\n\n      {/* Delete Confirmation Modal */}\n      {isDeleteModalOpen && userToDelete && (\n        <DeleteConfirmationModal\n          user={userToDelete}\n          onClose={handleDeleteClose}\n          onSuccess={handleDeleteSuccess}\n        />\n      )}\n\n      {/* User Detail Modal */}\n      {isDetailModalOpen && userToView && (\n        <UserDetailModal\n          user={userToView}\n          onClose={handleDetailModalClose}\n        />\n      )}\n\n      {/* Import Users Modal */}\n      {isImportModalOpen && (\n        <ImportUsersModal\n          onClose={handleImportClose}\n          onSuccess={handleImportSuccess}\n        />\n      )}\n\n      {/* Activity Log Panel */}\n      {(isAdmin || isSupervisor) && (\n        <ActivityLogPanel limit={15} />\n      )}\n    </div>\n  )\n}\n\nexport default UsersPage\n"],"names":["userService","_0","__async","params","queryParams","queryString","api","error","id","data","new_password","UserModal","user","onClose","onSuccess","isEdit","showPermissionPreview","setShowPermissionPreview","useState","register","handleSubmit","errors","isSubmitting","reset","watch","useForm","selectedRole","permissionsData","useQuery","permissionService","useEffect","mutation","useMutation","toast","_b","_a","onSubmit","submitData","__spreadProps","__spreadValues","jsxs","jsx","Edit3","UserPlus","X","User","Mail","Shield","Info","perm","index","CheckCircle","Lock","ResetPasswordModal","newPassword","setNewPassword","generatedPassword","setGeneratedPassword","showPassword","setShowPassword","copied","setCopied","response","generateRandomPassword","charset","password","i","e","copyToClipboard","Key","Check","Copy","DeleteConfirmationModal","confirmText","setConfirmText","isPermanent","setIsPermanent","isConfirmed","handleDelete","AlertTriangle","Trash2","UserDetailModal","formatDate","dateString","getRoleBadge","role","colors","labels","XCircle","MailCheck","Phone","Calendar","Clock","ImportUsersModal","file","setFile","importData","setImportData","validationResults","setValidationResults","importing","setImporting","handleFileChange","selectedFile","fileExtension","reader","event","workbook","XLSX.read","sheetName","worksheet","jsonData","XLSX.utils","validated","row","_c","_d","_e","_f","_g","validCount","v","invalidCount","downloadTemplate","template","XLSX.writeFile","handleImport","validUsers","item","successCount","failCount","Upload","Download","FileSpreadsheet","idx","AlertCircle","ActivityLogPanel","targetUserId","limit","logsResponse","isLoading","logs","getActionIcon","action","Edit","RotateCcw","Activity","getActionColor","getActionLabel","formatTimestamp","date","diff","seconds","minutes","hours","days","LoadingSpinner","log","key","value","UsersPage","currentUser","isAdmin","isSupervisor","useAuth","searchTerm","setSearchTerm","filterRole","setFilterRole","filterStatus","setFilterStatus","filterLastLogin","setFilterLastLogin","isModalOpen","setIsModalOpen","selectedUser","setSelectedUser","isResetPasswordModalOpen","setIsResetPasswordModalOpen","userToResetPassword","setUserToResetPassword","isDeleteModalOpen","setIsDeleteModalOpen","userToDelete","setUserToDelete","selectedUsers","setSelectedUsers","selectAll","setSelectAll","copiedField","setCopiedField","isDetailModalOpen","setIsDetailModalOpen","userToView","setUserToView","isImportModalOpen","setIsImportModalOpen","sortBy","setSortBy","sortOrder","setSortOrder","page","setPage","setLimit","queryClient","useQueryClient","usersResponse","users","pagination","filteredUsers","lastLogin","daysDiff","allUsersResponse","allUsers","totalUsers","activeUsers","u","adminUsers","technicianUsers","handleCreate","handleEdit","handleResetPassword","handleResetPasswordClose","handleResetPasswordSuccess","handleDeleteClose","handleDeleteSuccess","handleUnlock","handleSelectAll","allUserIds","handleSelectUser","userId","prev","newSelected","handleBulkDelete","handleBulkDeactivate","handleBulkActivate","handleCopyToClipboard","text","field","handleViewDetail","handleDetailModalClose","handleImportClose","handleImportSuccess","handleExportExcel","exportData","maxWidth","w","r","fileName","handleExportCSV","csv","blob","link","url","handleModalClose","handleSuccess","handleSort","column","getSortIcon","ArrowUpDown","ArrowUp","ArrowDown","handleSearch","handleFilterChange","filterType","handleLimitChange","newLimit","badges","ShieldAlert","Plus","KPICard","UserCheck","Search","Fragment","Unlock","ChevronLeft","_","pageNum","ChevronRight"],"mappings":"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"}