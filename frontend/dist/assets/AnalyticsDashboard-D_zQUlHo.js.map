{"version":3,"file":"AnalyticsDashboard-D_zQUlHo.js","sources":["../../src/components/dashboard/ChartCard.jsx","../../src/components/dashboard/RecentActivities.jsx","../../src/pages/AnalyticsDashboard.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Calendar, RefreshCw } from 'lucide-react';\nimport {\n  LineChart,\n  Line,\n  AreaChart,\n  Area,\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\n\nconst ChartCard = ({ \n  title, \n  data, \n  type = 'line',\n  height = 300,\n  colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444'],\n  className = '',\n  showDateRange = false,\n  dateRange = null,\n  onDateRangeChange = null,\n  onApplyFilter = null,\n  isLoading = false\n}) => {\n  const [tempDateRange, setTempDateRange] = useState(dateRange);\n  const [showPresets, setShowPresets] = useState(false);\n\n  // Update tempDateRange when dateRange prop changes\n  React.useEffect(() => {\n    setTempDateRange(dateRange);\n  }, [dateRange]);\n\n  const handlePresetClick = (days) => {\n    const end = new Date();\n    const start = new Date();\n    \n    if (days === 0) {\n      // Today\n      start.setHours(0, 0, 0, 0);\n    } else {\n      start.setDate(end.getDate() - days);\n    }\n    \n    const newRange = {\n      start: start.toISOString().split('T')[0],\n      end: end.toISOString().split('T')[0]\n    };\n    \n    setTempDateRange(newRange);\n    if (onDateRangeChange) {\n      onDateRangeChange(newRange);\n    }\n    if (onApplyFilter) {\n      onApplyFilter(newRange);\n    }\n    setShowPresets(false);\n  };\n\n  const handleApply = () => {\n    if (onApplyFilter && tempDateRange) {\n      onApplyFilter(tempDateRange);\n    }\n  };\n  const renderChart = () => {\n    switch (type) {\n      case 'line':\n        return (\n          <ResponsiveContainer width=\"100%\" height={height}>\n            <LineChart data={data}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n              <XAxis \n                dataKey=\"date\" \n                stroke=\"#6b7280\"\n                fontSize={12}\n                tickFormatter={(value) => {\n                  if (value) {\n                    const date = new Date(value);\n                    return `${date.getDate()}/${date.getMonth() + 1}`;\n                  }\n                  return value;\n                }}\n              />\n              <YAxis stroke=\"#6b7280\" fontSize={12} />\n              <Tooltip \n                contentStyle={{\n                  backgroundColor: '#fff',\n                  border: '1px solid #e5e7eb',\n                  borderRadius: '8px',\n                  boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n                }}\n                labelFormatter={(value) => {\n                  if (value) {\n                    const date = new Date(value);\n                    return date.toLocaleDateString('id-ID');\n                  }\n                  return value;\n                }}\n              />\n              <Legend \n                verticalAlign=\"bottom\"\n                height={24}\n                wrapperStyle={{ paddingTop: '8px' }}\n              />\n              <Line \n                type=\"monotone\" \n                dataKey=\"created\" \n                stroke={colors[0]} \n                strokeWidth={2}\n                name=\"Created\"\n                dot={{ fill: colors[0], strokeWidth: 2, r: 4 }}\n                activeDot={{ r: 6 }}\n              />\n              <Line \n                type=\"monotone\" \n                dataKey=\"completed\" \n                stroke={colors[1]} \n                strokeWidth={2}\n                name=\"Completed\"\n                dot={{ fill: colors[1], strokeWidth: 2, r: 4 }}\n                activeDot={{ r: 6 }}\n              />\n              <Line \n                type=\"monotone\" \n                dataKey=\"critical\" \n                stroke={colors[3]} \n                strokeWidth={2}\n                name=\"Critical\"\n                dot={{ fill: colors[3], strokeWidth: 2, r: 4 }}\n                activeDot={{ r: 6 }}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        );\n\n      case 'area':\n        return (\n          <ResponsiveContainer width=\"100%\" height={height}>\n            <AreaChart data={data}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n              <XAxis dataKey=\"date\" stroke=\"#6b7280\" fontSize={12} />\n              <YAxis stroke=\"#6b7280\" fontSize={12} />\n              <Tooltip />\n              <Area \n                type=\"monotone\" \n                dataKey=\"created\" \n                stackId=\"1\"\n                stroke={colors[0]} \n                fill={colors[0]}\n                fillOpacity={0.6}\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        );\n\n      case 'bar':\n        return (\n          <ResponsiveContainer width=\"100%\" height={height}>\n            <BarChart data={data}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n              <XAxis \n                dataKey=\"name\" \n                stroke=\"#6b7280\" \n                fontSize={12}\n                angle={-45}\n                textAnchor=\"end\"\n                height={80}\n              />\n              <YAxis stroke=\"#6b7280\" fontSize={12} />\n              <Tooltip \n                contentStyle={{\n                  backgroundColor: '#fff',\n                  border: '1px solid #e5e7eb',\n                  borderRadius: '8px',\n                  boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n                }}\n              />\n              <Bar \n                dataKey=\"completedTickets\" \n                fill={colors[0]}\n                radius={[4, 4, 0, 0]}\n                name=\"Completed Tickets\"\n              />\n            </BarChart>\n          </ResponsiveContainer>\n        );\n\n      case 'pie':\n        // Format service type names for better display\n        const formattedData = data.map(item => ({\n          ...item,\n          displayName: item.type ? \n            item.type.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ') \n            : item.name\n        }));\n\n        return (\n          <ResponsiveContainer width=\"100%\" height={height}>\n            <PieChart>\n              <Pie\n                data={formattedData}\n                cx=\"50%\"\n                cy=\"45%\"\n                labelLine={false}\n                label={({ percentage }) => `${percentage}%`}\n                outerRadius={110}\n                fill=\"#8884d8\"\n                dataKey=\"count\"\n                nameKey=\"displayName\"\n              >\n                {formattedData.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\n                ))}\n              </Pie>\n              <Tooltip \n                formatter={(value, name) => [value, name]}\n                contentStyle={{\n                  backgroundColor: '#fff',\n                  border: '1px solid #e5e7eb',\n                  borderRadius: '8px',\n                  boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n                }}\n              />\n              <Legend \n                verticalAlign=\"bottom\" \n                height={28}\n                iconType=\"circle\"\n                wrapperStyle={{ paddingTop: '10px' }}\n              />\n            </PieChart>\n          </ResponsiveContainer>\n        );\n\n      default:\n        return <div>Chart type not supported</div>;\n    }\n  };\n\n  return (\n    <div className={`bg-white rounded-xl p-6 border border-gray-200 hover:shadow-lg transition-shadow duration-200 ${className}`}>\n      <div className=\"mb-4\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">{title}</h3>\n          {showDateRange && (\n            <div className=\"relative\">\n              <button\n                onClick={() => setShowPresets(!showPresets)}\n                className=\"flex items-center gap-2 px-3 py-1.5 text-sm text-gray-700 hover:bg-gray-100 rounded-lg transition-colors\"\n              >\n                <Calendar className=\"h-4 w-4\" />\n                Quick Select\n              </button>\n              \n              {showPresets && (\n                <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 z-10\">\n                  <div className=\"py-1\">\n                    <button\n                      onClick={() => handlePresetClick(0)}\n                      className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                    >\n                      Today\n                    </button>\n                    <button\n                      onClick={() => handlePresetClick(7)}\n                      className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                    >\n                      Last 7 days\n                    </button>\n                    <button\n                      onClick={() => handlePresetClick(30)}\n                      className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                    >\n                      Last 30 days\n                    </button>\n                    <button\n                      onClick={() => handlePresetClick(90)}\n                      className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                    >\n                      Last 90 days\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n        \n        {showDateRange && (\n          <div className=\"flex items-center gap-2 flex-wrap\">\n            <input\n              type=\"date\"\n              value={tempDateRange?.start || ''}\n              onChange={(e) => setTempDateRange({ ...tempDateRange, start: e.target.value })}\n              className=\"text-sm px-3 py-1.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n            <span className=\"text-gray-500\">-</span>\n            <input\n              type=\"date\"\n              value={tempDateRange?.end || ''}\n              onChange={(e) => setTempDateRange({ ...tempDateRange, end: e.target.value })}\n              className=\"text-sm px-3 py-1.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n            <button\n              onClick={handleApply}\n              disabled={isLoading}\n              className=\"btn-primary text-sm px-4 py-1.5 flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isLoading ? (\n                <>\n                  <RefreshCw className=\"h-4 w-4 animate-spin\" />\n                  Loading...\n                </>\n              ) : (\n                'Apply'\n              )}\n            </button>\n          </div>\n        )}\n      </div>\n      \n      {isLoading ? (\n        <div className=\"flex items-center justify-center\" style={{ height }}>\n          <RefreshCw className=\"h-8 w-8 text-blue-500 animate-spin\" />\n        </div>\n      ) : (\n        renderChart()\n      )}\n    </div>\n  );\n};\n\nexport default ChartCard;\n","import React from 'react';\nimport { Clock, User, AlertCircle, CheckCircle, XCircle } from 'lucide-react';\n\nconst RecentActivities = ({ activities = [] }) => {\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'completed':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 'in_progress':\n        return <Clock className=\"h-4 w-4 text-blue-500\" />;\n      case 'cancelled':\n        return <XCircle className=\"h-4 w-4 text-red-500\" />;\n      default:\n        return <AlertCircle className=\"h-4 w-4 text-yellow-500\" />;\n    }\n  };\n\n  const getPriorityColor = (priority) => {\n    switch (priority) {\n      case 'critical':\n        return 'text-red-600 bg-red-50';\n      case 'high':\n        return 'text-orange-600 bg-orange-50';\n      case 'normal':\n        return 'text-blue-600 bg-blue-50';\n      case 'low':\n        return 'text-gray-600 bg-gray-50';\n      default:\n        return 'text-gray-600 bg-gray-50';\n    }\n  };\n\n  const formatTimeAgo = (timestamp) => {\n    const now = new Date();\n    const time = new Date(timestamp);\n    const diffInMinutes = Math.floor((now - time) / (1000 * 60));\n    \n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    \n    const diffInHours = Math.floor(diffInMinutes / 60);\n    if (diffInHours < 24) return `${diffInHours}h ago`;\n    \n    const diffInDays = Math.floor(diffInHours / 24);\n    return `${diffInDays}d ago`;\n  };\n\n  if (activities.length === 0) {\n    return (\n      <div className=\"bg-white rounded-xl p-6 border border-gray-200\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Recent Activities</h3>\n        <div className=\"text-center py-8\">\n          <Clock className=\"h-12 w-12 text-gray-300 mx-auto mb-4\" />\n          <p className=\"text-gray-500\">No recent activities</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-xl p-6 border border-gray-200 hover:shadow-lg transition-shadow duration-200\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Recent Activities</h3>\n        <button className=\"text-sm text-blue-600 hover:text-blue-800 font-medium\">\n          View All\n        </button>\n      </div>\n      \n      <div className=\"space-y-4\">\n        {activities.map((activity, index) => (\n          <div key={activity.id || index} className=\"flex items-start space-x-3 p-3 rounded-lg hover:bg-gray-50 transition-colors duration-150\">\n            <div className=\"flex-shrink-0 mt-0.5\">\n              {getStatusIcon(activity.status)}\n            </div>\n            \n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex items-center justify-between\">\n                <p className=\"text-sm font-medium text-gray-900 truncate\">\n                  {activity.ticketNumber}\n                </p>\n                <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getPriorityColor(activity.priority)}`}>\n                  {activity.priority}\n                </span>\n              </div>\n              \n              <p className=\"text-sm text-gray-600 mt-1 line-clamp-2\">\n                {activity.title}\n              </p>\n              \n              <div className=\"flex items-center justify-between mt-2\">\n                <div className=\"flex items-center space-x-2 text-xs text-gray-500\">\n                  <User className=\"h-3 w-3\" />\n                  <span>{activity.customerName}</span>\n                  {activity.technicianName && (\n                    <>\n                      <span>•</span>\n                      <span>{activity.technicianName}</span>\n                    </>\n                  )}\n                </div>\n                <span className=\"text-xs text-gray-400\">\n                  {formatTimeAgo(activity.timestamp)}\n                </span>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RecentActivities;\n","import React, { useState, useEffect } from 'react';\nimport { useQuery, useQueryClient } from 'react-query';\nimport { \n  BarChart3, \n  Users, \n  Clock, \n  Star, \n  DollarSign, \n  Ticket,\n  TrendingUp,\n  Activity,\n  AlertTriangle,\n  CheckCircle\n} from 'lucide-react';\n\nimport analyticsService from '../services/analyticsService';\nimport socketService from '../services/socketService';\nimport KPICard from '../components/dashboard/KPICard';\nimport ChartCard from '../components/dashboard/ChartCard';\nimport RecentActivities from '../components/dashboard/RecentActivities';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\nconst AnalyticsDashboard = () => {\n  const [timeframe, setTimeframe] = useState(30);\n  const queryClient = useQueryClient();\n  \n  // Date range states for charts\n  const [trendsDateRange, setTrendsDateRange] = useState({\n    start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n    end: new Date().toISOString().split('T')[0]\n  });\n  \n  const [distributionDateRange, setDistributionDateRange] = useState({\n    start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n    end: new Date().toISOString().split('T')[0]\n  });\n  \n  // Loading states for chart filters\n  const [trendsFilterLoading, setTrendsFilterLoading] = useState(false);\n  const [distributionFilterLoading, setDistributionFilterLoading] = useState(false);\n  \n  // Apply filter handlers\n  const handleTrendsFilter = async (newRange) => {\n    setTrendsFilterLoading(true);\n    setTrendsDateRange(newRange);\n    // Refetch data with new date range\n    await refetchTrends();\n    setTrendsFilterLoading(false);\n  };\n  \n  const handleDistributionFilter = async (newRange) => {\n    setDistributionFilterLoading(true);\n    setDistributionDateRange(newRange);\n    // Refetch data with new date range\n    await refetchDistribution();\n    setDistributionFilterLoading(false);\n  };\n\n  // Fetch dashboard data\n  const { data: overviewData, isLoading: overviewLoading, error: overviewError } = useQuery(\n    ['dashboard-overview', timeframe],\n    () => analyticsService.getDashboardOverview(timeframe),\n    { \n      refetchInterval: 30000, // Refresh every 30 seconds\n      staleTime: 25000\n    }\n  );\n\n  const { data: trendsData, isLoading: trendsLoading, refetch: refetchTrends } = useQuery(\n    ['ticket-trends', trendsDateRange],\n    () => analyticsService.getTicketTrends(timeframe),\n    { \n      refetchInterval: 60000, // Refresh every minute\n      staleTime: 50000\n    }\n  );\n\n  const { data: distributionData, isLoading: distributionLoading, refetch: refetchDistribution } = useQuery(\n    ['service-distribution', distributionDateRange],\n    () => analyticsService.getServiceDistribution(),\n    { \n      refetchInterval: 60000,\n      staleTime: 50000\n    }\n  );\n\n  const { data: performanceData, isLoading: performanceLoading } = useQuery(\n    'technician-performance',\n    analyticsService.getTechnicianPerformance,\n    { \n      refetchInterval: 60000,\n      staleTime: 50000\n    }\n  );\n\n  const { data: activitiesData, isLoading: activitiesLoading } = useQuery(\n    'recent-activities',\n    () => analyticsService.getRecentActivities(3),\n    { \n      refetchInterval: 15000, // Refresh every 15 seconds for real-time feel\n      staleTime: 10000\n    }\n  );\n\n  // Setup Socket.IO listeners for real-time updates\n  useEffect(() => {\n    console.log('📊 Setting up dashboard real-time listeners...');\n    \n    // Listen for dashboard update events\n    const handleDashboardUpdate = (data) => {\n      console.log('📊 Dashboard update received:', data);\n      \n      // Invalidate and refetch all dashboard queries\n      queryClient.invalidateQueries('dashboard-overview');\n      queryClient.invalidateQueries('ticket-trends');\n      queryClient.invalidateQueries('service-distribution');\n      queryClient.invalidateQueries('technician-performance');\n      queryClient.invalidateQueries('recent-activities');\n    };\n\n    // Listen for specific ticket events\n    const handleNewTicket = (data) => {\n      console.log('🎫 New ticket created:', data);\n      queryClient.invalidateQueries('dashboard-overview');\n      queryClient.invalidateQueries('ticket-trends');\n      queryClient.invalidateQueries('service-distribution');\n      queryClient.invalidateQueries('recent-activities');\n    };\n\n    const handleTicketStatusUpdated = (data) => {\n      console.log('🔄 Ticket status updated:', data);\n      queryClient.invalidateQueries('dashboard-overview');\n      queryClient.invalidateQueries('recent-activities');\n    };\n\n    const handleTicketAssigned = (data) => {\n      console.log('👤 Ticket assigned:', data);\n      queryClient.invalidateQueries('dashboard-overview');\n      queryClient.invalidateQueries('technician-performance');\n      queryClient.invalidateQueries('recent-activities');\n    };\n\n    // Register Socket.IO listeners\n    socketService.on('dashboard_update', handleDashboardUpdate);\n    socketService.on('new_ticket', handleNewTicket);\n    socketService.on('new_ticket_global', handleNewTicket);\n    socketService.on('ticket_status_updated', handleTicketStatusUpdated);\n    socketService.on('ticket_assigned', handleTicketAssigned);\n    socketService.on('ticket_updated', handleTicketAssigned);\n\n    // Cleanup function\n    return () => {\n      console.log('📊 Cleaning up dashboard listeners...');\n      socketService.off('dashboard_update', handleDashboardUpdate);\n      socketService.off('new_ticket', handleNewTicket);\n      socketService.off('new_ticket_global', handleNewTicket);\n      socketService.off('ticket_status_updated', handleTicketStatusUpdated);\n      socketService.off('ticket_assigned', handleTicketAssigned);\n      socketService.off('ticket_updated', handleTicketAssigned);\n    };\n  }, [queryClient]);\n\n  if (overviewLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (overviewError) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <AlertTriangle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Failed to Load Dashboard</h2>\n          <p className=\"text-gray-600\">Please try refreshing the page</p>\n        </div>\n      </div>\n    );\n  }\n\n  const overview = overviewData?.data || {};\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Analytics Dashboard</h1>\n          <p className=\"text-gray-600\">Monitor your ISP operations performance</p>\n        </div>\n        \n        <div className=\"flex items-center space-x-4\">\n          <select\n            value={timeframe}\n            onChange={(e) => setTimeframe(parseInt(e.target.value))}\n            className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value={7}>Last 7 days</option>\n            <option value={30}>Last 30 days</option>\n            <option value={90}>Last 90 days</option>\n          </select>\n          \n          <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n            <Activity className=\"h-4 w-4\" />\n            <span>Auto-refresh: 30s</span>\n          </div>\n        </div>\n      </div>\n\n      {/* KPI Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-6\">\n        <KPICard\n          title=\"Total Tickets\"\n          value={overview.tickets?.total || 0}\n          icon={Ticket}\n          color=\"blue\"\n        />\n        \n        <KPICard\n          title=\"SLA Compliance\"\n          value={overview.sla?.complianceRate || 0}\n          icon={CheckCircle}\n          color=\"green\"\n          format=\"percentage\"\n        />\n        \n        <KPICard\n          title=\"Avg Resolution\"\n          value={overview.resolution?.averageHours || 0}\n          icon={Clock}\n          color=\"yellow\"\n          format=\"decimal\"\n          suffix=\"h\"\n        />\n        \n        <KPICard\n          title=\"Customer Rating\"\n          value={overview.satisfaction?.averageRating || 0}\n          icon={Star}\n          color=\"purple\"\n          format=\"decimal\"\n          suffix=\"/5\"\n        />\n        \n        <KPICard\n          title=\"Active Technicians\"\n          value={overview.technicians?.total || 0}\n          icon={Users}\n          color=\"indigo\"\n        />\n        \n        <KPICard\n          title=\"Monthly Revenue\"\n          value={overview.revenue?.estimatedMonthly || 0}\n          icon={DollarSign}\n          color=\"green\"\n          format=\"currency\"\n        />\n      </div>\n\n      {/* Charts Row 1 */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <ChartCard\n          title=\"Ticket Trends\"\n          data={trendsData?.data || []}\n          type=\"line\"\n          height={350}\n          colors={['#3B82F6', '#10B981', '#EF4444']}\n          showDateRange={true}\n          dateRange={trendsDateRange}\n          onDateRangeChange={setTrendsDateRange}\n          onApplyFilter={handleTrendsFilter}\n          isLoading={trendsFilterLoading}\n        />\n        \n        <ChartCard\n          title=\"Service Type Distribution\"\n          data={distributionData?.data || []}\n          type=\"pie\"\n          height={400}\n          colors={['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6']}\n          showDateRange={true}\n          dateRange={distributionDateRange}\n          onDateRangeChange={setDistributionDateRange}\n          onApplyFilter={handleDistributionFilter}\n          isLoading={distributionFilterLoading}\n        />\n      </div>\n\n      {/* Charts Row 2 */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <div className=\"lg:col-span-2\">\n          <ChartCard\n            title=\"Technician Performance\"\n            data={performanceData?.data || []}\n            type=\"bar\"\n            height={350}\n            colors={['#3B82F6', '#10B981', '#F59E0B']}\n          />\n        </div>\n        \n        <RecentActivities activities={activitiesData?.data || []} />\n      </div>\n\n      {/* Status Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-xl p-6 border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Today's Tickets</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{overview.tickets?.today || 0}</p>\n            </div>\n            <TrendingUp className=\"h-8 w-8 text-blue-500\" />\n          </div>\n          <div className=\"mt-4 space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-600\">Open</span>\n              <span className=\"font-medium\">{overview.tickets?.byStatus?.open || 0}</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-600\">In Progress</span>\n              <span className=\"font-medium\">{overview.tickets?.byStatus?.in_progress || 0}</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-600\">Assigned</span>\n              <span className=\"font-medium\">{overview.tickets?.byStatus?.assigned || 0}</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-xl p-6 border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Technician Status</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{overview.technicians?.total || 0}</p>\n            </div>\n            <Users className=\"h-8 w-8 text-green-500\" />\n          </div>\n          <div className=\"mt-4 space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-600\">Available</span>\n              <span className=\"font-medium text-green-600\">{overview.technicians?.available || 0}</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-600\">Busy</span>\n              <span className=\"font-medium text-yellow-600\">{overview.technicians?.busy || 0}</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-600\">Offline</span>\n              <span className=\"font-medium text-gray-600\">{overview.technicians?.offline || 0}</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-xl p-6 border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">SLA Performance</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{overview.sla?.complianceRate || 0}%</p>\n            </div>\n            <CheckCircle className=\"h-8 w-8 text-purple-500\" />\n          </div>\n          <div className=\"mt-4 space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-600\">Within SLA</span>\n              <span className=\"font-medium text-green-600\">{overview.sla?.withinSLA || 0}</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-600\">Total Completed</span>\n              <span className=\"font-medium\">{overview.sla?.totalCompleted || 0}</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-xl p-6 border border-gray-200\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex-1\">\n              <p className=\"text-sm font-medium text-gray-600 mb-1\">Monthly Revenue</p>\n              <p className=\"text-2xl font-bold text-gray-900\">\n                {new Intl.NumberFormat('id-ID', {\n                  style: 'currency',\n                  currency: 'IDR',\n                  minimumFractionDigits: 0,\n                  maximumFractionDigits: 0\n                }).format(overview.revenue?.estimatedMonthly || 0)}\n              </p>\n            </div>\n            <DollarSign className=\"h-8 w-8 text-indigo-500\" />\n          </div>\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-600\">Active Customers</span>\n              <span className=\"font-medium\">{overview.revenue?.activeCustomers || 0}</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-600\">Avg per Customer</span>\n              <span className=\"font-medium\">\n                {overview.revenue?.activeCustomers > 0 ? \n                  new Intl.NumberFormat('id-ID', {\n                    style: 'currency',\n                    currency: 'IDR',\n                    minimumFractionDigits: 0,\n                    maximumFractionDigits: 0\n                  }).format((overview.revenue?.estimatedMonthly || 0) / overview.revenue.activeCustomers)\n                  : 'Rp 0'\n                }\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnalyticsDashboard;\n"],"names":["ChartCard","title","data","type","height","colors","className","showDateRange","dateRange","onDateRangeChange","onApplyFilter","isLoading","tempDateRange","setTempDateRange","useState","showPresets","setShowPresets","React","handlePresetClick","days","end","start","newRange","handleApply","renderChart","ResponsiveContainer","jsxs","LineChart","jsx","CartesianGrid","XAxis","value","date","YAxis","Tooltip","Legend","Line","AreaChart","Area","BarChart","Bar","formattedData","item","__spreadProps","__spreadValues","word","PieChart","Pie","percentage","entry","index","Cell","name","Calendar","e","Fragment","RefreshCw","RecentActivities","activities","getStatusIcon","status","CheckCircle","Clock","XCircle","AlertCircle","getPriorityColor","priority","formatTimeAgo","timestamp","now","time","diffInMinutes","diffInHours","activity","User","AnalyticsDashboard","timeframe","setTimeframe","queryClient","useQueryClient","trendsDateRange","setTrendsDateRange","distributionDateRange","setDistributionDateRange","trendsFilterLoading","setTrendsFilterLoading","distributionFilterLoading","setDistributionFilterLoading","handleTrendsFilter","__async","refetchTrends","handleDistributionFilter","refetchDistribution","overviewData","overviewLoading","overviewError","useQuery","analyticsService","trendsData","trendsLoading","distributionData","distributionLoading","performanceData","performanceLoading","activitiesData","activitiesLoading","useEffect","handleDashboardUpdate","handleNewTicket","handleTicketStatusUpdated","handleTicketAssigned","socketService","LoadingSpinner","AlertTriangle","overview","Activity","KPICard","_a","Ticket","_b","_c","_d","Star","_e","Users","_f","DollarSign","_g","TrendingUp","_n","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x"],"mappings":"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"}