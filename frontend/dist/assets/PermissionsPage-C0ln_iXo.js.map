{"version":3,"file":"PermissionsPage-C0ln_iXo.js","sources":["../../src/pages/PermissionsPage.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\nimport { Shield, Save, RefreshCw, CheckCircle, XCircle, Lock, AlertTriangle } from 'lucide-react'\nimport permissionService from '../services/permissionService'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport { useAuth } from '../contexts/AuthContext'\nimport toast from 'react-hot-toast'\n\nconst PermissionsPage = () => {\n  const { user } = useAuth()\n  const queryClient = useQueryClient()\n  const [selectedRole, setSelectedRole] = useState('supervisor')\n  const [permissionChanges, setPermissionChanges] = useState({})\n  const [hasChanges, setHasChanges] = useState(false)\n\n  // Check if user is admin\n  const isAdmin = user?.role === 'admin'\n\n  // Fetch permission matrix\n  const { data, isLoading, refetch } = useQuery(\n    'permissionMatrix',\n    permissionService.getPermissionMatrix,\n    {\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Failed to load permissions')\n      }\n    }\n  )\n\n  // Update permissions mutation\n  const updateMutation = useMutation(\n    ({ role, permissions }) => permissionService.updateRolePermissions(role, permissions),\n    {\n      onSuccess: () => {\n        toast.success('Permissions updated successfully!')\n        setPermissionChanges({})\n        setHasChanges(false)\n        queryClient.invalidateQueries('permissionMatrix')\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Failed to update permissions')\n      }\n    }\n  )\n\n  const permissions = data?.data?.permissions || []\n  const matrix = data?.data?.matrix || {}\n\n  // Group permissions by resource\n  const groupedPermissions = permissions.reduce((acc, perm) => {\n    if (!acc[perm.resource]) {\n      acc[perm.resource] = []\n    }\n    acc[perm.resource].push(perm)\n    return acc\n  }, {})\n\n  // Get current permission status for a role\n  const isPermissionGranted = (permissionName) => {\n    // Check if there are unsaved changes\n    if (permissionChanges[permissionName] !== undefined) {\n      return permissionChanges[permissionName]\n    }\n    \n    // Use matrix data\n    return matrix[selectedRole]?.[permissionName] || false\n  }\n\n  // Toggle permission\n  const togglePermission = (permissionName) => {\n    const currentValue = isPermissionGranted(permissionName)\n    setPermissionChanges({\n      ...permissionChanges,\n      [permissionName]: !currentValue\n    })\n    setHasChanges(true)\n  }\n\n  // Save changes\n  const handleSave = () => {\n    const permissionsToUpdate = Object.entries(permissionChanges).map(([name, granted]) => {\n      const perm = permissions.find(p => p.name === name)\n      return {\n        permissionId: perm.id,\n        granted\n      }\n    })\n\n    updateMutation.mutate({\n      role: selectedRole,\n      permissions: permissionsToUpdate\n    })\n  }\n\n  // Reset changes\n  const handleReset = () => {\n    setPermissionChanges({})\n    setHasChanges(false)\n  }\n\n  // Access denied for non-admin\n  if (!isAdmin) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-96\">\n        <AlertTriangle className=\"h-24 w-24 text-red-500 mb-4\" />\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Access Denied</h2>\n        <p className=\"text-gray-600 mb-4\">You don't have permission to manage permissions.</p>\n        <p className=\"text-sm text-gray-500\">Required role: Admin</p>\n      </div>\n    )\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center min-h-96\">\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  const roles = [\n    { value: 'supervisor', label: 'Supervisor', color: 'blue' },\n    { value: 'technician', label: 'Technician', color: 'green' },\n    { value: 'customer_service', label: 'Customer Service', color: 'yellow' }\n  ]\n\n  const resourceLabels = {\n    'dashboard': 'Dashboard',\n    'analytics': 'Analytics',\n    'tickets': 'Tickets',\n    'customers': 'Customers',\n    'registrations': 'Registrations',\n    'technicians': 'Technicians',\n    'inventory': 'Inventory',\n    'users': 'Users',\n    'permissions': 'Permissions',\n    'reports': 'Reports'\n  }\n\n  const actionLabels = {\n    'view': 'View',\n    'create': 'Create',\n    'edit': 'Edit',\n    'delete': 'Delete',\n    'assign': 'Assign',\n    'close': 'Close',\n    'verify': 'Verify',\n    'approve': 'Approve',\n    'reject': 'Reject',\n    'schedule': 'Schedule',\n    'transactions': 'Transactions',\n    'reset_password': 'Reset Password',\n    'manage': 'Manage',\n    'export': 'Export'\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900 flex items-center\">\n            <Shield className=\"h-8 w-8 mr-3 text-purple-600\" />\n            Permission Management\n          </h1>\n          <p className=\"text-gray-600 mt-1\">Configure role-based access control for the system</p>\n        </div>\n        <button\n          onClick={() => refetch()}\n          disabled={isLoading}\n          className=\"btn-secondary\"\n        >\n          <RefreshCw className={`h-4 w-4 mr-2 ${isLoading ? 'animate-spin' : ''}`} />\n          Refresh\n        </button>\n      </div>\n\n      {/* Info Card */}\n      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n        <div className=\"flex items-start\">\n          <Lock className=\"h-5 w-5 text-blue-600 mt-0.5 mr-2 flex-shrink-0\" />\n          <div className=\"text-sm text-blue-800\">\n            <p className=\"font-semibold mb-1\">About Permissions:</p>\n            <ul className=\"list-disc list-inside space-y-1\">\n              <li><strong>Admin</strong> role always has full access to all features</li>\n              <li>Customize permissions for Supervisor, Technician, and Customer Service roles</li>\n              <li>Changes take effect immediately after saving</li>\n              <li>Be careful when revoking permissions - it may affect user workflows</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      {/* Role Selector */}\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Select Role to Manage</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          {roles.map(role => (\n            <button\n              key={role.value}\n              onClick={() => {\n                if (hasChanges) {\n                  if (window.confirm('You have unsaved changes. Are you sure you want to switch roles?')) {\n                    setSelectedRole(role.value)\n                    setPermissionChanges({})\n                    setHasChanges(false)\n                  }\n                } else {\n                  setSelectedRole(role.value)\n                }\n              }}\n              className={`p-4 rounded-lg border-2 transition-all ${\n                selectedRole === role.value\n                  ? `border-${role.color}-500 bg-${role.color}-50`\n                  : 'border-gray-200 hover:border-gray-300 bg-white'\n              }`}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"text-left\">\n                  <p className=\"font-semibold text-gray-900\">{role.label}</p>\n                  <p className=\"text-sm text-gray-500\">\n                    {Object.values(matrix[role.value] || {}).filter(Boolean).length} permissions\n                  </p>\n                </div>\n                {selectedRole === role.value && (\n                  <CheckCircle className={`h-6 w-6 text-${role.color}-600`} />\n                )}\n              </div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Permissions Table */}\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n        <div className=\"p-6 border-b border-gray-200 flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">\n            Permissions for {roles.find(r => r.value === selectedRole)?.label}\n          </h3>\n          {hasChanges && (\n            <div className=\"flex items-center space-x-3\">\n              <span className=\"text-sm text-orange-600 font-medium flex items-center\">\n                <AlertTriangle className=\"h-4 w-4 mr-1\" />\n                Unsaved changes\n              </span>\n              <button\n                onClick={handleReset}\n                className=\"btn-secondary text-sm\"\n              >\n                Reset\n              </button>\n              <button\n                onClick={handleSave}\n                disabled={updateMutation.isLoading}\n                className=\"btn-primary text-sm\"\n              >\n                {updateMutation.isLoading ? (\n                  <span className=\"flex items-center\">\n                    <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Saving...\n                  </span>\n                ) : (\n                  <span className=\"flex items-center\">\n                    <Save className=\"h-4 w-4 mr-2\" />\n                    Save Changes\n                  </span>\n                )}\n              </button>\n            </div>\n          )}\n        </div>\n\n        <div className=\"p-6 space-y-6\">\n          {Object.entries(groupedPermissions).map(([resource, perms]) => (\n            <div key={resource} className=\"bg-gray-50 rounded-lg p-5 border border-gray-200\">\n              <h4 className=\"text-md font-semibold text-gray-900 mb-4 flex items-center\">\n                <Shield className=\"h-5 w-5 mr-2 text-blue-600\" />\n                {resourceLabels[resource] || resource}\n              </h4>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n                {perms.map(perm => {\n                  const granted = isPermissionGranted(perm.name)\n                  const hasChange = permissionChanges[perm.name] !== undefined\n                  \n                  return (\n                    <div\n                      key={perm.id}\n                      className={`flex items-center justify-between p-3 bg-white rounded-lg border-2 transition-all ${\n                        hasChange \n                          ? 'border-orange-300 bg-orange-50' \n                          : granted \n                            ? 'border-green-200 hover:border-green-300' \n                            : 'border-gray-200 hover:border-gray-300'\n                      }`}\n                    >\n                      <div className=\"flex items-center flex-1\">\n                        <label className=\"flex items-center cursor-pointer flex-1\">\n                          <input\n                            type=\"checkbox\"\n                            checked={granted}\n                            onChange={() => togglePermission(perm.name)}\n                            className=\"w-5 h-5 text-blue-600 rounded focus:ring-2 focus:ring-blue-500 cursor-pointer\"\n                          />\n                          <div className=\"ml-3\">\n                            <p className=\"text-sm font-medium text-gray-900\">\n                              {actionLabels[perm.action] || perm.action}\n                            </p>\n                            <p className=\"text-xs text-gray-500\">{perm.description}</p>\n                          </div>\n                        </label>\n                      </div>\n                      {granted ? (\n                        <CheckCircle className=\"h-5 w-5 text-green-600 flex-shrink-0 ml-2\" />\n                      ) : (\n                        <XCircle className=\"h-5 w-5 text-gray-300 flex-shrink-0 ml-2\" />\n                      )}\n                    </div>\n                  )\n                })}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Summary Card */}\n      <div className=\"bg-gradient-to-r from-purple-50 to-blue-50 rounded-lg p-6 border border-purple-200\">\n        <div className=\"flex items-start\">\n          <Shield className=\"h-6 w-6 text-purple-600 mt-1 mr-3 flex-shrink-0\" />\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Permission Summary</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              {roles.map(role => {\n                const rolePerms = matrix[role.value] || {}\n                const grantedCount = Object.values(rolePerms).filter(Boolean).length\n                const totalCount = permissions.length\n                \n                return (\n                  <div key={role.value} className=\"bg-white rounded-lg p-4 border border-gray-200\">\n                    <p className=\"text-xs text-gray-500 font-medium\">{role.label}</p>\n                    <p className=\"text-2xl font-bold text-gray-900 mt-1\">\n                      {grantedCount}<span className=\"text-sm text-gray-500\">/{totalCount}</span>\n                    </p>\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      {Math.round((grantedCount / totalCount) * 100)}% access\n                    </p>\n                  </div>\n                )\n              })}\n              <div className=\"bg-purple-100 rounded-lg p-4 border border-purple-300\">\n                <p className=\"text-xs text-purple-700 font-medium\">Admin</p>\n                <p className=\"text-2xl font-bold text-purple-900 mt-1\">\n                  {permissions.length}<span className=\"text-sm text-purple-600\">/{permissions.length}</span>\n                </p>\n                <p className=\"text-xs text-purple-700 mt-1\">100% access (always)</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Admin Notice */}\n      <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n        <div className=\"flex items-start\">\n          <AlertTriangle className=\"h-5 w-5 text-yellow-600 mt-0.5 mr-2 flex-shrink-0\" />\n          <div className=\"text-sm text-yellow-800\">\n            <p className=\"font-semibold mb-1\">Important Notes:</p>\n            <ul className=\"list-disc list-inside space-y-1\">\n              <li>Admin role cannot be modified and always has full access</li>\n              <li>Removing critical permissions may prevent users from doing their jobs</li>\n              <li>Test permission changes with a test account before applying to all users</li>\n              <li>Permission changes take effect immediately - active users may need to refresh</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PermissionsPage\n\n"],"names":["PermissionsPage","user","useAuth","queryClient","useQueryClient","selectedRole","setSelectedRole","useState","permissionChanges","setPermissionChanges","hasChanges","setHasChanges","isAdmin","data","isLoading","refetch","useQuery","permissionService","error","toast","_b","_a","updateMutation","useMutation","role","permissions","matrix","groupedPermissions","acc","perm","isPermissionGranted","permissionName","togglePermission","currentValue","__spreadProps","__spreadValues","handleSave","permissionsToUpdate","name","granted","p","handleReset","jsxs","jsx","AlertTriangle","LoadingSpinner","roles","resourceLabels","actionLabels","Shield","RefreshCw","Lock","CheckCircle","_c","r","Save","resource","perms","hasChange","XCircle","rolePerms","grantedCount","totalCount"],"mappings":"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"}