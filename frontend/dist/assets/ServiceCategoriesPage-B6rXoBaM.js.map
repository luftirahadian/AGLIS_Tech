{"version":3,"file":"ServiceCategoriesPage-B6rXoBaM.js","sources":["../../src/components/masterdata/ServiceCategoryModal.jsx","../../src/pages/masterdata/ServiceCategoriesPage.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useMutation, useQuery } from 'react-query'\nimport { X } from 'lucide-react'\nimport serviceCategoryService from '../../services/serviceCategoryService'\nimport serviceTypeService from '../../services/serviceTypeService'\nimport toast from 'react-hot-toast'\n\nconst ServiceCategoryModal = ({ category, onClose, onSuccess }) => {\n  const isEdit = !!category\n  \n  const { register, handleSubmit, formState: { errors, isSubmitting }, reset } = useForm({\n    defaultValues: category || {\n      service_type_code: '',\n      category_code: '',\n      category_name: '',\n      description: '',\n      estimated_duration: 120,\n      sla_multiplier: 1.0,\n      requires_checklist: false,\n      is_active: true,\n      display_order: 0\n    }\n  })\n\n  // Fetch service types for dropdown\n  const { data: serviceTypes } = useQuery(\n    'service-types',\n    () => serviceTypeService.getAll(true),\n    { refetchOnWindowFocus: false }\n  )\n\n  useEffect(() => {\n    if (category) {\n      reset(category)\n    }\n  }, [category, reset])\n\n  const mutation = useMutation(\n    (data) => isEdit ? serviceCategoryService.update(category.id, data) : serviceCategoryService.create(data),\n    {\n      onSuccess: () => {\n        toast.success(isEdit ? 'Category berhasil diupdate' : 'Category berhasil ditambahkan')\n        onSuccess()\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Terjadi kesalahan')\n      }\n    }\n  )\n\n  const onSubmit = (data) => {\n    mutation.mutate(data)\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center p-6 border-b border-gray-200\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">\n            {isEdit ? 'Edit Service Category' : 'Tambah Service Category Baru'}\n          </h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <X className=\"h-6 w-6\" />\n          </button>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit(onSubmit)} className=\"p-6\">\n          <div className=\"space-y-6\">\n            {/* Service Type Selection */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Service Type <span className=\"text-red-500\">*</span>\n              </label>\n              <select\n                className=\"input-field\"\n                {...register('service_type_code', { required: 'Service type wajib dipilih' })}\n                disabled={isEdit}\n              >\n                <option value=\"\">Pilih Service Type...</option>\n                {serviceTypes?.map(type => (\n                  <option key={type.type_code} value={type.type_code}>\n                    {type.type_name}\n                  </option>\n                ))}\n              </select>\n              {errors.service_type_code && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.service_type_code.message}</p>\n              )}\n            </div>\n\n            {/* Basic Information */}\n            <div>\n              <h3 className=\"text-sm font-medium text-gray-900 mb-4\">Informasi Dasar</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Category Code <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"input-field\"\n                    placeholder=\"e.g., fiber_installation\"\n                    {...register('category_code', { \n                      required: 'Category code wajib diisi',\n                      pattern: {\n                        value: /^[a-z_]+$/,\n                        message: 'Gunakan lowercase dan underscore'\n                      }\n                    })}\n                    disabled={isEdit}\n                  />\n                  {errors.category_code && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.category_code.message}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Category Name <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"input-field\"\n                    placeholder=\"e.g., Fiber Installation\"\n                    {...register('category_name', { \n                      required: 'Category name wajib diisi',\n                      minLength: { value: 3, message: 'Minimal 3 karakter' }\n                    })}\n                  />\n                  {errors.category_name && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.category_name.message}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Description */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Description\n              </label>\n              <textarea\n                className=\"input-field\"\n                rows=\"3\"\n                placeholder=\"Deskripsi category\"\n                {...register('description')}\n              />\n            </div>\n\n            {/* Configuration */}\n            <div>\n              <h3 className=\"text-sm font-medium text-gray-900 mb-4\">Konfigurasi</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Estimated Duration (minutes) <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"number\"\n                    className=\"input-field\"\n                    min=\"1\"\n                    {...register('estimated_duration', { \n                      required: 'Duration wajib diisi',\n                      min: { value: 1, message: 'Minimal 1 menit' },\n                      valueAsNumber: true\n                    })}\n                  />\n                  {errors.estimated_duration && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.estimated_duration.message}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    SLA Multiplier\n                  </label>\n                  <input\n                    type=\"number\"\n                    className=\"input-field\"\n                    step=\"0.1\"\n                    min=\"0.1\"\n                    max=\"10\"\n                    {...register('sla_multiplier', { \n                      min: { value: 0.1, message: 'Minimal 0.1' },\n                      max: { value: 10, message: 'Maksimal 10' },\n                      valueAsNumber: true\n                    })}\n                  />\n                  <p className=\"mt-1 text-xs text-gray-500\">Default: 1.0</p>\n                  {errors.sla_multiplier && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.sla_multiplier.message}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Display Order\n                  </label>\n                  <input\n                    type=\"number\"\n                    className=\"input-field\"\n                    min=\"0\"\n                    {...register('display_order', { \n                      min: { value: 0, message: 'Minimal 0' },\n                      valueAsNumber: true\n                    })}\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Status & Options */}\n            <div className=\"space-y-3\">\n              <label className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  {...register('is_active')}\n                />\n                <span className=\"text-sm font-medium text-gray-700\">Active</span>\n              </label>\n              <p className=\"text-xs text-gray-500 ml-6\">Category aktif dan dapat digunakan</p>\n\n              <label className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  {...register('requires_checklist')}\n                />\n                <span className=\"text-sm font-medium text-gray-700\">Requires Checklist</span>\n              </label>\n              <p className=\"text-xs text-gray-500 ml-6\">Category memerlukan checklist khusus</p>\n            </div>\n          </div>\n\n          {/* Actions */}\n          <div className=\"flex justify-end space-x-3 mt-6 pt-6 border-t border-gray-200\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"btn-secondary\"\n              disabled={isSubmitting}\n            >\n              Batal\n            </button>\n            <button\n              type=\"submit\"\n              className=\"btn-primary\"\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? 'Menyimpan...' : (isEdit ? 'Update Category' : 'Tambah Category')}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default ServiceCategoryModal\n\n","import React, { useState } from 'react'\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\nimport { Tag, Plus, Search, Trash2, Edit, ArrowUpDown, ArrowUp, ArrowDown, ChevronLeft, ChevronRight } from 'lucide-react'\nimport serviceCategoryService from '../../services/serviceCategoryService'\nimport serviceTypeService from '../../services/serviceTypeService'\nimport LoadingSpinner from '../../components/LoadingSpinner'\nimport ServiceCategoryModal from '../../components/masterdata/ServiceCategoryModal'\nimport KPICard from '../../components/dashboard/KPICard'\nimport toast from 'react-hot-toast'\n\nconst ServiceCategoriesPage = () => {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [filterServiceType, setFilterServiceType] = useState('all')\n  const [filterStatus, setFilterStatus] = useState('all')\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [selectedCategory, setSelectedCategory] = useState(null)\n  const [sortBy, setSortBy] = useState('display_order')\n  const [sortOrder, setSortOrder] = useState('asc')\n  const [serviceTypePages, setServiceTypePages] = useState({}) // Track page for each service type\n  const [limit, setLimit] = useState(10) // Items per page per service type\n  const queryClient = useQueryClient()\n\n  // Fetch service types for filter\n  const { data: serviceTypesResponse } = useQuery(\n    'service-types-filter',\n    () => serviceTypeService.getAll({ page: 1, limit: 100 }),\n    { refetchOnWindowFocus: false }\n  )\n\n  const serviceTypes = serviceTypesResponse?.data || []\n\n  // Fetch ALL service categories (no pagination, high limit)\n  const { data: categoriesResponse, isLoading } = useQuery(\n    ['service-categories-all', filterServiceType, filterStatus, searchTerm, sortBy, sortOrder],\n    () => serviceCategoryService.getAll({\n      service_type_code: filterServiceType !== 'all' ? filterServiceType : undefined,\n      active_only: filterStatus === 'active' ? 'true' : filterStatus === 'inactive' ? 'false' : undefined,\n      search: searchTerm || undefined,\n      page: 1,\n      limit: 1000, // Get all data\n      sort_by: sortBy,\n      sort_order: sortOrder\n    }),\n    {\n      refetchOnWindowFocus: false\n    }\n  )\n\n  const allCategories = categoriesResponse?.data || []\n\n  // Statistics\n  const totalCategories = allCategories.length\n  const activeCategories = allCategories.filter(c => c.is_active).length\n  const inactiveCategories = allCategories.filter(c => !c.is_active).length\n  const totalServiceTypes = [...new Set(allCategories.map(c => c.service_type_code))].length\n\n  // Group by service type for display\n  const groupedCategories = allCategories.reduce((acc, cat) => {\n    if (!acc[cat.service_type_code]) {\n      acc[cat.service_type_code] = {\n        type_name: cat.service_type_name,\n        categories: []\n      }\n    }\n    acc[cat.service_type_code].categories.push(cat)\n    return acc\n  }, {})\n\n  // Delete mutation\n  const deleteMutation = useMutation(\n    (id) => serviceCategoryService.delete(id),\n    {\n      onSuccess: () => {\n        toast.success('Category berhasil dihapus')\n        queryClient.invalidateQueries('service-categories')\n        queryClient.invalidateQueries('service-categories-all')\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Gagal menghapus category')\n      }\n    }\n  )\n\n  const handleCreate = () => {\n    setSelectedCategory(null)\n    setIsModalOpen(true)\n  }\n\n  const handleEdit = (category) => {\n    setSelectedCategory(category)\n    setIsModalOpen(true)\n  }\n\n  const handleDelete = (id, name) => {\n    if (window.confirm(`Apakah Anda yakin ingin menghapus category \"${name}\"?`)) {\n      deleteMutation.mutate(id)\n    }\n  }\n\n  const handleModalClose = () => {\n    setIsModalOpen(false)\n    setSelectedCategory(null)\n  }\n\n  const handleSuccess = () => {\n    queryClient.invalidateQueries('service-categories')\n    queryClient.invalidateQueries('service-categories-all')\n    handleModalClose()\n  }\n\n  const handleSort = (column) => {\n    if (sortBy === column) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')\n    } else {\n      setSortBy(column)\n      setSortOrder('asc')\n    }\n  }\n\n  const getSortIcon = (column) => {\n    if (sortBy !== column) {\n      return <ArrowUpDown className=\"h-4 w-4 text-gray-400\" />\n    }\n    return sortOrder === 'asc' ? \n      <ArrowUp className=\"h-4 w-4\" /> : \n      <ArrowDown className=\"h-4 w-4\" />\n  }\n\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value)\n  }\n\n  const handleFilterChange = (filterType, value) => {\n    if (filterType === 'serviceType') {\n      setFilterServiceType(value)\n    } else if (filterType === 'status') {\n      setFilterStatus(value)\n    }\n  }\n\n  const getServiceTypePage = (typeCode) => {\n    return serviceTypePages[typeCode] || 1\n  }\n\n  const setServiceTypePage = (typeCode, page) => {\n    setServiceTypePages(prev => ({\n      ...prev,\n      [typeCode]: page\n    }))\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center min-h-96\">\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Service Categories Management</h1>\n          <p className=\"text-gray-600\">Kelola kategori layanan berdasarkan service type</p>\n        </div>\n        <button \n          onClick={handleCreate}\n          className=\"btn-primary\"\n        >\n          <Plus className=\"h-4 w-4 mr-2\" />\n          Tambah Category\n        </button>\n      </div>\n\n      {/* Statistics Cards - Responsive */}\n      <div className=\"grid grid-cols-2 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <KPICard\n          icon={Tag}\n          title=\"Total Categories\"\n          value={totalCategories}\n          color=\"blue\"\n        />\n        <KPICard\n          icon={Tag}\n          title=\"Active\"\n          value={activeCategories}\n          color=\"green\"\n        />\n        <KPICard\n          icon={Tag}\n          title=\"Inactive\"\n          value={inactiveCategories}\n          color=\"red\"\n        />\n        <KPICard\n          icon={Tag}\n          title=\"Service Types\"\n          value={totalServiceTypes}\n          color=\"purple\"\n        />\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {/* Search */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Search\n            </label>\n            <div className=\"relative\">\n              <Search className=\"h-4 w-4 absolute left-3 top-3 text-gray-400\" />\n              <input\n                type=\"text\"\n                className=\"form-input pl-10\"\n                placeholder=\"Cari category...\"\n                value={searchTerm}\n                onChange={handleSearch}\n              />\n            </div>\n          </div>\n\n          {/* Service Type Filter */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Service Type\n            </label>\n            <select\n              className=\"form-input\"\n              value={filterServiceType}\n              onChange={(e) => handleFilterChange('serviceType', e.target.value)}\n            >\n              <option value=\"all\">Semua Service Type</option>\n              {serviceTypes.map(type => (\n                <option key={type.type_code} value={type.type_code}>\n                  {type.type_name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* Status Filter */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Status\n            </label>\n            <select\n              className=\"form-input\"\n              value={filterStatus}\n              onChange={(e) => handleFilterChange('status', e.target.value)}\n            >\n              <option value=\"all\">Semua Status</option>\n              <option value=\"active\">Active</option>\n              <option value=\"inactive\">Inactive</option>\n            </select>\n          </div>\n\n          {/* Rows Per Table */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Rows Per Table\n            </label>\n            <select\n              className=\"form-input\"\n              value={limit}\n              onChange={(e) => {\n                setLimit(parseInt(e.target.value))\n                setServiceTypePages({}) // Reset all pages\n              }}\n            >\n              <option value=\"5\">5 rows</option>\n              <option value=\"10\">10 rows</option>\n              <option value=\"25\">25 rows</option>\n              <option value=\"50\">50 rows</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Service Categories List - Grouped by Service Type */}\n      {Object.keys(groupedCategories).length === 0 ? (\n        <div className=\"bg-white shadow rounded-lg p-12 text-center\">\n          <Tag className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Tidak ada category</h3>\n          <p className=\"text-gray-500 mb-4\">Mulai dengan menambahkan category pertama</p>\n          <button onClick={handleCreate} className=\"btn-primary\">\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Tambah Category\n          </button>\n        </div>\n      ) : (\n        <div className=\"space-y-6\">\n          {Object.entries(groupedCategories).map(([typeCode, data]) => {\n            const currentPage = getServiceTypePage(typeCode)\n            const totalInType = data.categories.length\n            const totalPages = Math.ceil(totalInType / limit)\n            const startIdx = (currentPage - 1) * limit\n            const endIdx = startIdx + limit\n            const displayedCategories = data.categories.slice(startIdx, endIdx)\n\n            return (\n              <div key={typeCode} className=\"card\">\n                {/* Service Type Header */}\n                <div className=\"card-header\">\n                  <h3 className=\"text-lg font-semibold text-gray-900\">\n                    {data.type_name}\n                    <span className=\"text-sm font-normal text-gray-500 ml-2\">\n                      ({totalInType} categories)\n                    </span>\n                  </h3>\n                </div>\n\n                {/* Categories Table */}\n                <div className=\"card-body p-0\">\n                  <div className=\"overflow-x-auto w-full\">\n                    <table className=\"table w-full\" style={{ tableLayout: 'fixed', minWidth: '900px' }}>\n                      <thead className=\"table-header\">\n                        <tr>\n                          <th \n                            className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\" \n                            onClick={() => handleSort('display_order')}\n                            style={{ width: '50px' }}\n                          >\n                            <div className=\"flex items-center justify-between\">\n                              <span>#</span>\n                              {getSortIcon('display_order')}\n                            </div>\n                          </th>\n                          <th \n                            className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\" \n                            onClick={() => handleSort('category_code')}\n                            style={{ width: '150px' }}\n                          >\n                            <div className=\"flex items-center justify-between\">\n                              <span>Code</span>\n                              {getSortIcon('category_code')}\n                            </div>\n                          </th>\n                          <th \n                            className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\" \n                            onClick={() => handleSort('category_name')}\n                            style={{ width: '170px' }}\n                          >\n                            <div className=\"flex items-center justify-between\">\n                              <span>Category Name</span>\n                              {getSortIcon('category_name')}\n                            </div>\n                          </th>\n                          <th className=\"table-header-cell\" style={{ width: '200px' }}>Description</th>\n                          <th \n                            className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\" \n                            onClick={() => handleSort('estimated_duration')}\n                            style={{ width: '100px' }}\n                          >\n                            <div className=\"flex items-center justify-between\">\n                              <span>Duration</span>\n                              {getSortIcon('estimated_duration')}\n                            </div>\n                          </th>\n                          <th className=\"table-header-cell\" style={{ width: '70px' }}>SLA</th>\n                          <th \n                            className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\" \n                            onClick={() => handleSort('is_active')}\n                            style={{ width: '90px' }}\n                          >\n                            <div className=\"flex items-center justify-between\">\n                              <span>Status</span>\n                              {getSortIcon('is_active')}\n                            </div>\n                          </th>\n                          <th className=\"table-header-cell text-center\" style={{ width: '100px' }}>Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"table-body\">\n                        {displayedCategories.map((category) => (\n                          <tr key={category.id}>\n                            <td className=\"table-cell\">\n                              <div className=\"text-sm font-medium text-gray-900\">{category.display_order}</div>\n                            </td>\n                            <td className=\"table-cell\">\n                              <div className=\"text-sm font-mono text-gray-900\">{category.category_code}</div>\n                            </td>\n                            <td className=\"table-cell\">\n                              <div className=\"text-sm font-medium text-gray-900\">{category.category_name}</div>\n                            </td>\n                            <td className=\"table-cell\">\n                              <div className=\"text-sm text-gray-900 truncate\" title={category.description} style={{ maxWidth: '200px' }}>\n                                {category.description || '-'}\n                              </div>\n                            </td>\n                            <td className=\"table-cell whitespace-nowrap\">\n                              <div className=\"text-sm text-gray-900\">{category.estimated_duration} min</div>\n                            </td>\n                            <td className=\"table-cell whitespace-nowrap\">\n                              <div className=\"text-sm text-gray-900\">×{category.sla_multiplier}</div>\n                            </td>\n                            <td className=\"table-cell whitespace-nowrap\">\n                              <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                                category.is_active ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                              }`}>\n                                {category.is_active ? 'Active' : 'Inactive'}\n                              </span>\n                            </td>\n                            <td className=\"table-cell text-center\">\n                              <div className=\"flex justify-center space-x-2\">\n                                <button\n                                  onClick={() => handleEdit(category)}\n                                  className=\"inline-flex items-center justify-center w-8 h-8 text-blue-600 hover:text-blue-800 hover:bg-blue-50 rounded-md transition-colors\"\n                                  title=\"Edit Category\"\n                                >\n                                  <Edit className=\"h-4 w-4\" />\n                                </button>\n                                <button\n                                  onClick={() => handleDelete(category.id, category.category_name)}\n                                  className=\"inline-flex items-center justify-center w-8 h-8 text-red-600 hover:text-red-800 hover:bg-red-50 rounded-md transition-colors\"\n                                  title=\"Delete Category\"\n                                >\n                                  <Trash2 className=\"h-4 w-4\" />\n                                </button>\n                              </div>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n\n                  {/* Pagination per Service Type */}\n                  {totalPages > 1 && (\n                    <div className=\"bg-white px-4 py-3 border-t border-gray-200 sm:px-6\">\n                      <div className=\"flex-1 flex justify-between sm:hidden\">\n                        <button\n                          onClick={() => setServiceTypePage(typeCode, Math.max(1, currentPage - 1))}\n                          disabled={currentPage === 1}\n                          className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                        >\n                          Previous\n                        </button>\n                        <button\n                          onClick={() => setServiceTypePage(typeCode, Math.min(totalPages, currentPage + 1))}\n                          disabled={currentPage === totalPages}\n                          className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                        >\n                          Next\n                        </button>\n                      </div>\n                      <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n                        <div>\n                          <p className=\"text-sm text-gray-700\">\n                            Showing <span className=\"font-medium\">{startIdx + 1}</span> to{' '}\n                            <span className=\"font-medium\">{Math.min(endIdx, totalInType)}</span> of{' '}\n                            <span className=\"font-medium\">{totalInType}</span> results\n                          </p>\n                        </div>\n                        <div>\n                          <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\n                            <button\n                              onClick={() => setServiceTypePage(typeCode, Math.max(1, currentPage - 1))}\n                              disabled={currentPage === 1}\n                              className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                            >\n                              <ChevronLeft className=\"h-5 w-5\" />\n                            </button>\n                            {Array.from({ length: totalPages }, (_, i) => i + 1).map((pageNum) => (\n                              <button\n                                key={pageNum}\n                                onClick={() => setServiceTypePage(typeCode, pageNum)}\n                                className={`relative inline-flex items-center px-4 py-2 border text-sm font-medium ${\n                                  currentPage === pageNum\n                                    ? 'z-10 bg-blue-50 border-blue-500 text-blue-600'\n                                    : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50'\n                                }`}\n                              >\n                                {pageNum}\n                              </button>\n                            ))}\n                            <button\n                              onClick={() => setServiceTypePage(typeCode, Math.min(totalPages, currentPage + 1))}\n                              disabled={currentPage === totalPages}\n                              className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                            >\n                              <ChevronRight className=\"h-5 w-5\" />\n                            </button>\n                          </nav>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      )}\n\n      {/* Service Category Modal */}\n      {isModalOpen && (\n        <ServiceCategoryModal\n          category={selectedCategory}\n          onClose={handleModalClose}\n          onSuccess={handleSuccess}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default ServiceCategoriesPage\n"],"names":["ServiceCategoryModal","category","onClose","onSuccess","isEdit","register","handleSubmit","errors","isSubmitting","reset","useForm","serviceTypes","useQuery","serviceTypeService","useEffect","mutation","useMutation","data","serviceCategoryService","toast","error","_b","_a","onSubmit","jsxs","jsx","X","__spreadProps","__spreadValues","type","ServiceCategoriesPage","searchTerm","setSearchTerm","useState","filterServiceType","setFilterServiceType","filterStatus","setFilterStatus","isModalOpen","setIsModalOpen","selectedCategory","setSelectedCategory","sortBy","setSortBy","sortOrder","setSortOrder","serviceTypePages","setServiceTypePages","limit","setLimit","queryClient","useQueryClient","serviceTypesResponse","categoriesResponse","isLoading","allCategories","totalCategories","activeCategories","c","inactiveCategories","totalServiceTypes","groupedCategories","acc","cat","deleteMutation","id","handleCreate","handleEdit","handleDelete","name","handleModalClose","handleSuccess","handleSort","column","getSortIcon","ArrowUpDown","ArrowUp","ArrowDown","handleSearch","e","handleFilterChange","filterType","value","getServiceTypePage","typeCode","setServiceTypePage","page","prev","LoadingSpinner","Plus","KPICard","Tag","Search","currentPage","totalInType","totalPages","startIdx","endIdx","displayedCategories","Edit","Trash2","ChevronLeft","_","i","pageNum","ChevronRight"],"mappings":"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"}