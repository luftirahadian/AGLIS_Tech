{"version":3,"file":"PriceListPage-2u8XvIWq.js","sources":["../../src/services/pricelistService.js","../../src/pages/masterdata/PriceListPage.jsx"],"sourcesContent":["import api from './api';\n\nconst pricelistService = {\n  // Get all price list\n  getAll: async (params = {}) => {\n    try {\n      const queryParams = new URLSearchParams()\n      \n      if (params.service_type) queryParams.append('service_type', params.service_type)\n      if (params.package_type) queryParams.append('package_type', params.package_type)\n      if (params.is_free) queryParams.append('is_free', params.is_free)\n      if (params.is_active) queryParams.append('is_active', params.is_active)\n      if (params.search) queryParams.append('search', params.search)\n      if (params.page) queryParams.append('page', params.page)\n      if (params.limit) queryParams.append('limit', params.limit)\n      if (params.sort_by) queryParams.append('sort_by', params.sort_by)\n      if (params.sort_order) queryParams.append('sort_order', params.sort_order)\n      \n      const queryString = queryParams.toString()\n      const response = await api.get(`/pricelist${queryString ? '?' + queryString : ''}`)\n      return response\n    } catch (error) {\n      console.error('❌ PricelistService error:', error)\n      return { data: [], pagination: {}, summary: [] }\n    }\n  },\n\n  // Get single price list item\n  getById: async (id) => {\n    const response = await api.get(`/pricelist/${id}`);\n    return response;\n  },\n\n  // Get price list by service type\n  getByServiceType: async (serviceType, params = {}) => {\n    const response = await api.get(`/pricelist/by-service/${serviceType}`, { params });\n    return response;\n  },\n\n  // Create new price list item\n  create: async (data) => {\n    const response = await api.post('/pricelist', data);\n    return response;\n  },\n\n  // Update price list item\n  update: async (id, data) => {\n    const response = await api.put(`/pricelist/${id}`, data);\n    return response;\n  },\n\n  // Delete price list item (soft delete)\n  delete: async (id) => {\n    const response = await api.delete(`/pricelist/${id}`);\n    return response;\n  },\n\n  // Get pricing summary\n  getSummary: async () => {\n    const response = await api.get('/pricelist/reports/summary');\n    return response;\n  }\n};\n\nexport default pricelistService;\n\n","import React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { DollarSign, Search, Tag, Gift, CreditCard, ArrowUpDown, ArrowUp, ArrowDown, ChevronLeft, ChevronRight } from 'lucide-react';\nimport pricelistService from '../../services/pricelistService';\nimport LoadingSpinner from '../../components/LoadingSpinner';\nimport KPICard from '../../components/dashboard/KPICard';\n\nconst PriceListPage = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [serviceTypeFilter, setServiceTypeFilter] = useState('all');\n  const [packageFilter, setPackageFilter] = useState('all');\n  const [isFreeFilter, setIsFreeFilter] = useState('all');\n  const [sortBy, setSortBy] = useState('base_price');\n  const [sortOrder, setSortOrder] = useState('desc');\n  const [serviceTypePages, setServiceTypePages] = useState({});\n  const [limit, setLimit] = useState(10);\n\n  const serviceTypes = [\n    { code: 'installation', name: 'Installation' },\n    { code: 'repair', name: 'Repair' },\n    { code: 'maintenance', name: 'Maintenance' },\n    { code: 'upgrade', name: 'Upgrade' },\n    { code: 'downgrade', name: 'Downgrade' },\n    { code: 'wifi_setup', name: 'WiFi Setup' },\n    { code: 'dismantle', name: 'Dismantle' }\n  ];\n\n  // Fetch ALL price list data (no pagination at API level, we paginate per service type in frontend)\n  const { data: pricelistResponse, isLoading } = useQuery(\n    ['pricelist-all', serviceTypeFilter, packageFilter, isFreeFilter, searchTerm, sortBy, sortOrder],\n    () => pricelistService.getAll({\n      is_active: 'true',\n      service_type: serviceTypeFilter !== 'all' ? serviceTypeFilter : undefined,\n      package_type: packageFilter !== 'all' ? packageFilter : undefined,\n      is_free: isFreeFilter !== 'all' ? isFreeFilter : undefined,\n      search: searchTerm || undefined,\n      page: 1,\n      limit: 1000, // Get all data\n      sort_by: sortBy,\n      sort_order: sortOrder\n    }),\n    {\n      refetchOnWindowFocus: false\n    }\n  );\n\n  const allPricelist = pricelistResponse?.data || [];\n  const summary = pricelistResponse?.summary || [];\n\n  // Statistics\n  const totalItems = allPricelist.length;\n  const freeItems = allPricelist.filter(p => p.is_free).length;\n  const paidItems = allPricelist.filter(p => !p.is_free).length;\n  const serviceTypesCount = [...new Set(allPricelist.map(p => p.service_type_code))].length;\n\n  // Group by service type for display\n  const groupedData = allPricelist.reduce((acc, item) => {\n    if (!acc[item.service_type_code]) {\n      acc[item.service_type_code] = {\n        type_name: item.type_name,\n        items: []\n      };\n    }\n    acc[item.service_type_code].items.push(item);\n    return acc;\n  }, {});\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('id-ID', {\n      style: 'currency',\n      currency: 'IDR',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  const handleSort = (column) => {\n    if (sortBy === column) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(column);\n      setSortOrder('asc');\n    }\n  };\n\n  const getSortIcon = (column) => {\n    if (sortBy !== column) {\n      return <ArrowUpDown className=\"h-4 w-4 text-gray-400\" />;\n    }\n    return sortOrder === 'asc' ? \n      <ArrowUp className=\"h-4 w-4\" /> : \n      <ArrowDown className=\"h-4 w-4\" />;\n  };\n\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const handleFilterChange = (filterType, value) => {\n    if (filterType === 'serviceType') {\n      setServiceTypeFilter(value);\n    } else if (filterType === 'package') {\n      setPackageFilter(value);\n    } else if (filterType === 'isFree') {\n      setIsFreeFilter(value);\n    }\n  };\n\n  const getServiceTypePage = (typeCode) => {\n    return serviceTypePages[typeCode] || 1;\n  };\n\n  const setServiceTypePage = (typeCode, page) => {\n    setServiceTypePages(prev => ({\n      ...prev,\n      [typeCode]: page\n    }));\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center min-h-96\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Price List</h1>\n          <p className=\"text-gray-600\">Daftar harga service dan biaya tambahan</p>\n        </div>\n      </div>\n\n      {/* Statistics Cards */}\n      <div className=\"grid grid-cols-2 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <KPICard\n          title=\"Total Items\"\n          value={totalItems}\n          icon={Tag}\n          color=\"blue\"\n        />\n        <KPICard\n          title=\"Service Types\"\n          value={serviceTypesCount}\n          icon={DollarSign}\n          color=\"purple\"\n        />\n        <KPICard\n          title=\"Gratis\"\n          value={freeItems}\n          icon={Gift}\n          color=\"green\"\n        />\n        <KPICard\n          title=\"Berbayar\"\n          value={paidItems}\n          icon={CreditCard}\n          color=\"yellow\"\n        />\n      </div>\n\n      {/* Search and Filters */}\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Search\n            </label>\n            <div className=\"relative\">\n              <Search className=\"h-4 w-4 absolute left-3 top-3 text-gray-400\" />\n              <input\n                type=\"text\"\n                className=\"form-input pl-10\"\n                placeholder=\"Cari harga service...\"\n                value={searchTerm}\n                onChange={handleSearch}\n              />\n            </div>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Service Type\n            </label>\n            <select\n              className=\"form-input\"\n              value={serviceTypeFilter}\n              onChange={(e) => handleFilterChange('serviceType', e.target.value)}\n            >\n              <option value=\"all\">Semua Service Type</option>\n              {serviceTypes.map(type => (\n                <option key={type.code} value={type.code}>\n                  {type.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Package\n            </label>\n            <select\n              className=\"form-input\"\n              value={packageFilter}\n              onChange={(e) => handleFilterChange('package', e.target.value)}\n            >\n              <option value=\"all\">Semua Paket</option>\n              <option value=\"bronze\">Bronze</option>\n              <option value=\"silver\">Silver</option>\n              <option value=\"gold\">Gold</option>\n              <option value=\"platinum\">Platinum</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Harga\n            </label>\n            <select\n              className=\"form-input\"\n              value={isFreeFilter}\n              onChange={(e) => handleFilterChange('isFree', e.target.value)}\n            >\n              <option value=\"all\">Semua Harga</option>\n              <option value=\"true\">Gratis</option>\n              <option value=\"false\">Berbayar</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Rows Per Table\n            </label>\n            <select\n              className=\"form-input\"\n              value={limit}\n              onChange={(e) => {\n                setLimit(parseInt(e.target.value))\n                setServiceTypePages({}) // Reset all pages\n              }}\n            >\n              <option value=\"5\">5 rows</option>\n              <option value=\"10\">10 rows</option>\n              <option value=\"25\">25 rows</option>\n              <option value=\"50\">50 rows</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Price List Table - Grouped by Service Type */}\n      {Object.keys(groupedData).length === 0 ? (\n        <div className=\"bg-white shadow rounded-lg p-12 text-center\">\n          <Tag className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Tidak ada price list</h3>\n          <p className=\"text-gray-500\">Data price list tidak ditemukan</p>\n        </div>\n      ) : (\n        <div className=\"space-y-6\">\n          {Object.entries(groupedData).map(([typeCode, data]) => {\n            const currentPage = getServiceTypePage(typeCode);\n            const totalInType = data.items.length;\n            const totalPages = Math.ceil(totalInType / limit);\n            const startIdx = (currentPage - 1) * limit;\n            const endIdx = startIdx + limit;\n            const displayedItems = data.items.slice(startIdx, endIdx);\n\n            return (\n              <div key={typeCode} className=\"card\">\n                {/* Service Type Header */}\n                <div className=\"card-header\">\n                  <h3 className=\"text-lg font-semibold text-gray-900\">\n                    {data.type_name}\n                    <span className=\"text-sm font-normal text-gray-500 ml-2\">\n                      ({totalInType} items)\n                    </span>\n                  </h3>\n                </div>\n\n                {/* Price Items Table */}\n                <div className=\"card-body p-0\">\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"table\">\n                      <thead className=\"table-header\">\n                        <tr>\n                          <th \n                            className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\" \n                            onClick={() => handleSort('price_name')}\n                          >\n                            <div className=\"flex items-center justify-between\">\n                              <span>Nama Service</span>\n                              {getSortIcon('price_name')}\n                            </div>\n                          </th>\n                          <th \n                            className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\" \n                            onClick={() => handleSort('category_name')}\n                          >\n                            <div className=\"flex items-center justify-between\">\n                              <span>Kategori</span>\n                              {getSortIcon('category_name')}\n                            </div>\n                          </th>\n                          <th className=\"table-header-cell\">Deskripsi</th>\n                          <th className=\"table-header-cell\">Paket</th>\n                          <th \n                            className=\"table-header-cell text-right cursor-pointer hover:bg-gray-100 transition-colors\" \n                            onClick={() => handleSort('base_price')}\n                          >\n                            <div className=\"flex items-center justify-between\">\n                              <span>Harga</span>\n                              {getSortIcon('base_price')}\n                            </div>\n                          </th>\n                          <th className=\"table-header-cell\">Notes</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"table-body\">\n                        {displayedItems.map((item) => (\n                          <tr key={item.id}>\n                            <td className=\"table-cell\">\n                              <div className=\"text-sm font-medium text-gray-900\">\n                                {item.price_name}\n                              </div>\n                            </td>\n                            <td className=\"table-cell whitespace-nowrap\">\n                              <div className=\"text-sm text-gray-900\">\n                                {item.category_name || '-'}\n                              </div>\n                            </td>\n                            <td className=\"table-cell\">\n                              <div className=\"text-sm text-gray-900 truncate\" style={{ maxWidth: '200px' }} title={item.description}>\n                                {item.description || '-'}\n                              </div>\n                            </td>\n                            <td className=\"table-cell whitespace-nowrap\">\n                              {item.applies_to_package && item.applies_to_package !== 'all' ? (\n                                <span className=\"px-2 py-1 text-xs font-semibold rounded-full bg-purple-100 text-purple-800 uppercase\">\n                                  {item.applies_to_package}\n                                </span>\n                              ) : (\n                                <span className=\"text-xs text-gray-500\">All</span>\n                              )}\n                            </td>\n                            <td className=\"table-cell whitespace-nowrap text-right\">\n                              {item.is_free ? (\n                                <span className=\"px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n                                  🆓 GRATIS\n                                </span>\n                              ) : (\n                                <div className=\"text-sm font-bold text-gray-900\">\n                                  {formatCurrency(item.base_price)}\n                                </div>\n                              )}\n                            </td>\n                            <td className=\"table-cell\">\n                              <div className=\"text-xs text-gray-600 italic truncate\" style={{ maxWidth: '150px' }} title={item.notes}>\n                                {item.notes || '-'}\n                              </div>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n\n                  {/* Pagination per Service Type */}\n                  {totalPages > 1 && (\n                    <div className=\"bg-white px-4 py-3 border-t border-gray-200 sm:px-6\">\n                      <div className=\"flex-1 flex justify-between sm:hidden\">\n                        <button\n                          onClick={() => setServiceTypePage(typeCode, Math.max(1, currentPage - 1))}\n                          disabled={currentPage === 1}\n                          className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                        >\n                          Previous\n                        </button>\n                        <button\n                          onClick={() => setServiceTypePage(typeCode, Math.min(totalPages, currentPage + 1))}\n                          disabled={currentPage === totalPages}\n                          className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                        >\n                          Next\n                        </button>\n                      </div>\n                      <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n                        <div>\n                          <p className=\"text-sm text-gray-700\">\n                            Showing <span className=\"font-medium\">{startIdx + 1}</span> to{' '}\n                            <span className=\"font-medium\">{Math.min(endIdx, totalInType)}</span> of{' '}\n                            <span className=\"font-medium\">{totalInType}</span> results\n                          </p>\n                        </div>\n                        <div>\n                          <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\n                            <button\n                              onClick={() => setServiceTypePage(typeCode, Math.max(1, currentPage - 1))}\n                              disabled={currentPage === 1}\n                              className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                            >\n                              <ChevronLeft className=\"h-5 w-5\" />\n                            </button>\n                            {Array.from({ length: totalPages }, (_, i) => i + 1).map((pageNum) => (\n                              <button\n                                key={pageNum}\n                                onClick={() => setServiceTypePage(typeCode, pageNum)}\n                                className={`relative inline-flex items-center px-4 py-2 border text-sm font-medium ${\n                                  currentPage === pageNum\n                                    ? 'z-10 bg-blue-50 border-blue-500 text-blue-600'\n                                    : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50'\n                                }`}\n                              >\n                                {pageNum}\n                              </button>\n                            ))}\n                            <button\n                              onClick={() => setServiceTypePage(typeCode, Math.min(totalPages, currentPage + 1))}\n                              disabled={currentPage === totalPages}\n                              className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                            >\n                              <ChevronRight className=\"h-5 w-5\" />\n                            </button>\n                          </nav>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n\n      {/* Info Box */}\n      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n        <div className=\"flex items-start space-x-3\">\n          <span className=\"text-2xl\">💡</span>\n          <div>\n            <h4 className=\"font-semibold text-blue-900 mb-1\">Informasi Price List</h4>\n            <ul className=\"text-sm text-blue-800 space-y-1\">\n              <li>• Price list ini dapat dilihat oleh public untuk transparansi harga</li>\n              <li>• Harga dapat berbeda tergantung paket yang dilanggan customer</li>\n              <li>• Service yang ditandai GRATIS tidak dikenakan biaya tambahan</li>\n              <li>• Biaya kabel tambahan dan spare part dikenakan terpisah jika diperlukan</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PriceListPage;\n"],"names":["pricelistService","_0","__async","params","queryParams","queryString","api","error","id","_1","serviceType","data","PriceListPage","searchTerm","setSearchTerm","useState","serviceTypeFilter","setServiceTypeFilter","packageFilter","setPackageFilter","isFreeFilter","setIsFreeFilter","sortBy","setSortBy","sortOrder","setSortOrder","serviceTypePages","setServiceTypePages","limit","setLimit","serviceTypes","pricelistResponse","isLoading","useQuery","allPricelist","totalItems","freeItems","p","paidItems","serviceTypesCount","groupedData","acc","item","formatCurrency","value","handleSort","column","getSortIcon","jsx","ArrowUpDown","ArrowUp","ArrowDown","handleSearch","e","handleFilterChange","filterType","getServiceTypePage","typeCode","setServiceTypePage","page","prev","__spreadProps","__spreadValues","LoadingSpinner","jsxs","KPICard","Tag","DollarSign","Gift","CreditCard","Search","type","currentPage","totalInType","totalPages","startIdx","endIdx","displayedItems","ChevronLeft","_","i","pageNum","ChevronRight"],"mappings":"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"}