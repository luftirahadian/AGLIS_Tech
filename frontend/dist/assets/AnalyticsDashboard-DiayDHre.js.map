{"version":3,"file":"AnalyticsDashboard-DiayDHre.js","sources":["../../src/pages/analytics/AnalyticsDashboard.jsx"],"sourcesContent":["// ═══════════════════════════════════════════════════════════════\n// 📊 ADVANCED ANALYTICS DASHBOARD\n// Real-time charts dengan Socket.IO integration\n// ═══════════════════════════════════════════════════════════════\n\nimport React, { useState, useEffect } from 'react';\nimport { useQuery, useQueryClient } from 'react-query';\nimport {\n  LineChart, Line, BarChart, Bar, PieChart, Pie, Cell,\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n  Area, AreaChart\n} from 'recharts';\nimport {\n  TrendingUp, TrendingDown, Activity, DollarSign,\n  Users, Clock, CheckCircle, AlertTriangle,\n  RefreshCw, Calendar, Award, Target\n} from 'lucide-react';\nimport socketService from '../../services/socketService';\nimport analyticsService from '../../services/analyticsService';\n\nconst AnalyticsDashboard = () => {\n  const queryClient = useQueryClient();\n  const [dateRange, setDateRange] = useState('7days');\n  const [autoRefresh, setAutoRefresh] = useState(true);\n\n  // Fetch analytics data\n  const { data: ticketTrend, isLoading: loadingTrend } = useQuery(\n    ['analytics-ticket-trend', dateRange],\n    () => analyticsService.getTicketTrend(dateRange),\n    {\n      refetchInterval: autoRefresh ? 30000 : false\n    }\n  );\n\n  const { data: statusDistribution, isLoading: loadingStatus } = useQuery(\n    'analytics-status-distribution',\n    () => analyticsService.getStatusDistribution(),\n    {\n      refetchInterval: autoRefresh ? 30000 : false\n    }\n  );\n\n  const { data: techPerformance, isLoading: loadingPerf } = useQuery(\n    'analytics-tech-performance',\n    () => analyticsService.getTechnicianPerformance(),\n    {\n      refetchInterval: autoRefresh ? 30000 : false\n    }\n  );\n\n  const { data: revenueTrend, isLoading: loadingRevenue } = useQuery(\n    'analytics-revenue-trend',\n    () => analyticsService.getRevenueTrend(),\n    {\n      refetchInterval: autoRefresh ? 60000 : false\n    }\n  );\n\n  const { data: kpiData, isLoading: loadingKPI } = useQuery(\n    'analytics-kpi',\n    () => analyticsService.getKPIMetrics(),\n    {\n      refetchInterval: autoRefresh ? 30000 : false\n    }\n  );\n\n  // Real-time updates via Socket.IO\n  useEffect(() => {\n    const handleTicketUpdate = () => {\n      console.log('📊 [Analytics] Ticket updated, refreshing charts...');\n      queryClient.invalidateQueries(['analytics-ticket-trend']);\n      queryClient.invalidateQueries('analytics-status-distribution');\n      queryClient.invalidateQueries('analytics-kpi');\n    };\n\n    const handlePaymentReceived = () => {\n      console.log('📊 [Analytics] Payment received, refreshing revenue...');\n      queryClient.invalidateQueries('analytics-revenue-trend');\n      queryClient.invalidateQueries('analytics-kpi');\n    };\n\n    // Register listeners\n    socketService.on('ticket_created', handleTicketUpdate);\n    socketService.on('ticket_updated', handleTicketUpdate);\n    socketService.on('ticket_completed', handleTicketUpdate);\n    socketService.on('payment_received', handlePaymentReceived);\n\n    console.log('📊 [Analytics] Socket.IO listeners registered');\n\n    return () => {\n      socketService.off('ticket_created', handleTicketUpdate);\n      socketService.off('ticket_updated', handleTicketUpdate);\n      socketService.off('ticket_completed', handleTicketUpdate);\n      socketService.off('payment_received', handlePaymentReceived);\n    };\n  }, [queryClient]);\n\n  // Chart colors\n  const COLORS = {\n    primary: '#3B82F6',\n    success: '#10B981',\n    warning: '#F59E0B',\n    danger: '#EF4444',\n    purple: '#8B5CF6',\n    teal: '#14B8A6'\n  };\n\n  const PIE_COLORS = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#14B8A6'];\n\n  // KPI Card Component\n  const KPICard = ({ icon: Icon, label, value, change, trend, color = 'blue' }) => {\n    const colors = {\n      blue: 'from-blue-500 to-blue-600',\n      green: 'from-green-500 to-green-600',\n      yellow: 'from-yellow-500 to-yellow-600',\n      red: 'from-red-500 to-red-600',\n      purple: 'from-purple-500 to-purple-600'\n    };\n\n    return (\n      <div className=\"bg-white rounded-lg shadow-sm p-6 hover:shadow-md transition-shadow\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className={`p-3 rounded-lg bg-gradient-to-r ${colors[color]}`}>\n            <Icon className=\"h-6 w-6 text-white\" />\n          </div>\n          {trend && (\n            <div className={`flex items-center text-sm font-medium ${\n              trend === 'up' ? 'text-green-600' : 'text-red-600'\n            }`}>\n              {trend === 'up' ? <TrendingUp className=\"h-4 w-4 mr-1\" /> : <TrendingDown className=\"h-4 w-4 mr-1\" />}\n              {change}\n            </div>\n          )}\n        </div>\n        <div>\n          <p className=\"text-2xl font-bold text-gray-900\">{value}</p>\n          <p className=\"text-sm text-gray-600 mt-1\">{label}</p>\n        </div>\n      </div>\n    );\n  };\n\n  const kpis = kpiData?.data || {};\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">📊 Analytics Dashboard</h1>\n          <p className=\"text-gray-600 mt-1\">Real-time performance metrics & insights</p>\n        </div>\n        \n        <div className=\"flex items-center space-x-3\">\n          {/* Auto Refresh Toggle */}\n          <label className=\"flex items-center space-x-2 cursor-pointer\">\n            <input\n              type=\"checkbox\"\n              checked={autoRefresh}\n              onChange={(e) => setAutoRefresh(e.target.checked)}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <span className=\"text-sm text-gray-700\">Auto-refresh</span>\n            <RefreshCw className={`h-4 w-4 ${autoRefresh ? 'text-green-500 animate-spin-slow' : 'text-gray-400'}`} />\n          </label>\n\n          {/* Date Range */}\n          <select\n            value={dateRange}\n            onChange={(e) => setDateRange(e.target.value)}\n            className=\"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n          >\n            <option value=\"today\">Hari Ini</option>\n            <option value=\"7days\">7 Hari</option>\n            <option value=\"30days\">30 Hari</option>\n            <option value=\"90days\">90 Hari</option>\n            <option value=\"year\">Tahun Ini</option>\n          </select>\n        </div>\n      </div>\n\n      {/* KPI Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <KPICard\n          icon={Activity}\n          label=\"Total Tickets\"\n          value={kpis.total_tickets || 0}\n          change={`+${kpis.ticket_growth || 0}%`}\n          trend=\"up\"\n          color=\"blue\"\n        />\n        <KPICard\n          icon={CheckCircle}\n          label=\"Completion Rate\"\n          value={`${kpis.completion_rate || 0}%`}\n          change={`+${kpis.completion_growth || 0}%`}\n          trend={kpis.completion_growth > 0 ? 'up' : 'down'}\n          color=\"green\"\n        />\n        <KPICard\n          icon={Clock}\n          label=\"Avg Response Time\"\n          value={`${kpis.avg_response_time || 0}h`}\n          change={`-${kpis.response_improvement || 0}%`}\n          trend=\"up\"\n          color=\"purple\"\n        />\n        <KPICard\n          icon={DollarSign}\n          label=\"Revenue (This Month)\"\n          value={`Rp ${((kpis.monthly_revenue || 0) / 1000000).toFixed(1)}M`}\n          change={`+${kpis.revenue_growth || 0}%`}\n          trend=\"up\"\n          color=\"yellow\"\n        />\n      </div>\n\n      {/* Charts Row 1 */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Ticket Trend Chart */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <TrendingUp className=\"h-5 w-5 mr-2 text-blue-600\" />\n            Ticket Trend\n          </h3>\n          {loadingTrend ? (\n            <div className=\"h-64 flex items-center justify-center\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n            </div>\n          ) : (\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <AreaChart data={ticketTrend?.data || []}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Area type=\"monotone\" dataKey=\"tickets\" stroke={COLORS.primary} fill={COLORS.primary} fillOpacity={0.3} name=\"Tickets\" />\n                <Area type=\"monotone\" dataKey=\"completed\" stroke={COLORS.success} fill={COLORS.success} fillOpacity={0.3} name=\"Completed\" />\n              </AreaChart>\n            </ResponsiveContainer>\n          )}\n        </div>\n\n        {/* Status Distribution */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Target className=\"h-5 w-5 mr-2 text-purple-600\" />\n            Status Distribution\n          </h3>\n          {loadingStatus ? (\n            <div className=\"h-64 flex items-center justify-center\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-purple-600\"></div>\n            </div>\n          ) : (\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={statusDistribution?.data || []}\n                  dataKey=\"count\"\n                  nameKey=\"status\"\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={100}\n                  label={(entry) => `${entry.status}: ${entry.count}`}\n                >\n                  {(statusDistribution?.data || []).map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={PIE_COLORS[index % PIE_COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          )}\n        </div>\n      </div>\n\n      {/* Charts Row 2 */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Technician Performance */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Award className=\"h-5 w-5 mr-2 text-yellow-600\" />\n            Technician Performance\n          </h3>\n          {loadingPerf ? (\n            <div className=\"h-64 flex items-center justify-center\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-yellow-600\"></div>\n            </div>\n          ) : (\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={techPerformance?.data || []}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"completed\" fill={COLORS.success} name=\"Completed\" />\n                <Bar dataKey=\"pending\" fill={COLORS.warning} name=\"Pending\" />\n              </BarChart>\n            </ResponsiveContainer>\n          )}\n        </div>\n\n        {/* Revenue Trend */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <DollarSign className=\"h-5 w-5 mr-2 text-green-600\" />\n            Revenue Trend\n          </h3>\n          {loadingRevenue ? (\n            <div className=\"h-64 flex items-center justify-center\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600\"></div>\n            </div>\n          ) : (\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={revenueTrend?.data || []}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip formatter={(value) => `Rp ${(value / 1000000).toFixed(2)}M`} />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"revenue\" stroke={COLORS.success} strokeWidth={2} name=\"Revenue\" />\n                <Line type=\"monotone\" dataKey=\"target\" stroke={COLORS.warning} strokeWidth={2} strokeDasharray=\"5 5\" name=\"Target\" />\n              </LineChart>\n            </ResponsiveContainer>\n          )}\n        </div>\n      </div>\n\n      {/* Real-time Indicator */}\n      <div className=\"flex items-center justify-center text-sm text-gray-500\">\n        <div className={`w-2 h-2 rounded-full mr-2 ${autoRefresh ? 'bg-green-500 animate-pulse' : 'bg-gray-400'}`}></div>\n        {autoRefresh ? 'Live updates active' : 'Auto-refresh disabled'}\n      </div>\n    </div>\n  );\n};\n\nexport default AnalyticsDashboard;\n\n"],"names":["AnalyticsDashboard","queryClient","useQueryClient","dateRange","setDateRange","useState","autoRefresh","setAutoRefresh","ticketTrend","loadingTrend","useQuery","analyticsService","statusDistribution","loadingStatus","techPerformance","loadingPerf","revenueTrend","loadingRevenue","kpiData","loadingKPI","useEffect","handleTicketUpdate","handlePaymentReceived","socketService","COLORS","PIE_COLORS","KPICard","Icon","label","value","change","trend","color","colors","jsxs","jsx","TrendingUp","TrendingDown","kpis","e","RefreshCw","Activity","CheckCircle","Clock","DollarSign","ResponsiveContainer","AreaChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Area","Target","PieChart","Pie","entry","index","Cell","Award","BarChart","Bar","LineChart","Line"],"mappings":"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"}