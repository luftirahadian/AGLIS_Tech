{"version":3,"file":"RegistrationsPage-VUWEJPQT.js","sources":["../../src/pages/registrations/RegistrationsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\nimport {\n  UserPlus, Search, Filter, Eye, CheckCircle, XCircle, Clock,\n  Calendar, Phone, Mail, MapPin, Package, Shield, FileCheck,\n  UserCheck, ClipboardCheck, Home, ChevronRight, BarChart3,\n  ArrowUpDown, ArrowUp, ArrowDown, ChevronLeft, Download, Loader2,\n  Copy, Check, PhoneCall, Mail as MailIcon, ShieldAlert, Trash2\n} from 'lucide-react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport toast from 'react-hot-toast'\nimport registrationService from '../../services/registrationService'\nimport LoadingSpinner from '../../components/LoadingSpinner'\nimport KPICard from '../../components/dashboard/KPICard'\nimport ConfirmationModal from '../../components/ConfirmationModal'\nimport socketService from '../../services/socketService'\nimport { exportToExcel, formatCurrency as formatCurrencyExport, formatDate, formatDateOnly } from '../../utils/exportToExcel'\nimport { useAuth } from '../../contexts/AuthContext'\n\nconst RegistrationsPage = () => {\n  const navigate = useNavigate()\n  const queryClient = useQueryClient()\n  const { user: currentUser, isAdmin, isSupervisor, isCustomerService } = useAuth()\n  \n  const [currentPage, setCurrentPage] = useState(1)\n  const [limit, setLimit] = useState(10)\n  const [selectedRegistration, setSelectedRegistration] = useState(null)\n  const [showDetailModal, setShowDetailModal] = useState(false)\n  const [actionType, setActionType] = useState(null) // verify, approve, reject, survey_scheduled\n  const [actionNotes, setActionNotes] = useState('')\n  const [rejectionReason, setRejectionReason] = useState('')\n  const [surveyDate, setSurveyDate] = useState('')\n  const [sortBy, setSortBy] = useState('created_at')\n  const [sortOrder, setSortOrder] = useState('DESC')\n  const [isExporting, setIsExporting] = useState(false)\n  \n  const [filters, setFilters] = useState({\n    search: '',\n    status: '',\n    dateFilter: '' // 'today' or ''\n  })\n\n  // Bulk selection states\n  const [selectedRegistrations, setSelectedRegistrations] = useState([])\n  const [selectAll, setSelectAll] = useState(false)\n  \n  // Copy to clipboard state\n  const [copiedField, setCopiedField] = useState(null)\n\n  // Create customer confirmation modal\n  const [showCreateCustomerModal, setShowCreateCustomerModal] = useState(false)\n  const [customerToCreate, setCustomerToCreate] = useState(null)\n  \n  // Quick action modals\n  const [showQuickVerifyModal, setShowQuickVerifyModal] = useState(false)\n  const [showQuickRejectModal, setShowQuickRejectModal] = useState(false)\n  const [showQuickApproveModal, setShowQuickApproveModal] = useState(false)\n  const [showQuickScheduleSurveyModal, setShowQuickScheduleSurveyModal] = useState(false)\n  const [quickActionTarget, setQuickActionTarget] = useState(null)\n  const [quickRejectReason, setQuickRejectReason] = useState('')\n  const [quickSurveyDate, setQuickSurveyDate] = useState(new Date().toISOString().split('T')[0])\n\n  // Format currency helper\n  const formatCurrency = (amount) => {\n    if (!amount) return '-'\n    return new Intl.NumberFormat('id-ID', {\n      style: 'currency',\n      currency: 'IDR',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount)\n  }\n\n  // Fetch registrations\n  const { data: registrationsData, isLoading } = useQuery(\n    ['registrations', filters, currentPage, limit, sortBy, sortOrder],\n    () => registrationService.getAll({\n      ...filters,\n      page: currentPage,\n      limit,\n      sort_by: sortBy,\n      sort_order: sortOrder\n    }),\n    {\n      keepPreviousData: true\n    }\n  )\n\n  // Fetch statistics\n  const { data: statsData } = useQuery(\n    'registration-stats',\n    () => registrationService.getStats(),\n    {\n      select: (response) => response.data\n    }\n  )\n\n  // Update status mutation\n  const updateStatusMutation = useMutation(\n    ({ id, data }) => registrationService.updateStatus(id, data),\n    {\n      onSuccess: (response) => {\n        queryClient.invalidateQueries(['registrations'])\n        queryClient.invalidateQueries('registration-stats')\n        \n        // Reset form fields\n        setActionType(null)\n        setActionNotes('')\n        setRejectionReason('')\n        setSurveyDate('')\n        \n        // Refresh selected registration data\n        if (response?.data?.registration) {\n          setSelectedRegistration(response.data.registration)\n        }\n        \n        toast.success('Status berhasil diupdate')\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Gagal update status')\n      }\n    }\n  )\n\n  // Create customer mutation\n  const createCustomerMutation = useMutation(\n    (id) => registrationService.createCustomer(id),\n    {\n      onSuccess: (response) => {\n        queryClient.invalidateQueries(['registrations'])\n        queryClient.invalidateQueries('registration-stats')\n        toast.success('Customer dan ticket instalasi berhasil dibuat!')\n        setShowDetailModal(false)\n        setSelectedRegistration(null)\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Gagal membuat customer')\n      }\n    }\n  )\n\n  const handleSubmitAction = () => {\n    if (!selectedRegistration) return\n\n    let data = {\n      status: actionType,\n      notes: actionNotes\n    }\n\n    if (actionType === 'rejected') {\n      if (!rejectionReason.trim()) {\n        toast.error('Alasan penolakan wajib diisi')\n        return\n      }\n      data.rejection_reason = rejectionReason\n    }\n\n    if (actionType === 'survey_scheduled') {\n      if (!surveyDate) {\n        toast.error('Tanggal survey wajib diisi')\n        return\n      }\n      data.survey_scheduled_date = surveyDate\n    }\n\n    if (actionType === 'survey_completed') {\n      if (!actionNotes.trim()) {\n        toast.error('Hasil survey wajib diisi')\n        return\n      }\n      data.notes = actionNotes // Survey results stored in notes\n    }\n\n    updateStatusMutation.mutate({ id: selectedRegistration.id, data })\n  }\n\n  const handleCreateCustomer = (registration) => {\n    setCustomerToCreate(registration)\n    setShowCreateCustomerModal(true)\n  }\n\n  const confirmCreateCustomer = () => {\n    if (customerToCreate) {\n      createCustomerMutation.mutate(customerToCreate.id)\n      setShowCreateCustomerModal(false)\n      setCustomerToCreate(null)\n    }\n  }\n\n  const handleSort = (column) => {\n    if (sortBy === column) {\n      setSortOrder(sortOrder === 'ASC' ? 'DESC' : 'ASC')\n    } else {\n      setSortBy(column)\n      setSortOrder('DESC')\n    }\n    setCurrentPage(1)\n  }\n\n  const getSortIcon = (column) => {\n    if (sortBy !== column) {\n      return <ArrowUpDown className=\"h-4 w-4 text-gray-400\" />\n    }\n    return sortOrder === 'ASC' \n      ? <ArrowUp className=\"h-4 w-4 text-blue-600\" />\n      : <ArrowDown className=\"h-4 w-4 text-blue-600\" />\n  }\n\n  const getStatusBadge = (status) => {\n    const badges = {\n      pending_verification: { label: 'Pending', color: 'bg-yellow-100 text-yellow-800' },\n      verified: { label: 'Verified', color: 'bg-blue-100 text-blue-800' },\n      survey_scheduled: { label: 'Survey Scheduled', color: 'bg-indigo-100 text-indigo-800' },\n      survey_completed: { label: 'Survey Done', color: 'bg-purple-100 text-purple-800' },\n      approved: { label: 'Approved', color: 'bg-green-100 text-green-800' },\n      customer_created: { label: 'Customer Created', color: 'bg-emerald-100 text-emerald-800' },\n      rejected: { label: 'Rejected', color: 'bg-red-100 text-red-800' }\n    }\n    const badge = badges[status] || badges.pending_verification\n    return <span className={`px-3 py-1 rounded-full text-xs font-semibold ${badge.color}`}>{badge.label}</span>\n  }\n\n  // Export registrations to Excel\n  const handleExport = async () => {\n    try {\n      setIsExporting(true)\n      \n      // Fetch all registrations with current filters (no pagination limit)\n      const response = await registrationService.getAll({\n        ...filters,\n        page: 1,\n        limit: 10000, // Get all data\n        sort_by: sortBy,\n        sort_order: sortOrder\n      })\n\n      const allRegistrations = response.data?.registrations || []\n      \n      if (allRegistrations.length === 0) {\n        toast.error('Tidak ada data untuk di-export')\n        return\n      }\n\n      // Get status label for display\n      const getStatusLabel = (status) => {\n        const labels = {\n          pending_verification: 'Pending',\n          verified: 'Verified',\n          survey_scheduled: 'Survey Scheduled',\n          survey_completed: 'Survey Done',\n          approved: 'Approved',\n          customer_created: 'Customer Created',\n          rejected: 'Rejected',\n          cancelled: 'Cancelled'\n        }\n        return labels[status] || status\n      }\n\n      // Format data for Excel\n      const exportData = allRegistrations.map((reg, index) => ({\n        'No': index + 1,\n        'Registration Number': reg.registration_number,\n        'Tanggal Daftar': formatDate(reg.created_at),\n        'Nama Lengkap': reg.full_name,\n        'Email': reg.email || '-',\n        'WhatsApp': reg.phone || '-',\n        'Alamat Lengkap': reg.address || '-',\n        'Kota': reg.city || '-',\n        'Package': reg.package_name || '-',\n        'Harga Bulanan': formatCurrencyExport(reg.monthly_price),\n        'Status': getStatusLabel(reg.status),\n        'Verified Date': reg.verified_at ? formatDate(reg.verified_at) : '-',\n        'Survey Scheduled': reg.survey_scheduled_date ? formatDate(reg.survey_scheduled_date) : '-',\n        'Approved Date': reg.approved_at ? formatDate(reg.approved_at) : '-',\n        'Rejection Reason': reg.rejection_reason || '-',\n        'Preferred Install Date': reg.preferred_installation_date ? formatDateOnly(reg.preferred_installation_date) : '-'\n      }))\n\n      // Export to Excel\n      const result = exportToExcel(exportData, 'Registrations_Export', 'Registrations Data')\n      \n      toast.success(`✅ ${result.rows} registrations berhasil di-export!`)\n      \n    } catch (error) {\n      console.error('Export error:', error)\n      toast.error('Gagal export data. Silakan coba lagi.')\n    } finally {\n      setIsExporting(false)\n    }\n  }\n\n  // ==================== BULK SELECTION HANDLERS ====================\n  \n  const handleSelectAll = (e) => {\n    if (e.target.checked) {\n      setSelectedRegistrations(registrations.map(r => r.id))\n      setSelectAll(true)\n    } else {\n      setSelectedRegistrations([])\n      setSelectAll(false)\n    }\n  }\n\n  const handleSelectRegistration = (regId) => {\n    if (selectedRegistrations.includes(regId)) {\n      setSelectedRegistrations(selectedRegistrations.filter(id => id !== regId))\n      setSelectAll(false)\n    } else {\n      const newSelected = [...selectedRegistrations, regId]\n      setSelectedRegistrations(newSelected)\n      if (newSelected.length === registrations.length) {\n        setSelectAll(true)\n      }\n    }\n  }\n\n  // ==================== BULK ACTION HANDLERS ====================\n\n  const handleBulkVerify = async () => {\n    if (selectedRegistrations.length === 0) {\n      toast.error('Pilih registration terlebih dahulu')\n      return\n    }\n\n    if (!window.confirm(`Verify ${selectedRegistrations.length} registration yang dipilih?`)) {\n      return\n    }\n\n    try {\n      let successCount = 0\n      let errorCount = 0\n\n      for (const regId of selectedRegistrations) {\n        try {\n          await registrationService.updateStatus(regId, 'verified', { notes: 'Bulk verified' })\n          successCount++\n        } catch (error) {\n          errorCount++\n          console.error(`Failed to verify registration ${regId}:`, error)\n        }\n      }\n\n      if (successCount > 0) {\n        toast.success(`✅ ${successCount} registration berhasil di-verify${errorCount > 0 ? `, ${errorCount} gagal` : ''}`)\n        queryClient.invalidateQueries(['registrations'])\n        queryClient.invalidateQueries('registration-stats')\n        setSelectedRegistrations([])\n        setSelectAll(false)\n      } else {\n        toast.error('Gagal verify registration')\n      }\n    } catch (error) {\n      console.error('Bulk verify error:', error)\n      toast.error('Terjadi kesalahan saat verify registration')\n    }\n  }\n\n  const handleBulkReject = async () => {\n    if (selectedRegistrations.length === 0) {\n      toast.error('Pilih registration terlebih dahulu')\n      return\n    }\n\n    const reason = window.prompt('Alasan reject (akan diterapkan ke semua):')\n    if (!reason) return\n\n    if (!window.confirm(`⚠️ Reject ${selectedRegistrations.length} registration?`)) {\n      return\n    }\n\n    try {\n      let successCount = 0\n      let errorCount = 0\n\n      for (const regId of selectedRegistrations) {\n        try {\n          await registrationService.updateStatus(regId, 'rejected', { \n            rejection_reason: reason,\n            notes: 'Bulk rejected'\n          })\n          successCount++\n        } catch (error) {\n          errorCount++\n          console.error(`Failed to reject registration ${regId}:`, error)\n        }\n      }\n\n      if (successCount > 0) {\n        toast.success(`✅ ${successCount} registration berhasil di-reject${errorCount > 0 ? `, ${errorCount} gagal` : ''}`)\n        queryClient.invalidateQueries(['registrations'])\n        queryClient.invalidateQueries('registration-stats')\n        setSelectedRegistrations([])\n        setSelectAll(false)\n      } else {\n        toast.error('Gagal reject registration')\n      }\n    } catch (error) {\n      console.error('Bulk reject error:', error)\n      toast.error('Terjadi kesalahan saat reject registration')\n    }\n  }\n\n  // ==================== COPY TO CLIPBOARD HANDLER ====================\n\n  const handleCopyToClipboard = (text, fieldName) => {\n    navigator.clipboard.writeText(text).then(() => {\n      setCopiedField(fieldName)\n      toast.success(`${fieldName} berhasil di-copy!`)\n      setTimeout(() => setCopiedField(null), 2000)\n    }).catch(err => {\n      toast.error('Gagal copy ke clipboard')\n      console.error('Copy error:', err)\n    })\n  }\n\n  // ==================== QUICK ACTION HANDLERS ====================\n\n  const handleQuickVerify = (e, registration) => {\n    e.stopPropagation()\n    setQuickActionTarget(registration)\n    setShowQuickVerifyModal(true)\n  }\n\n  const confirmQuickVerify = async () => {\n    if (!quickActionTarget) return\n\n    try {\n      await registrationService.updateStatus(quickActionTarget.id, 'verified', { notes: 'Quick verified' })\n      toast.success(`Registration ${quickActionTarget.registration_number} verified`)\n      queryClient.invalidateQueries(['registrations'])\n      queryClient.invalidateQueries('registration-stats')\n      setShowQuickVerifyModal(false)\n      setQuickActionTarget(null)\n    } catch (error) {\n      toast.error('Failed to verify registration')\n      console.error('Quick verify error:', error)\n    }\n  }\n\n  const handleQuickReject = (e, registration) => {\n    e.stopPropagation()\n    setQuickActionTarget(registration)\n    setQuickRejectReason('')\n    setShowQuickRejectModal(true)\n  }\n\n  const confirmQuickReject = async () => {\n    if (!quickActionTarget) return\n    if (!quickRejectReason.trim()) {\n      toast.error('Alasan reject wajib diisi')\n      return\n    }\n\n    try {\n      await registrationService.updateStatus(quickActionTarget.id, 'rejected', { \n        rejection_reason: quickRejectReason,\n        notes: 'Quick rejected'\n      })\n      toast.success(`Registration ${quickActionTarget.registration_number} rejected`)\n      queryClient.invalidateQueries(['registrations'])\n      queryClient.invalidateQueries('registration-stats')\n      setShowQuickRejectModal(false)\n      setQuickActionTarget(null)\n      setQuickRejectReason('')\n    } catch (error) {\n      toast.error('Failed to reject registration')\n      console.error('Quick reject error:', error)\n    }\n  }\n\n  const handleQuickCall = (e, phone) => {\n    e.stopPropagation()\n    window.location.href = `tel:${phone}`\n  }\n\n  const handleQuickEmail = (e, email) => {\n    e.stopPropagation()\n    window.location.href = `mailto:${email}`\n  }\n\n  const handleQuickCreateCustomer = (e, registration) => {\n    e.stopPropagation()\n    setCustomerToCreate(registration)\n    setShowCreateCustomerModal(true)\n  }\n\n  const handleQuickApprove = (e, registration) => {\n    e.stopPropagation()\n    setQuickActionTarget(registration)\n    setShowQuickApproveModal(true)\n  }\n\n  const confirmQuickApprove = async () => {\n    if (!quickActionTarget) return\n\n    try {\n      await registrationService.updateStatus(quickActionTarget.id, 'approved', { notes: 'Quick approved' })\n      toast.success(`Registration ${quickActionTarget.registration_number} approved`)\n      queryClient.invalidateQueries(['registrations'])\n      queryClient.invalidateQueries('registration-stats')\n      setShowQuickApproveModal(false)\n      setQuickActionTarget(null)\n    } catch (error) {\n      toast.error('Failed to approve registration')\n      console.error('Quick approve error:', error)\n    }\n  }\n\n  const handleQuickScheduleSurvey = (e, registration) => {\n    e.stopPropagation()\n    setQuickActionTarget(registration)\n    setQuickSurveyDate(new Date().toISOString().split('T')[0])\n    setShowQuickScheduleSurveyModal(true)\n  }\n\n  const confirmQuickScheduleSurvey = async () => {\n    if (!quickActionTarget) return\n    if (!quickSurveyDate) {\n      toast.error('Tanggal survey wajib diisi')\n      return\n    }\n\n    try {\n      await registrationService.updateStatus(quickActionTarget.id, 'survey_scheduled', { \n        survey_date: quickSurveyDate,\n        notes: 'Survey scheduled via quick action'\n      })\n      toast.success(`Survey scheduled for ${quickActionTarget.registration_number}`)\n      queryClient.invalidateQueries(['registrations'])\n      queryClient.invalidateQueries('registration-stats')\n      setShowQuickScheduleSurveyModal(false)\n      setQuickActionTarget(null)\n    } catch (error) {\n      toast.error('Failed to schedule survey')\n      console.error('Quick schedule survey error:', error)\n    }\n  }\n\n  // ==================== RBAC CHECK ====================\n  \n  const hasAccess = isAdmin || isSupervisor || isCustomerService\n  const canVerify = isAdmin || isSupervisor || isCustomerService\n  const canApprove = isAdmin || isSupervisor\n  const canReject = isAdmin || isSupervisor\n\n  const stats = statsData || {}\n  const totalRegistrations = registrationsData?.data?.pagination?.total || 0\n  const registrations = registrationsData?.data?.registrations || []\n\n  // Listen to socket events for real-time updates\n  useEffect(() => {\n    const handleRegistrationUpdate = (data) => {\n      console.log('🔄 Registration update received:', data)\n      queryClient.invalidateQueries(['registrations'])\n      queryClient.invalidateQueries('registration-stats')\n      toast.success('Data registrasi telah diperbarui!')\n    }\n\n    const handleNewRegistration = (data) => {\n      console.log('✨ New registration received:', data)\n      queryClient.invalidateQueries(['registrations'])\n      queryClient.invalidateQueries('registration-stats')\n      toast.success(`Pendaftaran baru dari ${data.registration?.full_name || 'customer'}!`, {\n        duration: 4000,\n        icon: '🎉'\n      })\n    }\n\n    const handleCustomerCreated = (data) => {\n      console.log('👤 Customer created:', data)\n      queryClient.invalidateQueries(['registrations'])\n      queryClient.invalidateQueries('registration-stats')\n    }\n\n    // Register Socket.IO listeners\n    socketService.on('new_registration', handleNewRegistration)\n    socketService.on('registration-updated', handleRegistrationUpdate)\n    socketService.on('registration_updated', handleRegistrationUpdate)\n    socketService.on('customer-created', handleCustomerCreated)\n    socketService.on('registration_status_changed', handleRegistrationUpdate)\n\n    console.log('📡 Socket.IO listeners registered for registrations')\n\n    return () => {\n      // Cleanup listeners\n      socketService.off('new_registration', handleNewRegistration)\n      socketService.off('registration-updated', handleRegistrationUpdate)\n      socketService.off('registration_updated', handleRegistrationUpdate)\n      socketService.off('customer-created', handleCustomerCreated)\n      socketService.off('registration_status_changed', handleRegistrationUpdate)\n      console.log('📡 Socket.IO listeners cleaned up')\n    }\n  }, [queryClient])\n\n  if (!hasAccess) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-96\">\n        <ShieldAlert className=\"h-24 w-24 text-red-500 mb-4\" />\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Access Denied</h2>\n        <p className=\"text-gray-600 mb-4\">You don't have permission to access Registrations.</p>\n        <p className=\"text-sm text-gray-500\">Required role: Admin, Supervisor, or Customer Service</p>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Pendaftaran Customer</h1>\n          <p className=\"text-gray-600\">Kelola pendaftaran customer baru dari public form</p>\n        </div>\n        <div className=\"flex gap-3\">\n          <button \n            onClick={handleExport}\n            disabled={isExporting || isLoading}\n            className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors inline-flex items-center disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {isExporting ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                Exporting...\n              </>\n            ) : (\n              <>\n                <Download className=\"h-4 w-4 mr-2\" />\n                Export to Excel\n              </>\n            )}\n          </button>\n          <Link\n            to=\"/registration-analytics\"\n            className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n          >\n            <BarChart3 className=\"-ml-1 mr-2 h-5 w-5\" />\n            Analytics\n          </Link>\n          <a\n            href=\"/register\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"btn-primary\"\n          >\n            <UserPlus className=\"h-4 w-4 mr-2\" />\n            Form Pendaftaran\n          </a>\n        </div>\n      </div>\n\n      {/* Bulk Action Toolbar - Shows when items are selected */}\n      {selectedRegistrations.length > 0 && (\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <span className=\"text-sm font-medium text-blue-900\">\n                {selectedRegistrations.length} registration dipilih\n              </span>\n              <button\n                onClick={() => {\n                  setSelectedRegistrations([])\n                  setSelectAll(false)\n                }}\n                className=\"text-sm text-blue-600 hover:text-blue-800 hover:underline\"\n              >\n                Batal Pilihan\n              </button>\n            </div>\n            <div className=\"flex gap-2\">\n              {canVerify && (\n                <button\n                  onClick={handleBulkVerify}\n                  className=\"px-3 py-1.5 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors text-sm inline-flex items-center\"\n                >\n                  <UserCheck className=\"h-4 w-4 mr-1\" />\n                  Verify\n                </button>\n              )}\n              {canReject && (\n                <button\n                  onClick={handleBulkReject}\n                  className=\"px-3 py-1.5 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors text-sm inline-flex items-center\"\n                >\n                  <XCircle className=\"h-4 w-4 mr-1\" />\n                  Reject\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Statistics Cards - Row 1: Workflow Progress */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <KPICard \n          icon={FileCheck} \n          title=\"Total Pendaftaran\" \n          value={stats.total_registrations || 0} \n          color=\"blue\" \n        />\n        <KPICard \n          icon={Clock} \n          title=\"Need Review\" \n          value={(parseInt(stats.pending_verification) || 0) + (parseInt(stats.verified) || 0)} \n          color=\"yellow\"\n          onClick={() => {\n            // Toggle between showing Need Review statuses or all\n            const isFiltered = filters.status === 'pending_verification' || filters.status === 'verified'\n            setFilters({ \n              ...filters, \n              status: isFiltered ? '' : 'pending_verification',\n              dateFilter: ''\n            })\n            setCurrentPage(1)\n          }}\n        />\n        <KPICard \n          icon={Calendar} \n          title=\"Survey\" \n          value={(parseInt(stats.survey_scheduled) || 0) + (parseInt(stats.survey_completed) || 0)} \n          color=\"indigo\"\n          onClick={() => {\n            const isFiltered = filters.status === 'survey_scheduled' || filters.status === 'survey_completed'\n            setFilters({ \n              ...filters, \n              status: isFiltered ? '' : 'survey_scheduled',\n              dateFilter: ''\n            })\n            setCurrentPage(1)\n          }}\n        />\n        <KPICard \n          icon={CheckCircle} \n          title=\"Approved\" \n          value={stats.approved || 0} \n          color=\"green\"\n          onClick={() => {\n            setFilters({ \n              ...filters, \n              status: filters.status === 'approved' ? '' : 'approved',\n              dateFilter: ''\n            })\n            setCurrentPage(1)\n          }}\n        />\n      </div>\n\n      {/* Statistics Cards - Row 2: Outcomes & Daily Metric */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        <KPICard \n          icon={Home} \n          title=\"Customer Created\" \n          value={stats.customer_created || 0} \n          color=\"emerald\"\n          onClick={() => {\n            setFilters({ \n              ...filters, \n              status: filters.status === 'customer_created' ? '' : 'customer_created',\n              dateFilter: ''\n            })\n            setCurrentPage(1)\n          }}\n        />\n        <KPICard \n          icon={XCircle} \n          title=\"Rejected\" \n          value={stats.rejected || 0} \n          color=\"red\"\n          onClick={() => {\n            setFilters({ \n              ...filters, \n              status: filters.status === 'rejected' ? '' : 'rejected',\n              dateFilter: ''\n            })\n            setCurrentPage(1)\n          }}\n        />\n        <KPICard \n          icon={Calendar} \n          title=\"Today's New\" \n          value={stats.today_registrations || 0} \n          color=\"orange\"\n          onClick={() => {\n            setFilters({ \n              ...filters, \n              status: '',\n              dateFilter: filters.dateFilter === 'today' ? '' : 'today'\n            })\n            setCurrentPage(1)\n          }}\n        />\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n          {/* Search */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Search</label>\n            <div className=\"relative\">\n              <Search className=\"h-4 w-4 absolute left-3 top-3 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Cari nama, email, nomor...\"\n                className=\"form-input pl-10\"\n                value={filters.search}\n                onChange={(e) => setFilters({ ...filters, search: e.target.value })}\n              />\n            </div>\n          </div>\n\n          {/* Status Filter */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n            <select\n              className=\"form-input\"\n              value={filters.status}\n              onChange={(e) => setFilters({ ...filters, status: e.target.value })}\n            >\n              <option value=\"\">Semua Status</option>\n              <option value=\"pending_verification\">Pending Verification</option>\n              <option value=\"verified\">Verified</option>\n              <option value=\"survey_scheduled\">Survey Scheduled</option>\n              <option value=\"survey_completed\">Survey Completed</option>\n              <option value=\"approved\">Approved</option>\n              <option value=\"customer_created\">Customer Created</option>\n              <option value=\"rejected\">Rejected</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Table */}\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">\n            All Registrations\n            <span className=\"text-sm font-normal text-gray-500 ml-2\">\n              ({totalRegistrations} total)\n            </span>\n          </h2>\n        </div>\n        <div className=\"card-body p-0\">\n          {isLoading ? (\n            <div className=\"py-12\">\n              <LoadingSpinner className=\"mx-auto\" />\n            </div>\n          ) : registrationsData?.data?.registrations.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <UserPlus className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Belum ada pendaftaran</h3>\n              <p className=\"text-gray-500 mb-4\">\n                Pendaftaran akan muncul setelah customer mengisi form pendaftaran\n              </p>\n              <a \n                href=\"/register\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"btn-primary inline-flex items-center\"\n              >\n                <UserPlus className=\"h-4 w-4 mr-2\" />\n                Buka Form Pendaftaran\n              </a>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"table\">\n                <thead className=\"table-header\">\n                  <tr>\n                    {/* Bulk Selection Checkbox */}\n                    <th className=\"table-header-cell w-12\">\n                      <input\n                        type=\"checkbox\"\n                        checked={selectAll}\n                        onChange={handleSelectAll}\n                        className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                        title=\"Pilih Semua\"\n                      />\n                    </th>\n                    <th \n                      className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\"\n                      onClick={() => handleSort('registration_number')}\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <span>Nomor Registrasi</span>\n                        {getSortIcon('registration_number')}\n                      </div>\n                    </th>\n                    <th \n                      className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\"\n                      onClick={() => handleSort('full_name')}\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <span>Customer</span>\n                        {getSortIcon('full_name')}\n                      </div>\n                    </th>\n                    <th className=\"table-header-cell\">Paket</th>\n                    <th \n                      className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\"\n                      onClick={() => handleSort('status')}\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <span>Status</span>\n                        {getSortIcon('status')}\n                      </div>\n                    </th>\n                    <th \n                      className=\"table-header-cell cursor-pointer hover:bg-gray-100 transition-colors\"\n                      onClick={() => handleSort('created_at')}\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <span>Tanggal</span>\n                        {getSortIcon('created_at')}\n                      </div>\n                    </th>\n                    <th className=\"table-header-cell\">Quick Actions</th>\n                  </tr>\n                </thead>\n                <tbody className=\"table-body\">\n                  {registrationsData?.data?.registrations.map((reg) => (\n                    <tr \n                      key={reg.id}\n                      onClick={() => navigate(`/registrations/${reg.id}`)}\n                      className=\"group cursor-pointer hover:bg-blue-50 hover:shadow-md hover:border-l-4 hover:border-l-green-500 transition-all duration-200\"\n                      title=\"Klik untuk lihat detail registrasi\"\n                    >\n                      {/* Bulk Selection Checkbox */}\n                      <td \n                        className=\"table-cell\"\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedRegistrations.includes(reg.id)}\n                          onChange={() => handleSelectRegistration(reg.id)}\n                          className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                        />\n                      </td>\n\n                      {/* Registration Number with Copy */}\n                      <td className=\"table-cell\">\n                        <div className=\"font-medium text-blue-600 flex items-center gap-1\">\n                          <span>{reg.registration_number}</span>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              handleCopyToClipboard(reg.registration_number, 'Registration Number')\n                            }}\n                            className=\"opacity-0 group-hover:opacity-100 p-0.5 hover:bg-gray-200 rounded transition-opacity\"\n                            title=\"Copy Registration Number\"\n                          >\n                            {copiedField === 'Registration Number' ? (\n                              <Check className=\"h-3 w-3 text-green-600\" />\n                            ) : (\n                              <Copy className=\"h-3 w-3 text-gray-500\" />\n                            )}\n                          </button>\n                        </div>\n                        <div className=\"text-sm text-gray-500\">{new Date(reg.created_at).toLocaleDateString('id-ID')}</div>\n                      </td>\n\n                      {/* Customer with Copy */}\n                      <td className=\"table-cell\">\n                        <div className=\"font-medium text-gray-900\">{reg.full_name}</div>\n                        <div className=\"flex items-center text-sm text-gray-500 mt-1 gap-1\">\n                          <Phone className=\"h-3 w-3\" />\n                          <span>{reg.phone}</span>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              handleCopyToClipboard(reg.phone, 'Phone')\n                            }}\n                            className=\"opacity-0 group-hover:opacity-100 p-0.5 hover:bg-gray-200 rounded transition-opacity\"\n                            title=\"Copy Phone\"\n                          >\n                            {copiedField === 'Phone' ? (\n                              <Check className=\"h-3 w-3 text-green-600\" />\n                            ) : (\n                              <Copy className=\"h-3 w-3 text-gray-500\" />\n                            )}\n                          </button>\n                        </div>\n                        <div className=\"flex items-center text-sm text-gray-500 gap-1\">\n                          <Mail className=\"h-3 w-3\" />\n                          <span className=\"truncate max-w-[150px]\">{reg.email}</span>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation()\n                              handleCopyToClipboard(reg.email, 'Email')\n                            }}\n                            className=\"opacity-0 group-hover:opacity-100 p-0.5 hover:bg-gray-200 rounded transition-opacity\"\n                            title=\"Copy Email\"\n                          >\n                            {copiedField === 'Email' ? (\n                              <Check className=\"h-3 w-3 text-green-600\" />\n                            ) : (\n                              <Copy className=\"h-3 w-3 text-gray-500\" />\n                            )}\n                          </button>\n                        </div>\n                      </td>\n\n                      {/* Package */}\n                      <td className=\"table-cell\">\n                        <div className=\"font-medium\">{reg.package_name}</div>\n                        <div className=\"text-sm text-gray-500\">\n                          {formatCurrency(reg.monthly_price)}/bln\n                        </div>\n                      </td>\n\n                      {/* Status */}\n                      <td className=\"table-cell\">\n                        {getStatusBadge(reg.status)}\n                      </td>\n\n                      {/* Date */}\n                      <td className=\"table-cell\">\n                        <div className=\"text-sm text-gray-900\">\n                          {new Date(reg.created_at).toLocaleDateString('id-ID')}\n                        </div>\n                        <div className=\"text-sm text-gray-500\">\n                          {new Date(reg.created_at).toLocaleTimeString('id-ID')}\n                        </div>\n                      </td>\n\n                      {/* Quick Actions (appear on hover) */}\n                      <td \n                        className=\"table-cell\"\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        <div className=\"flex gap-1 opacity-0 group-hover:opacity-100 transition-opacity\">\n                          {/* Quick Call */}\n                          {reg.phone && (\n                            <button\n                              onClick={(e) => handleQuickCall(e, reg.phone)}\n                              className=\"p-1.5 hover:bg-green-100 rounded transition-colors\"\n                              title=\"Call Customer\"\n                            >\n                              <PhoneCall className=\"h-4 w-4 text-green-600\" />\n                            </button>\n                          )}\n\n                          {/* Quick Email */}\n                          {reg.email && (\n                            <button\n                              onClick={(e) => handleQuickEmail(e, reg.email)}\n                              className=\"p-1.5 hover:bg-blue-100 rounded transition-colors\"\n                              title=\"Email Customer\"\n                            >\n                              <MailIcon className=\"h-4 w-4 text-blue-600\" />\n                            </button>\n                          )}\n\n                          {/* Quick Verify (only for pending) */}\n                          {canVerify && reg.status === 'pending_verification' && (\n                            <button\n                              onClick={(e) => handleQuickVerify(e, reg)}\n                              className=\"p-1.5 hover:bg-blue-100 rounded transition-colors\"\n                              title=\"Quick Verify\"\n                            >\n                              <UserCheck className=\"h-4 w-4 text-blue-600\" />\n                            </button>\n                          )}\n\n                          {/* Quick Reject (only for non-final statuses) */}\n                          {canReject && !['customer_created', 'rejected', 'cancelled'].includes(reg.status) && (\n                            <button\n                              onClick={(e) => handleQuickReject(e, reg)}\n                              className=\"p-1.5 hover:bg-red-100 rounded transition-colors\"\n                              title=\"Quick Reject\"\n                            >\n                              <XCircle className=\"h-4 w-4 text-red-600\" />\n                            </button>\n                          )}\n\n                          {/* Quick Approve (only for verified) */}\n                          {reg.status === 'verified' && (\n                            <button\n                              onClick={(e) => handleQuickApprove(e, reg)}\n                              className=\"p-1.5 hover:bg-green-100 rounded transition-colors\"\n                              title=\"Quick Approve\"\n                            >\n                              <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                            </button>\n                          )}\n\n                          {/* Quick Schedule Survey (only for verified) */}\n                          {reg.status === 'verified' && (\n                            <button\n                              onClick={(e) => handleQuickScheduleSurvey(e, reg)}\n                              className=\"p-1.5 hover:bg-orange-100 rounded transition-colors\"\n                              title=\"Quick Schedule Survey\"\n                            >\n                              <Calendar className=\"h-4 w-4 text-orange-600\" />\n                            </button>\n                          )}\n\n                          {/* Quick Create Customer (only for approved) */}\n                          {reg.status === 'approved' && !reg.customer_id && (\n                            <button\n                              onClick={(e) => handleQuickCreateCustomer(e, reg)}\n                              className=\"p-1.5 hover:bg-purple-100 rounded transition-colors\"\n                              title=\"Quick Create Customer\"\n                            >\n                              <Home className=\"h-4 w-4 text-purple-600\" />\n                            </button>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n\n          {/* Pagination */}\n          {registrationsData?.data?.registrations?.length > 0 && registrationsData?.data?.pagination && (\n            <div className=\"bg-white border-t border-gray-200 px-6 py-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1 flex justify-between sm:hidden\">\n                  <button\n                    onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                    disabled={currentPage === 1}\n                    className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    Previous\n                  </button>\n                  <button\n                    onClick={() => setCurrentPage(Math.min(registrationsData.data.pagination.pages, currentPage + 1))}\n                    disabled={currentPage === registrationsData.data.pagination.pages}\n                    className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    Next\n                  </button>\n                </div>\n                <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"flex items-center gap-2\">\n                      <label className=\"text-sm text-gray-700\">Show</label>\n                      <select\n                        value={limit}\n                        onChange={(e) => {\n                          setLimit(parseInt(e.target.value))\n                          setCurrentPage(1)\n                        }}\n                        className=\"form-input py-1 px-2 text-sm border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                      >\n                        <option value=\"10\">10</option>\n                        <option value=\"25\">25</option>\n                        <option value=\"50\">50</option>\n                        <option value=\"100\">100</option>\n                      </select>\n                      <span className=\"text-sm text-gray-700\">rows</span>\n                    </div>\n                    <div className=\"border-l border-gray-300 h-6\"></div>\n                    <p className=\"text-sm text-gray-700\">\n                      Showing <span className=\"font-medium\">{(currentPage - 1) * limit + 1}</span> to{' '}\n                      <span className=\"font-medium\">\n                        {Math.min(currentPage * limit, registrationsData.data.pagination.total)}\n                      </span>{' '}\n                      of <span className=\"font-medium\">{registrationsData.data.pagination.total}</span> results\n                    </p>\n                  </div>\n                  <div>\n                    <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\n                      <button\n                        onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                        disabled={currentPage === 1}\n                        className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        <ChevronLeft className=\"h-5 w-5\" />\n                      </button>\n                      {Array.from({ length: Math.min(registrationsData.data.pagination.pages, 10) }, (_, i) => {\n                        const totalPages = registrationsData.data.pagination.pages;\n                        if (totalPages <= 10) return i + 1;\n                        if (currentPage <= 5) return i + 1;\n                        if (currentPage >= totalPages - 4) return totalPages - 9 + i;\n                        return currentPage - 5 + i;\n                      }).map((page) => (\n                        <button\n                          key={page}\n                          onClick={() => setCurrentPage(page)}\n                          className={`relative inline-flex items-center px-4 py-2 border text-sm font-medium ${\n                            currentPage === page\n                              ? 'z-10 bg-blue-50 border-blue-500 text-blue-600'\n                              : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50'\n                          }`}\n                        >\n                          {page}\n                        </button>\n                      ))}\n                      <button\n                        onClick={() => setCurrentPage(Math.min(registrationsData.data.pagination.pages, currentPage + 1))}\n                        disabled={currentPage === registrationsData.data.pagination.pages}\n                        className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        <ChevronRight className=\"h-5 w-5\" />\n                      </button>\n                    </nav>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Detail Modal */}\n        {showDetailModal && selectedRegistration && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white rounded-xl shadow-2xl max-w-3xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"sticky top-0 bg-white border-b px-8 py-6\">\n                <div className=\"flex items-center justify-between\">\n                  <h2 className=\"text-2xl font-bold text-gray-900\">Detail Pendaftaran</h2>\n                  <button\n                    onClick={() => setShowDetailModal(false)}\n                    className=\"text-gray-400 hover:text-gray-600\"\n                  >\n                    <XCircle className=\"h-6 w-6\" />\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"p-8 space-y-6\">\n                {/* Status */}\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm text-gray-600\">Status</p>\n                    <p className=\"text-xl font-bold text-gray-900 mt-1\">\n                      {getStatusBadge(selectedRegistration.status)}\n                    </p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-sm text-gray-600\">Nomor Registrasi</p>\n                    <p className=\"text-lg font-bold text-blue-600 mt-1\">\n                      {selectedRegistration.registration_number}\n                    </p>\n                  </div>\n                </div>\n\n                {/* Personal Info */}\n                <div className=\"border-t pt-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Data Pribadi</h3>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <p className=\"text-sm text-gray-600\">Nama Lengkap</p>\n                      <p className=\"font-medium text-gray-900\">{selectedRegistration.full_name}</p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-gray-600\">Email</p>\n                      <p className=\"font-medium text-gray-900\">{selectedRegistration.email}</p>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-gray-600\">WhatsApp</p>\n                      <p className=\"font-medium text-green-600 flex items-center\">\n                        {selectedRegistration.phone}\n                        <Shield className=\"h-4 w-4 ml-1\" title=\"Verified\" />\n                      </p>\n                    </div>\n                    {selectedRegistration.id_card_number && (\n                      <div>\n                        <p className=\"text-sm text-gray-600\">Nomor KTP</p>\n                        <p className=\"font-medium text-gray-900\">{selectedRegistration.id_card_number}</p>\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Address */}\n                <div className=\"border-t pt-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Alamat</h3>\n                  <p className=\"text-gray-900\">{selectedRegistration.address}</p>\n                  {(selectedRegistration.rt || selectedRegistration.rw) && (\n                    <p className=\"text-gray-600 text-sm mt-1\">\n                      RT {selectedRegistration.rt || '-'} / RW {selectedRegistration.rw || '-'}\n                    </p>\n                  )}\n                  <p className=\"text-gray-600 text-sm mt-1\">\n                    {selectedRegistration.kelurahan}, {selectedRegistration.kecamatan}, {selectedRegistration.city} {selectedRegistration.postal_code}\n                  </p>\n                  {selectedRegistration.address_notes && (\n                    <p className=\"text-gray-600 text-sm mt-2 italic\">\n                      Catatan: {selectedRegistration.address_notes}\n                    </p>\n                  )}\n                </div>\n\n                {/* Package Info */}\n                <div className=\"border-t pt-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Paket</h3>\n                  <div className=\"bg-blue-50 rounded-lg p-6 border border-blue-200\">\n                    <p className=\"text-xl font-bold text-gray-900\">{selectedRegistration.package_name}</p>\n                    <p className=\"text-lg text-gray-600 mt-1\">{selectedRegistration.bandwidth_down} Mbps</p>\n                    <p className=\"text-2xl font-bold text-blue-600 mt-2\">\n                      Rp {selectedRegistration.monthly_price?.toLocaleString('id-ID')}/bulan\n                    </p>\n                  </div>\n                </div>\n\n                {/* Actions Section */}\n                {!['rejected'].includes(selectedRegistration.status) && selectedRegistration.status !== 'customer_created' && (\n                  <div className=\"border-t pt-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                      {selectedRegistration.status === 'approved' && !selectedRegistration.customer_id \n                        ? 'Create Customer' \n                        : 'Available Actions'\n                      }\n                    </h3>\n\n                    {/* PENDING VERIFICATION: Verify or Reject */}\n                    {selectedRegistration.status === 'pending_verification' && (\n                      <div className=\"space-y-4\">\n                        <div className=\"space-y-3\">\n                          <label className=\"flex items-center p-4 border-2 rounded-lg cursor-pointer hover:bg-green-50 transition-colors\"\n                            style={{ borderColor: actionType === 'verified' ? '#10b981' : '#e5e7eb' }}\n                          >\n                            <input\n                              type=\"radio\"\n                              name=\"action\"\n                              value=\"verified\"\n                              checked={actionType === 'verified'}\n                              onChange={(e) => setActionType(e.target.value)}\n                              className=\"h-4 w-4 text-green-600 focus:ring-green-500\"\n                            />\n                            <div className=\"ml-3\">\n                              <p className=\"text-sm font-medium text-gray-900\">✅ Verify - Verifikasi Data</p>\n                              <p className=\"text-sm text-gray-600\">Data sudah diperiksa dan valid</p>\n                            </div>\n                          </label>\n\n                          <label className=\"flex items-center p-4 border-2 rounded-lg cursor-pointer hover:bg-red-50 transition-colors\"\n                            style={{ borderColor: actionType === 'rejected' ? '#ef4444' : '#e5e7eb' }}\n                          >\n                            <input\n                              type=\"radio\"\n                              name=\"action\"\n                              value=\"rejected\"\n                              checked={actionType === 'rejected'}\n                              onChange={(e) => setActionType(e.target.value)}\n                              className=\"h-4 w-4 text-red-600 focus:ring-red-500\"\n                            />\n                            <div className=\"ml-3\">\n                              <p className=\"text-sm font-medium text-gray-900\">❌ Reject - Tolak Pendaftaran</p>\n                              <p className=\"text-sm text-gray-600\">Data tidak valid atau tidak memenuhi syarat</p>\n                            </div>\n                          </label>\n                        </div>\n                      </div>\n                    )}\n\n                    {/* VERIFIED: Approve, Schedule Survey, or Reject */}\n                    {selectedRegistration.status === 'verified' && (\n                      <div className=\"space-y-4\">\n                        <div className=\"space-y-3\">\n                          <label className=\"flex items-center p-4 border-2 rounded-lg cursor-pointer hover:bg-green-50 transition-colors\"\n                            style={{ borderColor: actionType === 'approved' ? '#10b981' : '#e5e7eb' }}\n                          >\n                            <input\n                              type=\"radio\"\n                              name=\"action\"\n                              value=\"approved\"\n                              checked={actionType === 'approved'}\n                              onChange={(e) => setActionType(e.target.value)}\n                              className=\"h-4 w-4 text-green-600 focus:ring-green-500\"\n                            />\n                            <div className=\"ml-3\">\n                              <p className=\"text-sm font-medium text-gray-900\">✅ Approve - Setujui Langsung</p>\n                              <p className=\"text-sm text-gray-600\">Skip survey, langsung create customer (Fast Track)</p>\n                            </div>\n                          </label>\n\n                          <label className=\"flex items-center p-4 border-2 rounded-lg cursor-pointer hover:bg-indigo-50 transition-colors\"\n                            style={{ borderColor: actionType === 'survey_scheduled' ? '#6366f1' : '#e5e7eb' }}\n                          >\n                            <input\n                              type=\"radio\"\n                              name=\"action\"\n                              value=\"survey_scheduled\"\n                              checked={actionType === 'survey_scheduled'}\n                              onChange={(e) => setActionType(e.target.value)}\n                              className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500\"\n                            />\n                            <div className=\"ml-3\">\n                              <p className=\"text-sm font-medium text-gray-900\">📅 Schedule Survey</p>\n                              <p className=\"text-sm text-gray-600\">Jadwalkan survey lokasi terlebih dahulu</p>\n                            </div>\n                          </label>\n\n                          <label className=\"flex items-center p-4 border-2 rounded-lg cursor-pointer hover:bg-red-50 transition-colors\"\n                            style={{ borderColor: actionType === 'rejected' ? '#ef4444' : '#e5e7eb' }}\n                          >\n                            <input\n                              type=\"radio\"\n                              name=\"action\"\n                              value=\"rejected\"\n                              checked={actionType === 'rejected'}\n                              onChange={(e) => setActionType(e.target.value)}\n                              className=\"h-4 w-4 text-red-600 focus:ring-red-500\"\n                            />\n                            <div className=\"ml-3\">\n                              <p className=\"text-sm font-medium text-gray-900\">❌ Reject - Tolak Pendaftaran</p>\n                              <p className=\"text-sm text-gray-600\">Data tidak memenuhi syarat</p>\n                            </div>\n                          </label>\n                        </div>\n                      </div>\n                    )}\n\n                    {/* SURVEY SCHEDULED: Survey Completed or Reject */}\n                    {selectedRegistration.status === 'survey_scheduled' && (\n                      <div className=\"space-y-4\">\n                        <div className=\"bg-indigo-50 border-2 border-indigo-200 rounded-lg p-4 mb-4\">\n                          <p className=\"text-sm font-medium text-indigo-900\">📅 Survey Scheduled</p>\n                          <p className=\"text-sm text-indigo-700 mt-1\">\n                            Survey telah dijadwalkan. Setelah survey dilakukan, update status di bawah ini.\n                          </p>\n                        </div>\n                        <div className=\"space-y-3\">\n                          <label className=\"flex items-center p-4 border-2 rounded-lg cursor-pointer hover:bg-green-50 transition-colors\"\n                            style={{ borderColor: actionType === 'survey_completed' ? '#10b981' : '#e5e7eb' }}\n                          >\n                            <input\n                              type=\"radio\"\n                              name=\"action\"\n                              value=\"survey_completed\"\n                              checked={actionType === 'survey_completed'}\n                              onChange={(e) => setActionType(e.target.value)}\n                              className=\"h-4 w-4 text-green-600 focus:ring-green-500\"\n                            />\n                            <div className=\"ml-3\">\n                              <p className=\"text-sm font-medium text-gray-900\">✅ Survey Completed</p>\n                              <p className=\"text-sm text-gray-600\">Survey sudah selesai, lokasi feasible untuk instalasi</p>\n                            </div>\n                          </label>\n\n                          <label className=\"flex items-center p-4 border-2 rounded-lg cursor-pointer hover:bg-red-50 transition-colors\"\n                            style={{ borderColor: actionType === 'rejected' ? '#ef4444' : '#e5e7eb' }}\n                          >\n                            <input\n                              type=\"radio\"\n                              name=\"action\"\n                              value=\"rejected\"\n                              checked={actionType === 'rejected'}\n                              onChange={(e) => setActionType(e.target.value)}\n                              className=\"h-4 w-4 text-red-600 focus:ring-red-500\"\n                            />\n                            <div className=\"ml-3\">\n                              <p className=\"text-sm font-medium text-gray-900\">❌ Reject - Tidak Feasible</p>\n                              <p className=\"text-sm text-gray-600\">Lokasi tidak memungkinkan untuk instalasi</p>\n                            </div>\n                          </label>\n                        </div>\n                      </div>\n                    )}\n\n                    {/* SURVEY COMPLETED: Approve or Reject */}\n                    {selectedRegistration.status === 'survey_completed' && (\n                      <div className=\"space-y-4\">\n                        <div className=\"bg-green-50 border-2 border-green-200 rounded-lg p-4 mb-4\">\n                          <p className=\"text-sm font-medium text-green-900\">✅ Survey Completed</p>\n                          <p className=\"text-sm text-green-700 mt-1\">Survey sudah selesai. Pilih tindakan selanjutnya di bawah ini.</p>\n                        </div>\n                        <div className=\"space-y-3\">\n                          <label className=\"flex items-center p-4 border-2 rounded-lg cursor-pointer hover:bg-green-50 transition-colors\"\n                            style={{ borderColor: actionType === 'approved' ? '#10b981' : '#e5e7eb' }}\n                          >\n                            <input\n                              type=\"radio\"\n                              name=\"action\"\n                              value=\"approved\"\n                              checked={actionType === 'approved'}\n                              onChange={(e) => setActionType(e.target.value)}\n                              className=\"h-4 w-4 text-green-600 focus:ring-green-500\"\n                            />\n                            <div className=\"ml-3\">\n                              <p className=\"text-sm font-medium text-gray-900\">✅ Approve - Setujui Pendaftaran</p>\n                              <p className=\"text-sm text-gray-600\">Lokasi feasible, siap untuk create customer</p>\n                            </div>\n                          </label>\n\n                          <label className=\"flex items-center p-4 border-2 rounded-lg cursor-pointer hover:bg-red-50 transition-colors\"\n                            style={{ borderColor: actionType === 'rejected' ? '#ef4444' : '#e5e7eb' }}\n                          >\n                            <input\n                              type=\"radio\"\n                              name=\"action\"\n                              value=\"rejected\"\n                              checked={actionType === 'rejected'}\n                              onChange={(e) => setActionType(e.target.value)}\n                              className=\"h-4 w-4 text-red-600 focus:ring-red-500\"\n                            />\n                            <div className=\"ml-3\">\n                              <p className=\"text-sm font-medium text-gray-900\">❌ Reject - Tidak Feasible</p>\n                              <p className=\"text-sm text-gray-600\">Hasil survey menunjukkan lokasi tidak layak</p>\n                            </div>\n                          </label>\n                        </div>\n                      </div>\n                    )}\n\n                    {/* APPROVED: Create Customer */}\n                    {selectedRegistration.status === 'approved' && !selectedRegistration.customer_id && (\n                      <div className=\"space-y-4\">\n                        <div className=\"bg-purple-50 border-2 border-purple-200 rounded-lg p-4\">\n                          <p className=\"text-sm font-medium text-purple-900\">🎉 Registration Approved!</p>\n                          <p className=\"text-sm text-purple-700 mt-1\">\n                            Pendaftaran sudah disetujui. Klik tombol di bawah untuk membuat data customer dan ticket instalasi.\n                          </p>\n                        </div>\n                        <button\n                          onClick={() => handleCreateCustomer(selectedRegistration)}\n                          disabled={createCustomerMutation.isLoading}\n                          className=\"w-full py-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:bg-gray-400 transition-colors inline-flex items-center justify-center\"\n                        >\n                          {createCustomerMutation.isLoading ? (\n                            <>\n                              <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\n                              Processing...\n                            </>\n                          ) : (\n                            <>\n                              <HomeIcon className=\"h-5 w-5 mr-2\" />\n                              Buat Customer & Ticket Instalasi\n                            </>\n                          )}\n                        </button>\n                      </div>\n                    )}\n\n                    {/* Conditional Form Fields */}\n                    {actionType && selectedRegistration.status !== 'approved' && (\n                      <div className=\"mt-6 space-y-4\">\n                        {/* Survey Date - Only for survey_scheduled */}\n                        {actionType === 'survey_scheduled' && (\n                          <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                              Tanggal Survey <span className=\"text-red-500\">*</span>\n                            </label>\n                            <input\n                              type=\"datetime-local\"\n                              value={surveyDate}\n                              onChange={(e) => setSurveyDate(e.target.value)}\n                              className=\"form-input\"\n                              min={new Date().toISOString().slice(0, 16)}\n                            />\n                          </div>\n                        )}\n\n                        {/* Survey Results - Only for survey_completed */}\n                        {actionType === 'survey_completed' && (\n                          <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                              Hasil Survey <span className=\"text-red-500\">*</span>\n                            </label>\n                            <textarea\n                              rows={4}\n                              value={actionNotes}\n                              onChange={(e) => setActionNotes(e.target.value)}\n                              className=\"form-input\"\n                              placeholder=\"Contoh: Survey completed successfully. ODP distance: 50m. Cable needed: 60m. No obstacles found. Location is feasible for installation.\"\n                            />\n                            <p className=\"text-xs text-gray-500 mt-1\">\n                              💡 Tips: Sebutkan jarak ODP, panjang kabel needed, hambatan (jika ada), dan kesimpulan kelayakan instalasi.\n                            </p>\n                          </div>\n                        )}\n\n                        {/* Rejection Reason - Only for rejected */}\n                        {actionType === 'rejected' && (\n                          <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                              Alasan Penolakan <span className=\"text-red-500\">*</span>\n                            </label>\n                            <textarea\n                              rows={3}\n                              value={rejectionReason}\n                              onChange={(e) => setRejectionReason(e.target.value)}\n                              className=\"form-input\"\n                              placeholder=\"Jelaskan alasan penolakan secara detail...\"\n                            />\n                          </div>\n                        )}\n\n                        {/* Notes - For all actions except survey_completed (uses actionNotes for results) */}\n                        {actionType !== 'survey_completed' && (\n                          <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                              Catatan (Opsional)\n                            </label>\n                            <textarea\n                              rows={2}\n                              value={actionNotes}\n                              onChange={(e) => setActionNotes(e.target.value)}\n                              className=\"form-input\"\n                              placeholder=\"Tambahkan catatan tambahan...\"\n                            />\n                          </div>\n                        )}\n\n                        {/* Submit Button */}\n                        <div className=\"flex gap-3 justify-end pt-4\">\n                          <button\n                            onClick={() => {\n                              setActionType(null)\n                              setActionNotes('')\n                              setRejectionReason('')\n                              setSurveyDate('')\n                            }}\n                            className=\"px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-100 transition-colors\"\n                          >\n                            Batal\n                          </button>\n                          <button\n                            onClick={handleSubmitAction}\n                            disabled={updateStatusMutation.isLoading}\n                            className={`\n                              px-6 py-2 rounded-lg text-white transition-colors inline-flex items-center\n                              ${actionType === 'rejected' \n                                ? 'bg-red-600 hover:bg-red-700' \n                                : actionType === 'survey_scheduled'\n                                ? 'bg-indigo-600 hover:bg-indigo-700'\n                                : 'bg-green-600 hover:bg-green-700'\n                              }\n                              disabled:bg-gray-400 disabled:cursor-not-allowed\n                            `}\n                          >\n                            {updateStatusMutation.isLoading ? (\n                              <>\n                                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                                Processing...\n                              </>\n                            ) : (\n                              <>\n                                <CheckCircle className=\"h-5 w-5 mr-2\" />\n                                Konfirmasi\n                              </>\n                            )}\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n\n      </div>\n\n      {/* Create Customer Confirmation Modal */}\n      <ConfirmationModal\n        isOpen={showCreateCustomerModal}\n        onClose={() => {\n          setShowCreateCustomerModal(false)\n          setCustomerToCreate(null)\n        }}\n        onConfirm={confirmCreateCustomer}\n        title=\"🏠 Buat Customer & Ticket Instalasi\"\n        message={customerToCreate ? `Apakah Anda yakin ingin membuat customer dan ticket instalasi untuk \"${customerToCreate.full_name}\"?` : ''}\n        confirmText=\"Ya, Buat Customer\"\n        cancelText=\"Batal\"\n        type=\"success\"\n        isLoading={createCustomerMutation.isLoading}\n      >\n        {customerToCreate && (\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3 mt-2\">\n            <div className=\"text-sm space-y-1\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Nama:</span>\n                <span className=\"font-medium text-gray-900\">{customerToCreate.full_name}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">No. HP:</span>\n                <span className=\"font-medium text-gray-900\">{customerToCreate.phone || '-'}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Paket:</span>\n                <span className=\"font-medium text-gray-900\">{customerToCreate.service_package || '-'}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Alamat:</span>\n                <span className=\"font-medium text-gray-900 text-right ml-2\">{customerToCreate.installation_address?.substring(0, 40)}...</span>\n              </div>\n            </div>\n            <div className=\"mt-3 pt-3 border-t border-blue-200\">\n              <p className=\"text-xs text-gray-600\">\n                ✅ Customer baru akan dibuat<br/>\n                🎫 Ticket instalasi akan otomatis dibuatkan<br/>\n                📧 Notifikasi akan dikirim\n              </p>\n            </div>\n          </div>\n        )}\n      </ConfirmationModal>\n\n      {/* Quick Verify Modal */}\n      <ConfirmationModal\n        isOpen={showQuickVerifyModal}\n        onClose={() => {\n          setShowQuickVerifyModal(false)\n          setQuickActionTarget(null)\n        }}\n        onConfirm={confirmQuickVerify}\n        title=\"✅ Verifikasi Data\"\n        message={quickActionTarget ? `Verifikasi data pendaftaran dari \"${quickActionTarget.full_name}\"?` : ''}\n        confirmText=\"Ya, Verifikasi\"\n        cancelText=\"Batal\"\n        type=\"info\"\n      >\n        {quickActionTarget && (\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3 mt-2\">\n            <p className=\"text-sm text-gray-700\">\n              ✅ Status akan berubah menjadi <span className=\"font-semibold text-blue-900\">\"Verified\"</span><br/>\n              📋 Data sudah diperiksa dan valid\n            </p>\n          </div>\n        )}\n      </ConfirmationModal>\n\n      {/* Quick Approve Modal */}\n      <ConfirmationModal\n        isOpen={showQuickApproveModal}\n        onClose={() => {\n          setShowQuickApproveModal(false)\n          setQuickActionTarget(null)\n        }}\n        onConfirm={confirmQuickApprove}\n        title=\"✅ Approve Registrasi\"\n        message={quickActionTarget ? `Setujui pendaftaran dari \"${quickActionTarget.full_name}\"?` : ''}\n        confirmText=\"Ya, Approve\"\n        cancelText=\"Batal\"\n        type=\"success\"\n      >\n        {quickActionTarget && (\n          <div className=\"bg-green-50 border border-green-200 rounded-lg p-3 mt-2\">\n            <p className=\"text-sm text-gray-700\">\n              ✅ Status akan berubah menjadi <span className=\"font-semibold text-green-900\">\"Approved\"</span><br/>\n              🎉 Pendaftaran disetujui\n            </p>\n          </div>\n        )}\n      </ConfirmationModal>\n\n      {/* Quick Schedule Survey Modal */}\n      <ConfirmationModal\n        isOpen={showQuickScheduleSurveyModal}\n        onClose={() => {\n          setShowQuickScheduleSurveyModal(false)\n          setQuickActionTarget(null)\n        }}\n        onConfirm={confirmQuickScheduleSurvey}\n        title=\"📅 Jadwalkan Survey\"\n        message={quickActionTarget ? `Jadwalkan survey untuk \"${quickActionTarget.full_name}\"` : ''}\n        confirmText=\"Ya, Jadwalkan\"\n        cancelText=\"Batal\"\n        type=\"warning\"\n      >\n        {quickActionTarget && (\n          <div className=\"mt-3\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Tanggal Survey *\n            </label>\n            <input\n              type=\"date\"\n              value={quickSurveyDate}\n              onChange={(e) => setQuickSurveyDate(e.target.value)}\n              min={new Date().toISOString().split('T')[0]}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500\"\n            />\n          </div>\n        )}\n      </ConfirmationModal>\n\n      {/* Quick Reject Modal */}\n      <ConfirmationModal\n        isOpen={showQuickRejectModal}\n        onClose={() => {\n          setShowQuickRejectModal(false)\n          setQuickActionTarget(null)\n          setQuickRejectReason('')\n        }}\n        onConfirm={confirmQuickReject}\n        title=\"❌ Reject Registrasi\"\n        message={quickActionTarget ? `Tolak pendaftaran dari \"${quickActionTarget.full_name}\"?` : ''}\n        confirmText=\"Ya, Reject\"\n        cancelText=\"Batal\"\n        type=\"danger\"\n      >\n        {quickActionTarget && (\n          <div className=\"mt-3\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Alasan Reject *\n            </label>\n            <textarea\n              value={quickRejectReason}\n              onChange={(e) => setQuickRejectReason(e.target.value)}\n              rows={3}\n              placeholder=\"Tuliskan alasan reject...\"\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500 resize-none\"\n            />\n          </div>\n        )}\n      </ConfirmationModal>\n    </div>\n  )\n}\n\nexport default RegistrationsPage\n\n"],"names":["RegistrationsPage","navigate","useNavigate","queryClient","useQueryClient","currentUser","isAdmin","isSupervisor","isCustomerService","useAuth","currentPage","setCurrentPage","useState","limit","setLimit","selectedRegistration","setSelectedRegistration","showDetailModal","setShowDetailModal","actionType","setActionType","actionNotes","setActionNotes","rejectionReason","setRejectionReason","surveyDate","setSurveyDate","sortBy","setSortBy","sortOrder","setSortOrder","isExporting","setIsExporting","filters","setFilters","selectedRegistrations","setSelectedRegistrations","selectAll","setSelectAll","copiedField","setCopiedField","showCreateCustomerModal","setShowCreateCustomerModal","customerToCreate","setCustomerToCreate","showQuickVerifyModal","setShowQuickVerifyModal","showQuickRejectModal","setShowQuickRejectModal","showQuickApproveModal","setShowQuickApproveModal","showQuickScheduleSurveyModal","setShowQuickScheduleSurveyModal","quickActionTarget","setQuickActionTarget","quickRejectReason","setQuickRejectReason","quickSurveyDate","setQuickSurveyDate","formatCurrency","amount","registrationsData","isLoading","useQuery","registrationService","__spreadProps","__spreadValues","statsData","response","updateStatusMutation","useMutation","id","data","_a","toast","error","_b","createCustomerMutation","handleSubmitAction","handleCreateCustomer","registration","confirmCreateCustomer","handleSort","column","getSortIcon","jsx","ArrowUpDown","ArrowUp","ArrowDown","getStatusBadge","status","badges","badge","handleExport","__async","allRegistrations","getStatusLabel","exportData","reg","index","formatDate","formatCurrencyExport","formatDateOnly","result","exportToExcel","handleSelectAll","e","registrations","r","handleSelectRegistration","regId","newSelected","handleBulkVerify","successCount","errorCount","handleBulkReject","reason","handleCopyToClipboard","text","fieldName","err","handleQuickVerify","confirmQuickVerify","handleQuickReject","confirmQuickReject","handleQuickCall","phone","handleQuickEmail","email","handleQuickCreateCustomer","handleQuickApprove","confirmQuickApprove","handleQuickScheduleSurvey","confirmQuickScheduleSurvey","hasAccess","canVerify","canReject","stats","totalRegistrations","_c","useEffect","handleRegistrationUpdate","handleNewRegistration","handleCustomerCreated","socketService","jsxs","Fragment","Loader2","Download","Link","BarChart3","UserPlus","UserCheck","XCircle","KPICard","FileCheck","Clock","isFiltered","Calendar","CheckCircle","Home","Search","LoadingSpinner","_d","Check","Copy","Phone","Mail","PhoneCall","MailIcon","_g","_f","_h","ChevronLeft","_","i","totalPages","page","ChevronRight","Shield","_i","ConfirmationModal","_j","ShieldAlert"],"mappings":"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"}